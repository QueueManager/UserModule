

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Nov 17 18:34:19 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  000E                     	;# 
    39  000E                     	;# 
    40  000F                     	;# 
    41  0010                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0014                     	;# 
    46  0015                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001D                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0087                     	;# 
    63  0089                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  008F                     	;# 
    68  0090                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0093                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0097                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  0105                     	;# 
    87  0107                     	;# 
    88  0108                     	;# 
    89  0109                     	;# 
    90  010C                     	;# 
    91  010C                     	;# 
    92  010D                     	;# 
    93  010E                     	;# 
    94  010F                     	;# 
    95  0185                     	;# 
    96  0187                     	;# 
    97  0188                     	;# 
    98  0189                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101                           
   102                           	psect	idataBANK0
   103  01D1                     __pidataBANK0:	
   104                           
   105                           ;initializer for SPI_sendString@F1588
   106  01D1  3401               	retlw	1
   107  01D2  3400               	retlw	0
   108  01D3  3400               	retlw	0
   109  01D4  3401               	retlw	1
   110  000B                     _INTCON	set	11
   111  000B                     _INTCONbits	set	11
   112  000C                     _PIR1bits	set	12
   113  0005                     _PORTA	set	5
   114  0005                     _PORTAbits	set	5
   115  0006                     _PORTB	set	6
   116  0006                     _PORTBbits	set	6
   117  0007                     _PORTC	set	7
   118  0018                     _RCSTA	set	24
   119  0018                     _RCSTAbits	set	24
   120  0013                     _SSPBUF	set	19
   121  0014                     _SSPCON	set	20
   122  0014                     _SSPCONbits	set	20
   123  0096                     _IOCB	set	150
   124  008C                     _PIE1	set	140
   125  008C                     _PIE1bits	set	140
   126  0094                     _SSPSTAT	set	148
   127  0094                     _SSPSTATbits	set	148
   128  0085                     _TRISA	set	133
   129  0086                     _TRISB	set	134
   130  0098                     _TXSTAbits	set	152
   131  042D                     _TRISA5	set	1069
   132  043B                     _TRISC3	set	1083
   133  043C                     _TRISC4	set	1084
   134  043D                     _TRISC5	set	1085
   135  043E                     _TRISC6	set	1086
   136  043F                     _TRISC7	set	1087
   137  040F                     _nRBPU	set	1039
   138  0188                     _ANSEL	set	392
   139  0189                     _ANSELH	set	393
   140                           
   141                           ; #config settings
   142  0000                     
   143                           	psect	cinit
   144  0013                     start_initialization:	
   145  0013                     __initialization:	
   146                           
   147                           ; Initialize objects allocated to BANK0
   148  0013  118A  21D1  118A   	fcall	__pidataBANK0	;fetch initializer
   149  0016  00E0               	movwf	__pdataBANK0& (0+127)
   150  0017  118A  21D2  118A   	fcall	__pidataBANK0+1	;fetch initializer
   151  001A  00E1               	movwf	(__pdataBANK0+1)& (0+127)
   152  001B  118A  21D3  118A   	fcall	__pidataBANK0+2	;fetch initializer
   153  001E  00E2               	movwf	(__pdataBANK0+2)& (0+127)
   154  001F  118A  21D4  118A   	fcall	__pidataBANK0+3	;fetch initializer
   155  0022  00E3               	movwf	(__pdataBANK0+3)& (0+127)
   156                           
   157                           ; Clear objects allocated to BANK2
   158  0023  1783               	bsf	3,7	;select IRP bank2
   159  0024  3020               	movlw	low __pbssBANK2
   160  0025  0084               	movwf	4
   161  0026  3048               	movlw	low (__pbssBANK2+40)
   162  0027  118A  21C2  118A   	fcall	clear_ram0
   163                           
   164                           ; Clear objects allocated to BANK1
   165  002A  1383               	bcf	3,7	;select IRP bank0
   166  002B  30A0               	movlw	low __pbssBANK1
   167  002C  0084               	movwf	4
   168  002D  30F0               	movlw	low (__pbssBANK1+80)
   169  002E  118A  21C2  118A   	fcall	clear_ram0
   170                           
   171                           ; Clear objects allocated to BANK0
   172  0031  3020               	movlw	low __pbssBANK0
   173  0032  0084               	movwf	4
   174  0033  3056               	movlw	low (__pbssBANK0+54)
   175  0034  118A  21C2  118A   	fcall	clear_ram0
   176                           
   177                           ; Clear objects allocated to COMMON
   178  0037  3078               	movlw	low __pbssCOMMON
   179  0038  0084               	movwf	4
   180  0039  307E               	movlw	low (__pbssCOMMON+6)
   181  003A  118A  21C2         	fcall	clear_ram0
   182  003C                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185  003C                     __end_of__initialization:	
   186  003C  0183               	clrf	3
   187  003D  118A  28B2         	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMMON
   190  0078                     __pbssCOMMON:	
   191  0078                     _clast:	
   192  0078                     	ds	1
   193  0079                     _csize:	
   194  0079                     	ds	1
   195  007A                     _mlast:	
   196  007A                     	ds	1
   197  007B                     _msize:	
   198  007B                     	ds	1
   199  007C                     _pmlast:	
   200  007C                     	ds	1
   201  007D                     _pmsize:	
   202  007D                     	ds	1
   203                           
   204                           	psect	bssBANK0
   205  0020                     __pbssBANK0:	
   206  0020                     _mqueue:	
   207  0020                     	ds	40
   208  0048                     _cCount:	
   209  0048                     	ds	2
   210  004A                     _mCount:	
   211  004A                     	ds	2
   212  004C                     _pcCount:	
   213  004C                     	ds	2
   214  004E                     _pmCount:	
   215  004E                     	ds	2
   216  0050                     _cnext:	
   217  0050                     	ds	1
   218  0051                     _mnext:	
   219  0051                     	ds	1
   220  0052                     _pclast:	
   221  0052                     	ds	1
   222  0053                     _pcnext:	
   223  0053                     	ds	1
   224  0054                     _pcsize:	
   225  0054                     	ds	1
   226  0055                     _pmnext:	
   227  0055                     	ds	1
   228                           
   229                           	psect	dataBANK0
   230  0060                     __pdataBANK0:	
   231  0060                     SPI_sendString@F1588:	
   232  0060                     	ds	4
   233                           
   234                           	psect	bssBANK1
   235  00A0                     __pbssBANK1:	
   236  00A0                     _cqueue:	
   237  00A0                     	ds	40
   238  00C8                     _pmqueue:	
   239  00C8                     	ds	40
   240                           
   241                           	psect	bssBANK2
   242  0120                     __pbssBANK2:	
   243  0120                     _pcqueue:	
   244  0120                     	ds	40
   245                           
   246                           	psect	clrtext
   247  01C2                     clear_ram0:	
   248                           ;	Called with FSR containing the base address, and
   249                           ;	W with the last address+1
   250                           
   251  01C2  0064               	clrwdt	;clear the watchdog before getting into this loop
   252  01C3                     clrloop0:	
   253  01C3  0180               	clrf	0	;clear RAM location pointed to by FSR
   254  01C4  0A84               	incf	4,f	;increment pointer
   255  01C5  0604               	xorwf	4,w	;XOR with final address
   256  01C6  1903               	btfsc	3,2	;have we reached the end yet?
   257  01C7  3400               	retlw	0	;all done for this memory range, return
   258  01C8  0604               	xorwf	4,w	;XOR again to restore value
   259  01C9  29C3               	goto	clrloop0	;do the next byte
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:	
   263  0070                     ?_IO_setup:	
   264  0070                     ?_SPI_setup_master:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_SPI_send:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ??_SPI_send:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_SPI_sendString:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_getNextManager:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ??_getNextManager:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_CashierNormalButton:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_ManagerNormalButton:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_buttonINT:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     SPI_send@data:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 1 bytes @ 0x0
   299  0070                     	ds	1
   300  0071                     ??_SPI_sendString:	
   301  0071                     ??_ManagerNormalButton:	
   302                           ; 1 bytes @ 0x1
   303                           
   304  0071                     SPI_sendString@data:	
   305                           ; 1 bytes @ 0x1
   306                           
   307                           
   308                           ; 4 bytes @ 0x1
   309  0071                     	ds	4
   310  0075                     SPI_sendString@i:	
   311                           
   312                           ; 2 bytes @ 0x5
   313  0075                     	ds	2
   314  0077                     ??_CashierNormalButton:	
   315                           
   316                           ; 1 bytes @ 0x7
   317  0077                     	ds	1
   318                           
   319                           	psect	cstackBANK0
   320  0056                     __pcstackBANK0:	
   321  0056                     ??_buttonINT:	
   322                           
   323                           ; 1 bytes @ 0x0
   324  0056                     	ds	7
   325  005D                     ??_IO_setup:	
   326  005D                     ??_SPI_setup_master:	
   327                           ; 1 bytes @ 0x7
   328                           
   329  005D                     ??_main:	
   330                           ; 1 bytes @ 0x7
   331                           
   332                           
   333                           ; 1 bytes @ 0x7
   334  005D                     	ds	3
   335                           
   336                           	psect	maintext
   337  00B2                     __pmaintext:	
   338 ;;
   339 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   340 ;;
   341 ;; *************** function _main *****************
   342 ;; Defined at:
   343 ;;		line 375 in file "main.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0, pclath, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : B00/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   357 ;;      Params:         0       0       0       0
   358 ;;      Locals:         0       0       0       0
   359 ;;      Temps:          0       3       0       0
   360 ;;      Totals:         0       3       0       0
   361 ;;Total ram usage:        3 bytes
   362 ;; Hardware stack levels required when called:    5
   363 ;; This function calls:
   364 ;;		_IO_setup
   365 ;;		_SPI_setup_master
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           
   372                           ;psect for function _main
   373  00B2                     _main:	
   374                           
   375                           ;main.c: 376: nRBPU = 0;
   376                           
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   379  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   380  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   381  00B4  1381               	bcf	1,7	;volatile
   382                           
   383                           ;main.c: 378: ANSEL = 0x00;
   384  00B5  1683               	bsf	3,5	;RP0=1, select bank3
   385  00B6  1703               	bsf	3,6	;RP1=1, select bank3
   386  00B7  0188               	clrf	8	;volatile
   387                           
   388                           ;main.c: 379: PORTA = 0x00;
   389  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   390  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   391  00BA  0185               	clrf	5	;volatile
   392                           
   393                           ;main.c: 380: TRISA = 0x00;
   394  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   395  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   396  00BD  0185               	clrf	5	;volatile
   397                           
   398                           ;main.c: 382: PORTC = 0x00;
   399  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   400  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   401  00C0  0187               	clrf	7	;volatile
   402                           
   403                           ;main.c: 383: TRISC7 = 1;
   404  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   405  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   406  00C3  1787               	bsf	7,7	;volatile
   407                           
   408                           ;main.c: 384: TRISC6 = 0;
   409  00C4  1307               	bcf	7,6	;volatile
   410                           
   411                           ;main.c: 386: TRISB = 0x1E;
   412  00C5  301E               	movlw	30
   413  00C6  0086               	movwf	6	;volatile
   414                           
   415                           ;main.c: 387: PORTB = 0xFF;
   416  00C7  30FF               	movlw	255
   417  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   418  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   419  00CA  0086               	movwf	6	;volatile
   420                           
   421                           ;main.c: 389: ANSELH = 0x00;
   422  00CB  1683               	bsf	3,5	;RP0=1, select bank3
   423  00CC  1703               	bsf	3,6	;RP1=1, select bank3
   424  00CD  0189               	clrf	9	;volatile
   425                           
   426                           ;main.c: 391: INTCON = 0xC8;
   427  00CE  30C8               	movlw	200
   428  00CF  008B               	movwf	11	;volatile
   429                           
   430                           ;main.c: 396: IOCB = 0xFF;
   431  00D0  30FF               	movlw	255
   432  00D1  1683               	bsf	3,5	;RP0=1, select bank1
   433  00D2  1303               	bcf	3,6	;RP1=0, select bank1
   434  00D3  0096               	movwf	22	;volatile
   435                           
   436                           ;main.c: 397: PIE1 = 0x60;
   437  00D4  3060               	movlw	96
   438  00D5  008C               	movwf	12	;volatile
   439                           
   440                           ;main.c: 399: RCSTA = 0x90;
   441  00D6  3090               	movlw	144
   442  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   443  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   444  00D9  0098               	movwf	24	;volatile
   445                           
   446                           ;main.c: 400: TXSTAbits.SYNC = 0x00;
   447  00DA  1683               	bsf	3,5	;RP0=1, select bank1
   448  00DB  1303               	bcf	3,6	;RP1=0, select bank1
   449  00DC  1218               	bcf	24,4	;volatile
   450                           
   451                           ;main.c: 407: mlast = 0x00;
   452  00DD  01FA               	clrf	_mlast
   453                           
   454                           ;main.c: 408: mnext = 0x00;
   455  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   456  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   457  00E0  01D1               	clrf	_mnext
   458                           
   459                           ;main.c: 409: msize = 0x00;
   460  00E1  01FB               	clrf	_msize
   461                           
   462                           ;main.c: 410: pmlast = 0x00;
   463  00E2  01FC               	clrf	_pmlast
   464                           
   465                           ;main.c: 411: pmnext = 0x00;
   466  00E3  01D5               	clrf	_pmnext
   467                           
   468                           ;main.c: 412: pmsize = 0x00;
   469  00E4  01FD               	clrf	_pmsize
   470                           
   471                           ;main.c: 413: clast = 0x00;
   472  00E5  01F8               	clrf	_clast
   473                           
   474                           ;main.c: 414: cnext = 0x00;
   475  00E6  01D0               	clrf	_cnext
   476                           
   477                           ;main.c: 415: csize = 0x00;
   478  00E7  01F9               	clrf	_csize
   479                           
   480                           ;main.c: 416: pclast = 0x00;
   481  00E8  01D2               	clrf	_pclast
   482                           
   483                           ;main.c: 417: pcnext = 0x00;
   484  00E9  01D3               	clrf	_pcnext
   485                           
   486                           ;main.c: 418: pcsize = 0x00;
   487  00EA  01D4               	clrf	_pcsize
   488                           
   489                           ;main.c: 422: _delay((unsigned long)((250)*(4000000/4000.0)));
   490  00EB  3002               	movlw	2
   491  00EC  00DF               	movwf	??_main+2
   492  00ED  3045               	movlw	69
   493  00EE  00DE               	movwf	??_main+1
   494  00EF  30A9               	movlw	169
   495  00F0  00DD               	movwf	??_main
   496  00F1                     u447:	
   497  00F1  0BDD               	decfsz	??_main,f
   498  00F2  28F1               	goto	u447
   499  00F3  0BDE               	decfsz	??_main+1,f
   500  00F4  28F1               	goto	u447
   501  00F5  0BDF               	decfsz	??_main+2,f
   502  00F6  28F1               	goto	u447
   503  00F7  28F8               	nop2
   504                           
   505                           ;main.c: 424: IO_setup();
   506  00F8  118A  21CA  118A   	fcall	_IO_setup
   507                           
   508                           ;main.c: 425: SPI_setup_master();
   509  00FB  118A  21B8  118A   	fcall	_SPI_setup_master
   510  00FE                     l191:	
   511                           ;main.c: 427: while(1)
   512                           
   513                           
   514                           ;main.c: 428: {
   515  00FE  28FE               	goto	l191
   516  00FF                     __end_of_main:	
   517                           
   518                           	psect	text1
   519  01B8                     __ptext1:	
   520 ;; *************** function _SPI_setup_master *****************
   521 ;; Defined at:
   522 ;;		line 66 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   536 ;;      Params:         0       0       0       0
   537 ;;      Locals:         0       0       0       0
   538 ;;      Temps:          0       0       0       0
   539 ;;      Totals:         0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    4
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _SPI_setup_master
   552  01B8                     _SPI_setup_master:	
   553                           
   554                           ;main.c: 68: SSPSTAT = 0b10000000;
   555                           
   556                           ;incstack = 0
   557                           ; Regs used in _SPI_setup_master: [wreg]
   558  01B8  3080               	movlw	128
   559  01B9  1683               	bsf	3,5	;RP0=1, select bank1
   560  01BA  1303               	bcf	3,6	;RP1=0, select bank1
   561  01BB  0094               	movwf	20	;volatile
   562                           
   563                           ;main.c: 71: SSPCON = 0b00100001;
   564  01BC  3021               	movlw	33
   565  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   566  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   567  01BF  0094               	movwf	20	;volatile
   568                           
   569                           ;main.c: 77: PIR1bits.SSPIF = 0;
   570  01C0  118C               	bcf	12,3	;volatile
   571  01C1  0008               	return
   572  01C2                     __end_of_SPI_setup_master:	
   573                           
   574                           	psect	text2
   575  01CA                     __ptext2:	
   576 ;; *************** function _IO_setup *****************
   577 ;; Defined at:
   578 ;;		line 58 in file "main.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		None
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   592 ;;      Params:         0       0       0       0
   593 ;;      Locals:         0       0       0       0
   594 ;;      Temps:          0       0       0       0
   595 ;;      Totals:         0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    4
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _IO_setup
   608  01CA                     _IO_setup:	
   609                           
   610                           ;main.c: 59: TRISC3 = 0;
   611                           
   612                           ;incstack = 0
   613                           ; Regs used in _IO_setup: []
   614  01CA  1683               	bsf	3,5	;RP0=1, select bank1
   615  01CB  1303               	bcf	3,6	;RP1=0, select bank1
   616  01CC  1187               	bcf	7,3	;volatile
   617                           
   618                           ;main.c: 60: TRISC4 = 1;
   619  01CD  1607               	bsf	7,4	;volatile
   620                           
   621                           ;main.c: 61: TRISC5 = 0;
   622  01CE  1287               	bcf	7,5	;volatile
   623                           
   624                           ;main.c: 62: TRISA5 = 0;
   625  01CF  1285               	bcf	5,5	;volatile
   626  01D0  0008               	return
   627  01D1                     __end_of_IO_setup:	
   628                           
   629                           	psect	text3
   630  003F                     __ptext3:	
   631 ;; *************** function _buttonINT *****************
   632 ;; Defined at:
   633 ;;		line 233 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   647 ;;      Params:         0       0       0       0
   648 ;;      Locals:         0       0       0       0
   649 ;;      Temps:          0       7       0       0
   650 ;;      Totals:         0       7       0       0
   651 ;;Total ram usage:        7 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    3
   654 ;; This function calls:
   655 ;;		_CashierNormalButton
   656 ;;		_ManagerNormalButton
   657 ;;		_getNextManager
   658 ;; This function is called by:
   659 ;;		Interrupt level 1
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _buttonINT
   665  003F                     _buttonINT:	
   666                           
   667                           ;main.c: 235: if(INTCONbits.RBIF){
   668  003F  1C0B               	btfss	11,0	;volatile
   669  0040  28A5               	goto	L1
   670                           
   671                           ;main.c: 238: if(!PORTBbits.RB4){
   672  0041  1A06               	btfsc	6,4	;volatile
   673  0042  2884               	goto	i1l176
   674                           
   675                           ;main.c: 239: ManagerNormalButton();
   676  0043  118A  20FF  118A   	fcall	_ManagerNormalButton
   677                           
   678                           ;main.c: 240: PORTAbits.RA0 = 0x01;
   679  0046  1283               	bcf	3,5	;RP0=0, select bank0
   680  0047  1303               	bcf	3,6	;RP1=0, select bank0
   681  0048  1405               	bsf	5,0	;volatile
   682                           
   683                           ;main.c: 241: _delay((unsigned long)((500)*(4000000/4000.0)));
   684  0049  3003               	movlw	3
   685  004A  00D8               	movwf	??_buttonINT+2
   686  004B  308A               	movlw	138
   687  004C  00D7               	movwf	??_buttonINT+1
   688  004D  3056               	movlw	86
   689  004E  00D6               	movwf	??_buttonINT
   690  004F                     u45_27:	
   691  004F  0BD6               	decfsz	??_buttonINT,f
   692  0050  284F               	goto	u45_27
   693  0051  0BD7               	decfsz	??_buttonINT+1,f
   694  0052  284F               	goto	u45_27
   695  0053  0BD8               	decfsz	??_buttonINT+2,f
   696  0054  284F               	goto	u45_27
   697  0055  2856               	nop2
   698                           
   699                           ;main.c: 242: PORTAbits.RA0 = 0x00;
   700  0056  1283               	bcf	3,5	;RP0=0, select bank0
   701  0057  1303               	bcf	3,6	;RP1=0, select bank0
   702  0058  1005               	bcf	5,0	;volatile
   703                           
   704                           ;main.c: 244: if(msize == 0x0A){
   705  0059  300A               	movlw	10
   706  005A  067B               	xorwf	_msize,w
   707  005B  1D03               	btfss	3,2
   708  005C  286E               	goto	i1l992
   709                           
   710                           ;main.c: 245: PORTAbits.RA1 = 0x01;
   711  005D  1485               	bsf	5,1	;volatile
   712                           
   713                           ;main.c: 246: _delay((unsigned long)((500)*(4000000/4000.0)));
   714  005E  3003               	movlw	3
   715  005F  00D8               	movwf	??_buttonINT+2
   716  0060  308A               	movlw	138
   717  0061  00D7               	movwf	??_buttonINT+1
   718  0062  3056               	movlw	86
   719  0063  00D6               	movwf	??_buttonINT
   720  0064                     u46_27:	
   721  0064  0BD6               	decfsz	??_buttonINT,f
   722  0065  2864               	goto	u46_27
   723  0066  0BD7               	decfsz	??_buttonINT+1,f
   724  0067  2864               	goto	u46_27
   725  0068  0BD8               	decfsz	??_buttonINT+2,f
   726  0069  2864               	goto	u46_27
   727  006A  286B               	nop2
   728                           
   729                           ;main.c: 247: PORTAbits.RA1 = 0x00;
   730  006B  1283               	bcf	3,5	;RP0=0, select bank0
   731  006C  1303               	bcf	3,6	;RP1=0, select bank0
   732  006D  1085               	bcf	5,1	;volatile
   733  006E                     i1l992:	
   734                           
   735                           ;main.c: 248: }
   736                           ;main.c: 249: if(msize == 0x13){
   737  006E  3013               	movlw	19
   738  006F  067B               	xorwf	_msize,w
   739  0070  1D03               	btfss	3,2
   740  0071  28A4               	goto	i1l175
   741                           
   742                           ;main.c: 250: PORTAbits.RA2 = 0x01;
   743  0072  1505               	bsf	5,2	;volatile
   744                           
   745                           ;main.c: 251: _delay((unsigned long)((500)*(4000000/4000.0)));
   746  0073  3003               	movlw	3
   747  0074  00D8               	movwf	??_buttonINT+2
   748  0075  308A               	movlw	138
   749  0076  00D7               	movwf	??_buttonINT+1
   750  0077  3056               	movlw	86
   751  0078  00D6               	movwf	??_buttonINT
   752  0079                     u47_27:	
   753  0079  0BD6               	decfsz	??_buttonINT,f
   754  007A  2879               	goto	u47_27
   755  007B  0BD7               	decfsz	??_buttonINT+1,f
   756  007C  2879               	goto	u47_27
   757  007D  0BD8               	decfsz	??_buttonINT+2,f
   758  007E  2879               	goto	u47_27
   759  007F  2880               	nop2
   760                           
   761                           ;main.c: 252: PORTAbits.RA2 = 0x00;
   762  0080  1283               	bcf	3,5	;RP0=0, select bank0
   763  0081  1303               	bcf	3,6	;RP1=0, select bank0
   764  0082  1105               	bcf	5,2	;volatile
   765                           
   766                           ;main.c: 253: }
   767                           ;main.c: 255: } else if(!PORTBbits.RB3){
   768  0083  28A4               	goto	i1l175
   769  0084                     i1l176:	
   770  0084  1986               	btfsc	6,3	;volatile
   771  0085  289D               	goto	i1l180
   772                           
   773                           ;main.c: 256: getNextManager();
   774  0086  118A  21AB  118A   	fcall	_getNextManager
   775                           
   776                           ;main.c: 258: PORTAbits.RA4 = 0x01;
   777  0089  1283               	bcf	3,5	;RP0=0, select bank0
   778  008A  1303               	bcf	3,6	;RP1=0, select bank0
   779  008B  1605               	bsf	5,4	;volatile
   780                           
   781                           ;main.c: 259: _delay((unsigned long)((500)*(4000000/4000.0)));
   782  008C  3003               	movlw	3
   783  008D  00D8               	movwf	??_buttonINT+2
   784  008E  308A               	movlw	138
   785  008F  00D7               	movwf	??_buttonINT+1
   786  0090  3056               	movlw	86
   787  0091  00D6               	movwf	??_buttonINT
   788  0092                     u48_27:	
   789  0092  0BD6               	decfsz	??_buttonINT,f
   790  0093  2892               	goto	u48_27
   791  0094  0BD7               	decfsz	??_buttonINT+1,f
   792  0095  2892               	goto	u48_27
   793  0096  0BD8               	decfsz	??_buttonINT+2,f
   794  0097  2892               	goto	u48_27
   795  0098  2899               	nop2
   796                           
   797                           ;main.c: 260: PORTAbits.RA4 = 0x00;
   798  0099  1283               	bcf	3,5	;RP0=0, select bank0
   799  009A  1303               	bcf	3,6	;RP1=0, select bank0
   800  009B  1205               	bcf	5,4	;volatile
   801                           
   802                           ;main.c: 261: }
   803  009C  28A4               	goto	i1l175
   804  009D                     i1l180:	
   805                           
   806                           ;main.c: 262: else if(!PORTBbits.RB2){
   807  009D  1906               	btfsc	6,2	;volatile
   808  009E  28A3               	goto	i1l182
   809                           
   810                           ;main.c: 263: CashierNormalButton();
   811  009F  118A  2141  118A   	fcall	_CashierNormalButton
   812                           
   813                           ;main.c: 264: }
   814  00A2  28A4               	goto	i1l175
   815  00A3                     i1l182:	
   816                           
   817                           ;main.c: 265: else if(!PORTBbits.RB1){
   818  00A3  0806               	movf	6,w	;volatile
   819  00A4                     i1l175:	
   820                           
   821                           ;main.c: 267: }
   822                           ;main.c: 268: }
   823                           ;main.c: 270: INTCONbits.RBIF = 0x00;
   824  00A4  100B               	bcf	11,0	;volatile
   825  00A5                     L1:	
   826  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   827  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   828  00A7  085C               	movf	??_buttonINT+6,w
   829  00A8  00FF               	movwf	127
   830  00A9  085B               	movf	??_buttonINT+5,w
   831  00AA  008A               	movwf	10
   832  00AB  085A               	movf	??_buttonINT+4,w
   833  00AC  0084               	movwf	4
   834  00AD  0E59               	swapf	(??_buttonINT+3)^0,w
   835  00AE  0083               	movwf	3
   836  00AF  0EFE               	swapf	126,f
   837  00B0  0E7E               	swapf	126,w
   838  00B1  0009               	retfie
   839  00B2                     __end_of_buttonINT:	
   840                           
   841                           	psect	intentry
   842  0004                     __pintentry:	
   843                           ;incstack = 0
   844                           ; Regs used in _buttonINT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   845                           
   846  0004                     interrupt_function:	
   847  007E                     saved_w	set	btemp
   848  0004  00FE               	movwf	btemp
   849  0005  0E03               	swapf	3,w
   850  0006  1283               	bcf	3,5	;RP0=0, select bank0
   851  0007  1303               	bcf	3,6	;RP1=0, select bank0
   852  0008  00D9               	movwf	??_buttonINT+3
   853  0009  0804               	movf	4,w
   854  000A  00DA               	movwf	??_buttonINT+4
   855  000B  080A               	movf	10,w
   856  000C  00DB               	movwf	??_buttonINT+5
   857  000D  087F               	movf	btemp+1,w
   858  000E  00DC               	movwf	??_buttonINT+6
   859  000F  118A  283F         	ljmp	_buttonINT
   860                           
   861                           	psect	text4
   862  01AB                     __ptext4:	
   863 ;; *************** function _getNextManager *****************
   864 ;; Defined at:
   865 ;;		line 124 in file "main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   879 ;;      Params:         0       0       0       0
   880 ;;      Locals:         0       0       0       0
   881 ;;      Temps:          1       0       0       0
   882 ;;      Totals:         1       0       0       0
   883 ;;Total ram usage:        1 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_buttonINT
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _getNextManager
   894  01AB                     _getNextManager:	
   895                           
   896                           ;main.c: 126: msize = msize - 1;
   897                           
   898                           ;incstack = 0
   899                           ; Regs used in _getNextManager: [wreg+status,2+status,0]
   900  01AB  087B               	movf	_msize,w
   901  01AC  3EFF               	addlw	255
   902  01AD  00F0               	movwf	??_getNextManager
   903  01AE  0870               	movf	??_getNextManager,w
   904  01AF  00FB               	movwf	_msize
   905                           
   906                           ;main.c: 127: mnext = mnext -1;
   907  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   908  01B1  1303               	bcf	3,6	;RP1=0, select bank0
   909  01B2  0851               	movf	_mnext,w
   910  01B3  3EFF               	addlw	255
   911  01B4  00F0               	movwf	??_getNextManager
   912  01B5  0870               	movf	??_getNextManager,w
   913  01B6  00D1               	movwf	_mnext
   914  01B7  0008               	return
   915  01B8                     __end_of_getNextManager:	
   916                           
   917                           	psect	text5
   918  00FF                     __ptext5:	
   919 ;; *************** function _ManagerNormalButton *****************
   920 ;; Defined at:
   921 ;;		line 188 in file "main.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   935 ;;      Params:         0       0       0       0
   936 ;;      Locals:         0       0       0       0
   937 ;;      Temps:          3       0       0       0
   938 ;;      Totals:         3       0       0       0
   939 ;;Total ram usage:        3 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    1
   942 ;; This function calls:
   943 ;;		_SPI_send
   944 ;; This function is called by:
   945 ;;		_buttonINT
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _ManagerNormalButton
   951  00FF                     _ManagerNormalButton:	
   952                           
   953                           ;main.c: 190: if(msize == 0x14){
   954                           
   955                           ;incstack = 0
   956                           ; Regs used in _ManagerNormalButton: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   957  00FF  3014               	movlw	20
   958  0100  067B               	xorwf	_msize,w
   959  0101  1903               	btfsc	3,2
   960  0102  0008               	return
   961                           
   962                           ;main.c: 192: }
   963                           ;main.c: 194: if(mlast == 0x13){
   964                           
   965                           ;main.c: 191: return;
   966  0103  3013               	movlw	19
   967  0104  067A               	xorwf	_mlast,w
   968  0105  1903               	btfsc	3,2
   969                           
   970                           ;main.c: 195: mlast = 0x00;
   971  0106  01FA               	clrf	_mlast
   972                           
   973                           ;main.c: 196: }
   974                           ;main.c: 198: if(mCount == 0x3E7){
   975  0107  30E7               	movlw	231
   976  0108  1283               	bcf	3,5	;RP0=0, select bank0
   977  0109  1303               	bcf	3,6	;RP1=0, select bank0
   978  010A  064A               	xorwf	_mCount,w
   979  010B  3003               	movlw	3
   980  010C  1903               	skipnz
   981  010D  064B               	xorwf	_mCount+1,w
   982  010E  1D03               	btfss	3,2
   983  010F  2912               	goto	i1l914
   984                           
   985                           ;main.c: 199: mCount = 0x00;
   986  0110  01CA               	clrf	_mCount
   987  0111  01CB               	clrf	_mCount+1
   988  0112                     i1l914:	
   989                           
   990                           ;main.c: 200: }
   991                           ;main.c: 203: msize = msize + 1;
   992  0112  087B               	movf	_msize,w
   993  0113  3E01               	addlw	1
   994  0114  00F1               	movwf	??_ManagerNormalButton
   995  0115  0871               	movf	??_ManagerNormalButton,w
   996  0116  00FB               	movwf	_msize
   997                           
   998                           ;main.c: 204: mCount = mCount + 1;
   999  0117  084A               	movf	_mCount,w
  1000  0118  3E01               	addlw	1
  1001  0119  00CA               	movwf	_mCount
  1002  011A  084B               	movf	_mCount+1,w
  1003  011B  1803               	skipnc
  1004  011C  3E01               	addlw	1
  1005  011D  3E00               	addlw	0
  1006  011E  00CB               	movwf	_mCount+1
  1007                           
  1008                           ;main.c: 206: mqueue[mlast] = mCount;
  1009  011F  087A               	movf	_mlast,w
  1010  0120  00F1               	movwf	??_ManagerNormalButton
  1011  0121  0771               	addwf	??_ManagerNormalButton,w
  1012  0122  3E20               	addlw	(low (_mqueue| 0))& (0+255)
  1013  0123  0084               	movwf	4
  1014  0124  084A               	movf	_mCount,w
  1015  0125  1383               	bcf	3,7	;select IRP bank0
  1016  0126  0080               	movwf	0
  1017  0127  0A84               	incf	4,f
  1018  0128  084B               	movf	_mCount+1,w
  1019  0129  0080               	movwf	0
  1020                           
  1021                           ;main.c: 207: mlast = mlast + 1;
  1022  012A  087A               	movf	_mlast,w
  1023  012B  3E01               	addlw	1
  1024  012C  00F1               	movwf	??_ManagerNormalButton
  1025  012D  0871               	movf	??_ManagerNormalButton,w
  1026  012E  00FA               	movwf	_mlast
  1027                           
  1028                           ;main.c: 208: SPI_send('A');
  1029  012F  3041               	movlw	65
  1030  0130  118A  219B  118A   	fcall	_SPI_send
  1031                           
  1032                           ;main.c: 209: _delay((unsigned long)((500)*(4000000/4000.0)));
  1033  0133  3003               	movlw	3
  1034  0134  00F3               	movwf	??_ManagerNormalButton+2
  1035  0135  308A               	movlw	138
  1036  0136  00F2               	movwf	??_ManagerNormalButton+1
  1037  0137  3056               	movlw	86
  1038  0138  00F1               	movwf	??_ManagerNormalButton
  1039  0139                     u49_27:	
  1040  0139  0BF1               	decfsz	??_ManagerNormalButton,f
  1041  013A  2939               	goto	u49_27
  1042  013B  0BF2               	decfsz	??_ManagerNormalButton+1,f
  1043  013C  2939               	goto	u49_27
  1044  013D  0BF3               	decfsz	??_ManagerNormalButton+2,f
  1045  013E  2939               	goto	u49_27
  1046  013F  2940               	nop2
  1047  0140  0008               	return
  1048  0141                     __end_of_ManagerNormalButton:	
  1049                           
  1050                           	psect	text6
  1051  0141                     __ptext6:	
  1052 ;; *************** function _CashierNormalButton *****************
  1053 ;; Defined at:
  1054 ;;		line 165 in file "main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1068 ;;      Params:         0       0       0       0
  1069 ;;      Locals:         0       0       0       0
  1070 ;;      Temps:          1       0       0       0
  1071 ;;      Totals:         1       0       0       0
  1072 ;;Total ram usage:        1 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    2
  1075 ;; This function calls:
  1076 ;;		_SPI_sendString
  1077 ;; This function is called by:
  1078 ;;		_buttonINT
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _CashierNormalButton
  1084  0141                     _CashierNormalButton:	
  1085                           
  1086                           ;main.c: 167: if(csize == 0x14){
  1087                           
  1088                           ;incstack = 0
  1089                           ; Regs used in _CashierNormalButton: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1090  0141  3014               	movlw	20
  1091  0142  0679               	xorwf	_csize,w
  1092  0143  1903               	btfsc	3,2
  1093  0144  0008               	return
  1094                           
  1095                           ;main.c: 169: }
  1096                           ;main.c: 171: if(clast == 0x13){
  1097                           
  1098                           ;main.c: 168: return;
  1099  0145  3013               	movlw	19
  1100  0146  0678               	xorwf	_clast,w
  1101  0147  1903               	btfsc	3,2
  1102                           
  1103                           ;main.c: 172: clast = 0x00;
  1104  0148  01F8               	clrf	_clast
  1105                           
  1106                           ;main.c: 173: }
  1107                           ;main.c: 175: if(cCount == 0xBB7){
  1108  0149  30B7               	movlw	183
  1109  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1110  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1111  014C  0648               	xorwf	_cCount,w
  1112  014D  300B               	movlw	11
  1113  014E  1903               	skipnz
  1114  014F  0649               	xorwf	_cCount+1,w
  1115  0150  1D03               	btfss	3,2
  1116  0151  2956               	goto	i1l892
  1117                           
  1118                           ;main.c: 176: cCount = 0x7CF;
  1119  0152  30CF               	movlw	207
  1120  0153  00C8               	movwf	_cCount
  1121  0154  3007               	movlw	7
  1122  0155  00C9               	movwf	_cCount+1
  1123  0156                     i1l892:	
  1124                           
  1125                           ;main.c: 177: }
  1126                           ;main.c: 180: csize = csize + 1;
  1127  0156  0879               	movf	_csize,w
  1128  0157  3E01               	addlw	1
  1129  0158  00F7               	movwf	??_CashierNormalButton
  1130  0159  0877               	movf	??_CashierNormalButton,w
  1131  015A  00F9               	movwf	_csize
  1132                           
  1133                           ;main.c: 181: cCount = cCount + 1;
  1134  015B  0848               	movf	_cCount,w
  1135  015C  3E01               	addlw	1
  1136  015D  00C8               	movwf	_cCount
  1137  015E  0849               	movf	_cCount+1,w
  1138  015F  1803               	skipnc
  1139  0160  3E01               	addlw	1
  1140  0161  3E00               	addlw	0
  1141  0162  00C9               	movwf	_cCount+1
  1142                           
  1143                           ;main.c: 183: cqueue[clast] = mCount;
  1144  0163  0878               	movf	_clast,w
  1145  0164  00F7               	movwf	??_CashierNormalButton
  1146  0165  0777               	addwf	??_CashierNormalButton,w
  1147  0166  3EA0               	addlw	(low (_cqueue| 0))& (0+255)
  1148  0167  0084               	movwf	4
  1149  0168  084A               	movf	_mCount,w
  1150  0169  1383               	bcf	3,7	;select IRP bank1
  1151  016A  0080               	movwf	0
  1152  016B  0A84               	incf	4,f
  1153  016C  084B               	movf	_mCount+1,w
  1154  016D  0080               	movwf	0
  1155                           
  1156                           ;main.c: 184: clast = clast + 1;
  1157  016E  0878               	movf	_clast,w
  1158  016F  3E01               	addlw	1
  1159  0170  00F7               	movwf	??_CashierNormalButton
  1160  0171  0877               	movf	??_CashierNormalButton,w
  1161  0172  00F8               	movwf	_clast
  1162                           
  1163                           ;main.c: 185: SPI_sendString();
  1164  0173  118A  2176         	fcall	_SPI_sendString
  1165  0175  0008               	return
  1166  0176                     __end_of_CashierNormalButton:	
  1167                           
  1168                           	psect	text7
  1169  0176                     __ptext7:	
  1170 ;; *************** function _SPI_sendString *****************
  1171 ;; Defined at:
  1172 ;;		line 110 in file "main.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  i               2    5[COMMON] int 
  1177 ;;  data            4    1[COMMON] unsigned char [4]
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1187 ;;      Params:         0       0       0       0
  1188 ;;      Locals:         6       0       0       0
  1189 ;;      Temps:          0       0       0       0
  1190 ;;      Totals:         6       0       0       0
  1191 ;;Total ram usage:        6 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    1
  1194 ;; This function calls:
  1195 ;;		_SPI_send
  1196 ;; This function is called by:
  1197 ;;		_CashierNormalButton
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _SPI_sendString
  1203  0176                     _SPI_sendString:	
  1204                           
  1205                           ;main.c: 111: char data[4] = {1, 0, 0 ,1};
  1206                           
  1207                           ;incstack = 0
  1208                           ; Regs used in _SPI_sendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1209  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0178  0863               	movf	SPI_sendString@F1588+3,w
  1212  0179  00F4               	movwf	SPI_sendString@data+3
  1213  017A  0862               	movf	SPI_sendString@F1588+2,w
  1214  017B  00F3               	movwf	SPI_sendString@data+2
  1215  017C  0861               	movf	SPI_sendString@F1588+1,w
  1216  017D  00F2               	movwf	SPI_sendString@data+1
  1217  017E  0860               	movf	SPI_sendString@F1588,w
  1218  017F  00F1               	movwf	SPI_sendString@data
  1219                           
  1220                           ;main.c: 112: for(int i = 0; i < 4; i++){
  1221  0180  01F5               	clrf	SPI_sendString@i
  1222  0181  01F6               	clrf	SPI_sendString@i+1
  1223  0182                     L2:	
  1224  0182  0876               	movf	SPI_sendString@i+1,w
  1225  0183  3A80               	xorlw	128
  1226  0184  00FF               	movwf	127
  1227  0185  3080               	movlw	128
  1228  0186  027F               	subwf	127,w
  1229  0187  1D03               	skipz
  1230  0188  298B               	goto	u24_25
  1231  0189  3004               	movlw	4
  1232  018A  0275               	subwf	SPI_sendString@i,w
  1233  018B                     u24_25:	
  1234  018B  1803               	btfsc	3,0
  1235  018C  0008               	return
  1236                           
  1237                           ;main.c: 113: SPI_send(data[i]);
  1238  018D  0875               	movf	SPI_sendString@i,w
  1239  018E  3E71               	addlw	(low (SPI_sendString@data| 0))& (0+255)
  1240  018F  0084               	movwf	4
  1241  0190  0800               	movf	0,w
  1242  0191  118A  219B  118A   	fcall	_SPI_send
  1243  0194  3001               	movlw	1
  1244  0195  07F5               	addwf	SPI_sendString@i,f
  1245  0196  1803               	skipnc
  1246  0197  0AF6               	incf	SPI_sendString@i+1,f
  1247  0198  3000               	movlw	0
  1248  0199  07F6               	addwf	SPI_sendString@i+1,f
  1249  019A  2982               	goto	L2
  1250  019B                     __end_of_SPI_sendString:	
  1251                           
  1252                           	psect	text8
  1253  019B                     __ptext8:	
  1254 ;; *************** function _SPI_send *****************
  1255 ;; Defined at:
  1256 ;;		line 92 in file "main.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  data            1    wreg     unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  data            1    0[COMMON] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1270 ;;      Params:         0       0       0       0
  1271 ;;      Locals:         1       0       0       0
  1272 ;;      Temps:          0       0       0       0
  1273 ;;      Totals:         1       0       0       0
  1274 ;;Total ram usage:        1 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_SPI_sendString
  1280 ;;		_ManagerNormalButton
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _SPI_send
  1286  019B                     _SPI_send:	
  1287                           
  1288                           ;incstack = 0
  1289                           ; Regs used in _SPI_send: [wreg]
  1290                           ;SPI_send@data stored from wreg
  1291  019B  00F0               	movwf	SPI_send@data
  1292                           
  1293                           ;main.c: 93: SSPCONbits.CKP = 0;
  1294  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1295  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1296  019E  1214               	bcf	20,4	;volatile
  1297                           
  1298                           ;main.c: 94: SSPSTATbits.BF = 0;
  1299  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1300  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  1301  01A1  1014               	bcf	20,0	;volatile
  1302                           
  1303                           ;main.c: 95: SSPBUF = data;
  1304  01A2  0870               	movf	SPI_send@data,w
  1305  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1306  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1307  01A5  0093               	movwf	19	;volatile
  1308  01A6                     i1l114:	
  1309                           ;main.c: 96: while(SSPSTATbits.BF);
  1310                           
  1311  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1312  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1313  01A8  1C14               	btfss	20,0	;volatile
  1314  01A9  0008               	return
  1315  01AA  29A6               	goto	i1l114
  1316  01AB                     __end_of_SPI_send:	
  1317  007E                     btemp	set	126	;btemp
  1318  007E                     wtemp	set	126
  1319  007E                     wtemp0	set	126
  1320  0080                     wtemp1	set	128
  1321  0082                     wtemp2	set	130
  1322  0084                     wtemp3	set	132
  1323  0086                     wtemp4	set	134
  1324  0088                     wtemp5	set	136
  1325  007F                     wtemp6	set	127
  1326  007E                     ttemp	set	126
  1327  007E                     ttemp0	set	126
  1328  0081                     ttemp1	set	129
  1329  0084                     ttemp2	set	132
  1330  0087                     ttemp3	set	135
  1331  007F                     ttemp4	set	127
  1332  007E                     ltemp	set	126
  1333  007E                     ltemp0	set	126
  1334  0082                     ltemp1	set	130
  1335  0086                     ltemp2	set	134
  1336  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         180
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     10      68
    BANK1            80      0      80
    BANK2            80      0      40

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _buttonINT in COMMON

    _buttonINT->_CashierNormalButton
    _ManagerNormalButton->_SPI_send
    _CashierNormalButton->_SPI_sendString
    _SPI_sendString->_SPI_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _buttonINT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _buttonINT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _buttonINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              7 BANK0      3     3      0
                           _IO_setup
                   _SPI_setup_master
 ---------------------------------------------------------------------------------
 (1) _SPI_setup_master                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_setup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _buttonINT                                            7     7      0     136
                                              0 BANK0      7     7      0
                _CashierNormalButton
                _ManagerNormalButton
                     _getNextManager
 ---------------------------------------------------------------------------------
 (3) _getNextManager                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ManagerNormalButton                                  3     3      0      22
                                              1 COMMON     3     3      0
                           _SPI_send
 ---------------------------------------------------------------------------------
 (3) _CashierNormalButton                                  1     1      0     114
                                              7 COMMON     1     1      0
                     _SPI_sendString
 ---------------------------------------------------------------------------------
 (4) _SPI_sendString                                       6     6      0     114
                                              1 COMMON     6     6      0
                           _SPI_send
 ---------------------------------------------------------------------------------
 (4) _SPI_send                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_setup
   _SPI_setup_master

 _buttonINT (ROOT)
   _CashierNormalButton
     _SPI_sendString
       _SPI_send
   _ManagerNormalButton
     _SPI_send
   _getNextManager

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0      28       7       50.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       5      100.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      44       3       85.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CA      10        0.0%
ABS                  0      0      CA       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Nov 17 18:34:19 2016

                 __CFG_CP$OFF 0000                   _SSPSTATbits 0094                            fsr 0004  
                         l191 00FE          ?_CashierNormalButton 0070                  __CFG_CPD$OFF 0000  
                         u447 00F1                           fsr0 0004                           indf 0000  
         SPI_sendString@F1588 0060                  __CFG_LVP$OFF 0000                          _IOCB 0096  
                        _PIE1 008C                  __CFG_WRT$OFF 0000                          _main 00B2  
                        btemp 007E                          ltemp 007E                          start 0011  
                        ttemp 007E                          wtemp 007E                 __CFG_IESO$OFF 0000  
       ??_CashierNormalButton 0077                         ?_main 0070                 __CFG_WDTE$OFF 0000  
                       _ANSEL 0188                         i1l114 01A6                         i1l180 009D  
                       i1l182 00A3                         i1l175 00A4                         i1l176 0084  
                       i1l914 0112                         i1l892 0156                         i1l992 006E  
                       _RCSTA 0018                         u24_25 018B                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         u45_27 004F  
                       u46_27 0064                         u47_27 0079                         u48_27 0092  
                       _TRISA 0085                         _TRISB 0086                         u49_27 0139  
              __CFG_FCMEN$OFF 0000                         _nRBPU 040F                         _clast 0078  
                       _cnext 0050                         _csize 0079                         _mlast 007A  
                       _mnext 0051                         _msize 007B              __end_of_IO_setup 01D1  
     __size_of_SPI_sendString 0025                __CFG_BOREN$OFF 0000                         pclath 000A  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080              __end_of_SPI_send 01AB                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003                         wtemp0 007E  
                       wtemp1 0080                         wtemp2 0082                         wtemp3 0084  
                       wtemp4 0086                         wtemp5 0088                         wtemp6 007F  
              __CFG_MCLRE$OFF 0000               __initialization 0013                  __end_of_main 00FF  
                      ??_main 005D                        _ANSELH 0189                        _INTCON 000B  
                      _TRISA5 042D                        _TRISC3 043B                        _TRISC4 043C  
                      _TRISC5 043D                        _TRISC6 043E                        _TRISC7 043F  
                      _SSPCON 0014                        _SSPBUF 0013                __CFG_PWRTE$OFF 0000  
   __size_of_SPI_setup_master 000A                        _cCount 0048                        _mCount 004A  
                      _cqueue 00A0                        _pclast 0052                        _pcnext 0053  
                      _pcsize 0054                        _pmlast 007C                        _pmnext 0055  
                      _mqueue 0020                        _pmsize 007D                        saved_w 007E  
     __end_of__initialization 003C                __pcstackCOMMON 0070                  __pidataBANK0 01D1  
                SPI_send@data 0070                     ?_IO_setup 0070                     ?_SPI_send 0070  
              _SPI_sendString 0176                    __pbssBANK0 0020                    __pbssBANK1 00A0  
                  __pbssBANK2 0120               SPI_sendString@i 0075            __size_of_buttonINT 0073  
                  __pmaintext 00B2  __size_of_ManagerNormalButton 0042                    __pintentry 0004  
                  ??_IO_setup 005D                    ??_SPI_send 0070       __size_of_getNextManager 000D  
      __end_of_SPI_sendString 019B                       _SSPSTAT 0094              _SPI_setup_master 01B8  
 __end_of_CashierNormalButton 0176                       __ptext1 01B8                       __ptext2 01CA  
                     __ptext3 003F                       __ptext4 01AB                       __ptext5 00FF  
                     __ptext6 0141                       __ptext7 0176                       __ptext8 019B  
                     _pcCount 004C                       _pmCount 004E             __end_of_buttonINT 00B2  
                     _pcqueue 0120               ?_SPI_sendString 0070                       _pmqueue 00C8  
                     clrloop0 01C3          end_of_initialization 003C                     _RCSTAbits 0018  
                   _PORTAbits 0005                     _PORTBbits 0006                     _TXSTAbits 0098  
          SPI_sendString@data 0071             __size_of_IO_setup 0007                _getNextManager 01AB  
         start_initialization 0013             __size_of_SPI_send 0010           _ManagerNormalButton 00FF  
    __CFG_FOSC$INTRC_NOCLKOUT 0000          ?_ManagerNormalButton 0070                   __pdataBANK0 0060  
      __end_of_getNextManager 01B8                   __pbssCOMMON 0078      __end_of_SPI_setup_master 01C2  
                   ___latbits 0001                 __pcstackBANK0 0056         ??_ManagerNormalButton 0071  
             ?_getNextManager 0070              ??_SPI_sendString 0071                     _buttonINT 003F  
           interrupt_function 0004                     clear_ram0 01C2                      _PIE1bits 008C  
                    _PIR1bits 000C                      _IO_setup 01CA                      _SPI_send 019B  
__size_of_CashierNormalButton 0035                    ?_buttonINT 0070             __CFG_BOR4V$BOR40V 0000  
               __size_of_main 004D                    _INTCONbits 000B             ?_SPI_setup_master 0070  
                 ??_buttonINT 0056            ??_SPI_setup_master 005D                      intlevel1 0000  
            ??_getNextManager 0070   __end_of_ManagerNormalButton 0141           _CashierNormalButton 0141  
                  _SSPCONbits 0014  
