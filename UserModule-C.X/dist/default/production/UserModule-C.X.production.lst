

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Nov 18 15:10:00 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000E                     	;# 
    45  000F                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  001D                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  0081                     	;# 
    65  0085                     	;# 
    66  0086                     	;# 
    67  0087                     	;# 
    68  0089                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  008F                     	;# 
    73  0090                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0093                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  0105                     	;# 
    92  0107                     	;# 
    93  0108                     	;# 
    94  0109                     	;# 
    95  010C                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  0185                     	;# 
   101  0187                     	;# 
   102  0188                     	;# 
   103  0189                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106                           
   107                           	psect	idataBANK0
   108  02B9                     __pidataBANK0:	
   109                           
   110                           ;initializer for SPI_sendString@F1588
   111  02B9  3401               	retlw	1
   112  02BA  3400               	retlw	0
   113  02BB  3400               	retlw	0
   114  02BC  3401               	retlw	1
   115  000B                     _INTCON	set	11
   116  000B                     _INTCONbits	set	11
   117  000C                     _PIR1bits	set	12
   118  0005                     _PORTA	set	5
   119  0005                     _PORTAbits	set	5
   120  0006                     _PORTB	set	6
   121  0006                     _PORTBbits	set	6
   122  0007                     _PORTC	set	7
   123  001A                     _RCREG	set	26
   124  0018                     _RCSTA	set	24
   125  0018                     _RCSTAbits	set	24
   126  0013                     _SSPBUF	set	19
   127  0014                     _SSPCON	set	20
   128  0014                     _SSPCONbits	set	20
   129  0019                     _TXREG	set	25
   130  0096                     _IOCB	set	150
   131  008F                     _OSCCON	set	143
   132  008C                     _PIE1	set	140
   133  008C                     _PIE1bits	set	140
   134  0099                     _SPBRG	set	153
   135  0094                     _SSPSTAT	set	148
   136  0094                     _SSPSTATbits	set	148
   137  0085                     _TRISA	set	133
   138  0086                     _TRISB	set	134
   139  0098                     _TXSTAbits	set	152
   140  042D                     _TRISA5	set	1069
   141  043B                     _TRISC3	set	1083
   142  043C                     _TRISC4	set	1084
   143  043D                     _TRISC5	set	1085
   144  043E                     _TRISC6	set	1086
   145  043F                     _TRISC7	set	1087
   146  040F                     _nRBPU	set	1039
   147  0188                     _ANSEL	set	392
   148  0189                     _ANSELH	set	393
   149                           
   150                           ; #config settings
   151  0000                     
   152                           	psect	cinit
   153  0013                     start_initialization:	
   154  0013                     __initialization:	
   155                           
   156                           ; Initialize objects allocated to BANK0
   157  0013  118A  22B9  118A   	fcall	__pidataBANK0	;fetch initializer
   158  0016  00DE               	movwf	__pdataBANK0& (0+127)
   159  0017  118A  22BA  118A   	fcall	__pidataBANK0+1	;fetch initializer
   160  001A  00DF               	movwf	(__pdataBANK0+1)& (0+127)
   161  001B  118A  22BB  118A   	fcall	__pidataBANK0+2	;fetch initializer
   162  001E  00E0               	movwf	(__pdataBANK0+2)& (0+127)
   163  001F  118A  22BC  118A   	fcall	__pidataBANK0+3	;fetch initializer
   164  0022  00E1               	movwf	(__pdataBANK0+3)& (0+127)
   165                           
   166                           ; Clear objects allocated to BANK2
   167  0023  1783               	bsf	3,7	;select IRP bank2
   168  0024  3020               	movlw	low __pbssBANK2
   169  0025  0084               	movwf	4
   170  0026  3048               	movlw	low (__pbssBANK2+40)
   171  0027  118A  22A4  118A   	fcall	clear_ram0
   172                           
   173                           ; Clear objects allocated to BANK1
   174  002A  1383               	bcf	3,7	;select IRP bank0
   175  002B  30A0               	movlw	low __pbssBANK1
   176  002C  0084               	movwf	4
   177  002D  30F0               	movlw	low (__pbssBANK1+80)
   178  002E  118A  22A4  118A   	fcall	clear_ram0
   179                           
   180                           ; Clear objects allocated to BANK0
   181  0031  3020               	movlw	low __pbssBANK0
   182  0032  0084               	movwf	4
   183  0033  3056               	movlw	low (__pbssBANK0+54)
   184  0034  118A  22A4  118A   	fcall	clear_ram0
   185                           
   186                           ; Clear objects allocated to COMMON
   187  0037  3078               	movlw	low __pbssCOMMON
   188  0038  0084               	movwf	4
   189  0039  307E               	movlw	low (__pbssCOMMON+6)
   190  003A  118A  22A4         	fcall	clear_ram0
   191  003C                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194  003C                     __end_of__initialization:	
   195  003C  0183               	clrf	3
   196  003D  118A  2965         	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMMON
   199  0078                     __pbssCOMMON:	
   200  0078                     _clast:	
   201  0078                     	ds	1
   202  0079                     _csize:	
   203  0079                     	ds	1
   204  007A                     _mlast:	
   205  007A                     	ds	1
   206  007B                     _msize:	
   207  007B                     	ds	1
   208  007C                     _pmlast:	
   209  007C                     	ds	1
   210  007D                     _pmsize:	
   211  007D                     	ds	1
   212                           
   213                           	psect	bssBANK0
   214  0020                     __pbssBANK0:	
   215  0020                     _mqueue:	
   216  0020                     	ds	40
   217  0048                     _cCount:	
   218  0048                     	ds	2
   219  004A                     _mCount:	
   220  004A                     	ds	2
   221  004C                     _pcCount:	
   222  004C                     	ds	2
   223  004E                     _pmCount:	
   224  004E                     	ds	2
   225  0050                     _cnext:	
   226  0050                     	ds	1
   227  0051                     _mnext:	
   228  0051                     	ds	1
   229  0052                     _pclast:	
   230  0052                     	ds	1
   231  0053                     _pcnext:	
   232  0053                     	ds	1
   233  0054                     _pcsize:	
   234  0054                     	ds	1
   235  0055                     _pmnext:	
   236  0055                     	ds	1
   237                           
   238                           	psect	dataBANK0
   239  005E                     __pdataBANK0:	
   240  005E                     SPI_sendString@F1588:	
   241  005E                     	ds	4
   242                           
   243                           	psect	bssBANK1
   244  00A0                     __pbssBANK1:	
   245  00A0                     _cqueue:	
   246  00A0                     	ds	40
   247  00C8                     _pmqueue:	
   248  00C8                     	ds	40
   249                           
   250                           	psect	bssBANK2
   251  0120                     __pbssBANK2:	
   252  0120                     _pcqueue:	
   253  0120                     	ds	40
   254                           
   255                           	psect	clrtext
   256  02A4                     clear_ram0:	
   257                           ;	Called with FSR containing the base address, and
   258                           ;	W with the last address+1
   259                           
   260  02A4  0064               	clrwdt	;clear the watchdog before getting into this loop
   261  02A5                     clrloop0:	
   262  02A5  0180               	clrf	0	;clear RAM location pointed to by FSR
   263  02A6  0A84               	incf	4,f	;increment pointer
   264  02A7  0604               	xorwf	4,w	;XOR with final address
   265  02A8  1903               	btfsc	3,2	;have we reached the end yet?
   266  02A9  3400               	retlw	0	;all done for this memory range, return
   267  02AA  0604               	xorwf	4,w	;XOR again to restore value
   268  02AB  2AA5               	goto	clrloop0	;do the next byte
   269                           
   270                           	psect	cstackCOMMON
   271  0070                     __pcstackCOMMON:	
   272  0070                     ?_SPI_send:	
   273  0070                     ??_SPI_send:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_SPI_sendString:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_getNextManager:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ??_getNextManager:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_CashierNormalButton:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_ManagerNormalButton:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_buttonINT:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_overflow:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_tx_serial:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_rx_serial:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_new_at_com:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_wait_ok:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_connect_wifi:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_usartInit:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_main:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     SPI_send@data:	
   319                           ; 1 bytes @ 0x0
   320                           
   321                           
   322                           ; 1 bytes @ 0x0
   323  0070                     	ds	1
   324  0071                     ??_SPI_sendString:	
   325  0071                     ??_ManagerNormalButton:	
   326                           ; 1 bytes @ 0x1
   327                           
   328  0071                     SPI_sendString@data:	
   329                           ; 1 bytes @ 0x1
   330                           
   331                           
   332                           ; 4 bytes @ 0x1
   333  0071                     	ds	4
   334  0075                     SPI_sendString@i:	
   335                           
   336                           ; 2 bytes @ 0x5
   337  0075                     	ds	2
   338  0077                     ??_CashierNormalButton:	
   339                           
   340                           ; 1 bytes @ 0x7
   341  0077                     	ds	1
   342                           
   343                           	psect	cstackBANK0
   344  0056                     __pcstackBANK0:	
   345  0056                     ??_buttonINT:	
   346                           
   347                           ; 1 bytes @ 0x0
   348  0056                     	ds	7
   349  005D                     ??_overflow:	
   350  005D                     ??_tx_serial:	
   351                           ; 1 bytes @ 0x7
   352                           
   353  005D                     ??_rx_serial:	
   354                           ; 1 bytes @ 0x7
   355                           
   356  005D                     ??_wait_ok:	
   357                           ; 1 bytes @ 0x7
   358                           
   359  005D                     ??_usartInit:	
   360                           ; 1 bytes @ 0x7
   361                           
   362  005D                     tx_serial@aChar:	
   363                           ; 1 bytes @ 0x7
   364                           
   365                           
   366                           ; 1 bytes @ 0x7
   367  005D                     	ds	1
   368  005E                     ??_new_at_com:	
   369  005E                     ??_connect_wifi:	
   370                           ; 1 bytes @ 0x8
   371                           
   372  005E                     ??_main:	
   373                           ; 1 bytes @ 0x8
   374                           
   375                           
   376                           	psect	maintext
   377  0165                     __pmaintext:	
   378                           ; 1 bytes @ 0x8
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 375 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : B00/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   398 ;;      Params:         0       0       0       0
   399 ;;      Locals:         0       0       0       0
   400 ;;      Temps:          0       0       0       0
   401 ;;      Totals:         0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels required when called:    8
   404 ;; This function calls:
   405 ;;		_connect_wifi
   406 ;;		_usartInit
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  0165                     _main:	
   415                           
   416                           ;main.c: 376: nRBPU = 0;
   417                           
   418                           ;incstack = 0
   419                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   420  0165  1683               	bsf	3,5	;RP0=1, select bank1
   421  0166  1303               	bcf	3,6	;RP1=0, select bank1
   422  0167  1381               	bcf	1,7	;volatile
   423                           
   424                           ;main.c: 378: ANSEL = 0x00;
   425  0168  1683               	bsf	3,5	;RP0=1, select bank3
   426  0169  1703               	bsf	3,6	;RP1=1, select bank3
   427  016A  0188               	clrf	8	;volatile
   428                           
   429                           ;main.c: 379: PORTA = 0x00;
   430  016B  1283               	bcf	3,5	;RP0=0, select bank0
   431  016C  1303               	bcf	3,6	;RP1=0, select bank0
   432  016D  0185               	clrf	5	;volatile
   433                           
   434                           ;main.c: 380: TRISA = 0x00;
   435  016E  1683               	bsf	3,5	;RP0=1, select bank1
   436  016F  1303               	bcf	3,6	;RP1=0, select bank1
   437  0170  0185               	clrf	5	;volatile
   438                           
   439                           ;main.c: 382: PORTC = 0x00;
   440  0171  1283               	bcf	3,5	;RP0=0, select bank0
   441  0172  1303               	bcf	3,6	;RP1=0, select bank0
   442  0173  0187               	clrf	7	;volatile
   443                           
   444                           ;main.c: 383: TRISC7 = 1;
   445  0174  1683               	bsf	3,5	;RP0=1, select bank1
   446  0175  1303               	bcf	3,6	;RP1=0, select bank1
   447  0176  1787               	bsf	7,7	;volatile
   448                           
   449                           ;main.c: 384: TRISC6 = 0;
   450  0177  1307               	bcf	7,6	;volatile
   451                           
   452                           ;main.c: 386: TRISB = 0x1E;
   453  0178  301E               	movlw	30
   454  0179  0086               	movwf	6	;volatile
   455                           
   456                           ;main.c: 387: PORTB = 0xFF;
   457  017A  30FF               	movlw	255
   458  017B  1283               	bcf	3,5	;RP0=0, select bank0
   459  017C  1303               	bcf	3,6	;RP1=0, select bank0
   460  017D  0086               	movwf	6	;volatile
   461                           
   462                           ;main.c: 389: ANSELH = 0x00;
   463  017E  1683               	bsf	3,5	;RP0=1, select bank3
   464  017F  1703               	bsf	3,6	;RP1=1, select bank3
   465  0180  0189               	clrf	9	;volatile
   466                           
   467                           ;main.c: 391: INTCON = 0xC8;
   468  0181  30C8               	movlw	200
   469  0182  008B               	movwf	11	;volatile
   470                           
   471                           ;main.c: 393: OSCCON = 0x70;
   472  0183  3070               	movlw	112
   473  0184  1683               	bsf	3,5	;RP0=1, select bank1
   474  0185  1303               	bcf	3,6	;RP1=0, select bank1
   475  0186  008F               	movwf	15	;volatile
   476                           
   477                           ;main.c: 395: usartInit();
   478  0187  118A  2271  118A   	fcall	_usartInit
   479                           
   480                           ;main.c: 396: connect_wifi();
   481  018A  118A  203F  118A   	fcall	_connect_wifi
   482                           
   483                           ;main.c: 398: IOCB = 0xFF;
   484  018D  30FF               	movlw	255
   485  018E  1683               	bsf	3,5	;RP0=1, select bank1
   486  018F  1303               	bcf	3,6	;RP1=0, select bank1
   487  0190  0096               	movwf	22	;volatile
   488                           
   489                           ;main.c: 399: PIE1 = 0x60;
   490  0191  3060               	movlw	96
   491  0192  008C               	movwf	12	;volatile
   492                           
   493                           ;main.c: 401: RCSTA = 0x90;
   494  0193  3090               	movlw	144
   495  0194  1283               	bcf	3,5	;RP0=0, select bank0
   496  0195  1303               	bcf	3,6	;RP1=0, select bank0
   497  0196  0098               	movwf	24	;volatile
   498                           
   499                           ;main.c: 402: TXSTAbits.SYNC = 0x00;
   500  0197  1683               	bsf	3,5	;RP0=1, select bank1
   501  0198  1303               	bcf	3,6	;RP1=0, select bank1
   502  0199  1218               	bcf	24,4	;volatile
   503                           
   504                           ;main.c: 408: mlast = 0x00;
   505  019A  01FA               	clrf	_mlast
   506                           
   507                           ;main.c: 409: mnext = 0x00;
   508  019B  1283               	bcf	3,5	;RP0=0, select bank0
   509  019C  1303               	bcf	3,6	;RP1=0, select bank0
   510  019D  01D1               	clrf	_mnext
   511                           
   512                           ;main.c: 410: msize = 0x00;
   513  019E  01FB               	clrf	_msize
   514                           
   515                           ;main.c: 411: pmlast = 0x00;
   516  019F  01FC               	clrf	_pmlast
   517                           
   518                           ;main.c: 412: pmnext = 0x00;
   519  01A0  01D5               	clrf	_pmnext
   520                           
   521                           ;main.c: 413: pmsize = 0x00;
   522  01A1  01FD               	clrf	_pmsize
   523                           
   524                           ;main.c: 414: clast = 0x00;
   525  01A2  01F8               	clrf	_clast
   526                           
   527                           ;main.c: 415: cnext = 0x00;
   528  01A3  01D0               	clrf	_cnext
   529                           
   530                           ;main.c: 416: csize = 0x00;
   531  01A4  01F9               	clrf	_csize
   532                           
   533                           ;main.c: 417: pclast = 0x00;
   534  01A5  01D2               	clrf	_pclast
   535                           
   536                           ;main.c: 418: pcnext = 0x00;
   537  01A6  01D3               	clrf	_pcnext
   538                           
   539                           ;main.c: 419: pcsize = 0x00;
   540  01A7  01D4               	clrf	_pcsize
   541  01A8                     l229:	
   542                           ;main.c: 435: while(1)
   543                           
   544                           
   545                           ;main.c: 436: {
   546  01A8  29A8               	goto	l229
   547  01A9                     __end_of_main:	
   548                           
   549                           	psect	text1
   550  0271                     __ptext1:	
   551 ;; *************** function _usartInit *****************
   552 ;; Defined at:
   553 ;;		line 367 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   567 ;;      Params:         0       0       0       0
   568 ;;      Locals:         0       0       0       0
   569 ;;      Temps:          0       0       0       0
   570 ;;      Totals:         0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    4
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _usartInit
   583  0271                     _usartInit:	
   584                           
   585                           ;main.c: 368: SPBRG = 0xC;
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _usartInit: [wreg]
   589  0271  300C               	movlw	12
   590  0272  1683               	bsf	3,5	;RP0=1, select bank1
   591  0273  1303               	bcf	3,6	;RP1=0, select bank1
   592  0274  0099               	movwf	25	;volatile
   593                           
   594                           ;main.c: 369: PIR1bits.RCIF = 0x00;
   595  0275  1283               	bcf	3,5	;RP0=0, select bank0
   596  0276  1303               	bcf	3,6	;RP1=0, select bank0
   597  0277  128C               	bcf	12,5	;volatile
   598                           
   599                           ;main.c: 370: RCSTAbits.SPEN = 0x01;
   600  0278  1798               	bsf	24,7	;volatile
   601                           
   602                           ;main.c: 371: RCSTAbits.CREN = 0x01;
   603  0279  1618               	bsf	24,4	;volatile
   604                           
   605                           ;main.c: 372: TXSTAbits.SYNC = 0x00;
   606  027A  1683               	bsf	3,5	;RP0=1, select bank1
   607  027B  1303               	bcf	3,6	;RP1=0, select bank1
   608  027C  1218               	bcf	24,4	;volatile
   609                           
   610                           ;main.c: 373: TXSTAbits.TXEN = 0x01;
   611  027D  1698               	bsf	24,5	;volatile
   612  027E  0008               	return
   613  027F                     __end_of_usartInit:	
   614                           
   615                           	psect	text2
   616  003F                     __ptext2:	
   617 ;; *************** function _connect_wifi *****************
   618 ;; Defined at:
   619 ;;		line 315 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   633 ;;      Params:         0       0       0       0
   634 ;;      Locals:         0       0       0       0
   635 ;;      Temps:          0       0       0       0
   636 ;;      Totals:         0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    7
   640 ;; This function calls:
   641 ;;		_new_at_com
   642 ;;		_tx_serial
   643 ;;		_wait_ok
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function _connect_wifi
   651  003F                     _connect_wifi:	
   652                           
   653                           ;main.c: 317: new_at_com();
   654                           
   655                           ;incstack = 0
   656                           ; Regs used in _connect_wifi: [wreg+status,2+status,0+pclath+cstack]
   657  003F  118A  2298  118A   	fcall	_new_at_com
   658                           
   659                           ;main.c: 318: tx_serial('C');
   660  0042  3043               	movlw	67
   661  0043  118A  22AC  118A   	fcall	_tx_serial
   662                           
   663                           ;main.c: 319: tx_serial('W');
   664  0046  3057               	movlw	87
   665  0047  118A  22AC  118A   	fcall	_tx_serial
   666                           
   667                           ;main.c: 320: tx_serial('M');
   668  004A  304D               	movlw	77
   669  004B  118A  22AC  118A   	fcall	_tx_serial
   670                           
   671                           ;main.c: 321: tx_serial('O');
   672  004E  304F               	movlw	79
   673  004F  118A  22AC  118A   	fcall	_tx_serial
   674                           
   675                           ;main.c: 322: tx_serial('D');
   676  0052  3044               	movlw	68
   677  0053  118A  22AC  118A   	fcall	_tx_serial
   678                           
   679                           ;main.c: 323: tx_serial('E');
   680  0056  3045               	movlw	69
   681  0057  118A  22AC  118A   	fcall	_tx_serial
   682                           
   683                           ;main.c: 324: tx_serial('=');
   684  005A  303D               	movlw	61
   685  005B  118A  22AC  118A   	fcall	_tx_serial
   686                           
   687                           ;main.c: 325: tx_serial('1');
   688  005E  3031               	movlw	49
   689  005F  118A  22AC  118A   	fcall	_tx_serial
   690                           
   691                           ;main.c: 326: tx_serial(0xD);
   692  0062  300D               	movlw	13
   693  0063  118A  22AC  118A   	fcall	_tx_serial
   694                           
   695                           ;main.c: 327: tx_serial(0xA);
   696  0066  300A               	movlw	10
   697  0067  118A  22AC  118A   	fcall	_tx_serial
   698                           
   699                           ;main.c: 328: wait_ok();
   700  006A  118A  2245  118A   	fcall	_wait_ok
   701                           
   702                           ;main.c: 330: new_at_com();
   703  006D  118A  2298  118A   	fcall	_new_at_com
   704                           
   705                           ;main.c: 331: tx_serial('C');
   706  0070  3043               	movlw	67
   707  0071  118A  22AC  118A   	fcall	_tx_serial
   708                           
   709                           ;main.c: 332: tx_serial('W');
   710  0074  3057               	movlw	87
   711  0075  118A  22AC  118A   	fcall	_tx_serial
   712                           
   713                           ;main.c: 333: tx_serial('J');
   714  0078  304A               	movlw	74
   715  0079  118A  22AC  118A   	fcall	_tx_serial
   716                           
   717                           ;main.c: 334: tx_serial('A');
   718  007C  3041               	movlw	65
   719  007D  118A  22AC  118A   	fcall	_tx_serial
   720                           
   721                           ;main.c: 335: tx_serial('P');
   722  0080  3050               	movlw	80
   723  0081  118A  22AC  118A   	fcall	_tx_serial
   724                           
   725                           ;main.c: 336: tx_serial('_');
   726  0084  305F               	movlw	95
   727  0085  118A  22AC  118A   	fcall	_tx_serial
   728                           
   729                           ;main.c: 337: tx_serial('C');
   730  0088  3043               	movlw	67
   731  0089  118A  22AC  118A   	fcall	_tx_serial
   732                           
   733                           ;main.c: 338: tx_serial('U');
   734  008C  3055               	movlw	85
   735  008D  118A  22AC  118A   	fcall	_tx_serial
   736                           
   737                           ;main.c: 339: tx_serial('R');
   738  0090  3052               	movlw	82
   739  0091  118A  22AC  118A   	fcall	_tx_serial
   740                           
   741                           ;main.c: 340: tx_serial('=');
   742  0094  303D               	movlw	61
   743  0095  118A  22AC  118A   	fcall	_tx_serial
   744                           
   745                           ;main.c: 341: tx_serial('"');
   746  0098  3022               	movlw	34
   747  0099  118A  22AC  118A   	fcall	_tx_serial
   748                           
   749                           ;main.c: 342: tx_serial('d');
   750  009C  3064               	movlw	100
   751  009D  118A  22AC  118A   	fcall	_tx_serial
   752                           
   753                           ;main.c: 343: tx_serial('l');
   754  00A0  306C               	movlw	108
   755  00A1  118A  22AC  118A   	fcall	_tx_serial
   756                           
   757                           ;main.c: 344: tx_serial('i');
   758  00A4  3069               	movlw	105
   759  00A5  118A  22AC  118A   	fcall	_tx_serial
   760                           
   761                           ;main.c: 345: tx_serial('n');
   762  00A8  306E               	movlw	110
   763  00A9  118A  22AC  118A   	fcall	_tx_serial
   764                           
   765                           ;main.c: 346: tx_serial('k');
   766  00AC  306B               	movlw	107
   767  00AD  118A  22AC  118A   	fcall	_tx_serial
   768                           
   769                           ;main.c: 347: tx_serial('"');
   770  00B0  3022               	movlw	34
   771  00B1  118A  22AC  118A   	fcall	_tx_serial
   772                           
   773                           ;main.c: 348: tx_serial(',');
   774  00B4  302C               	movlw	44
   775  00B5  118A  22AC  118A   	fcall	_tx_serial
   776                           
   777                           ;main.c: 349: tx_serial('"');
   778  00B8  3022               	movlw	34
   779  00B9  118A  22AC  118A   	fcall	_tx_serial
   780                           
   781                           ;main.c: 350: tx_serial('"');
   782  00BC  3022               	movlw	34
   783  00BD  118A  22AC  118A   	fcall	_tx_serial
   784                           
   785                           ;main.c: 351: tx_serial(0xD);
   786  00C0  300D               	movlw	13
   787  00C1  118A  22AC  118A   	fcall	_tx_serial
   788                           
   789                           ;main.c: 352: tx_serial(0xA);
   790  00C4  300A               	movlw	10
   791  00C5  118A  22AC  118A   	fcall	_tx_serial
   792                           
   793                           ;main.c: 353: wait_ok();
   794  00C8  118A  2245  118A   	fcall	_wait_ok
   795                           
   796                           ;main.c: 355: tx_serial('C');
   797  00CB  3043               	movlw	67
   798  00CC  118A  22AC  118A   	fcall	_tx_serial
   799                           
   800                           ;main.c: 356: tx_serial('P');
   801  00CF  3050               	movlw	80
   802  00D0  118A  22AC  118A   	fcall	_tx_serial
   803                           
   804                           ;main.c: 357: tx_serial('M');
   805  00D3  304D               	movlw	77
   806  00D4  118A  22AC  118A   	fcall	_tx_serial
   807                           
   808                           ;main.c: 358: tx_serial('U');
   809  00D7  3055               	movlw	85
   810  00D8  118A  22AC  118A   	fcall	_tx_serial
   811                           
   812                           ;main.c: 359: tx_serial('X');
   813  00DB  3058               	movlw	88
   814  00DC  118A  22AC  118A   	fcall	_tx_serial
   815                           
   816                           ;main.c: 360: tx_serial('=');
   817  00DF  303D               	movlw	61
   818  00E0  118A  22AC  118A   	fcall	_tx_serial
   819                           
   820                           ;main.c: 361: tx_serial('1');
   821  00E3  3031               	movlw	49
   822  00E4  118A  22AC  118A   	fcall	_tx_serial
   823                           
   824                           ;main.c: 362: tx_serial(0xD);
   825  00E7  300D               	movlw	13
   826  00E8  118A  22AC  118A   	fcall	_tx_serial
   827                           
   828                           ;main.c: 363: tx_serial(0xA);
   829  00EB  300A               	movlw	10
   830  00EC  118A  22AC  118A   	fcall	_tx_serial
   831                           
   832                           ;main.c: 364: wait_ok();
   833  00EF  118A  2245         	fcall	_wait_ok
   834  00F1  0008               	return
   835  00F2                     __end_of_connect_wifi:	
   836                           
   837                           	psect	text3
   838  0245                     __ptext3:	
   839 ;; *************** function _wait_ok *****************
   840 ;; Defined at:
   841 ;;		line 298 in file "main.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, pclath, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   855 ;;      Params:         0       0       0       0
   856 ;;      Locals:         0       0       0       0
   857 ;;      Temps:          0       0       0       0
   858 ;;      Totals:         0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    6
   862 ;; This function calls:
   863 ;;		_rx_serial
   864 ;; This function is called by:
   865 ;;		_connect_wifi
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _wait_ok
   871  0245                     _wait_ok:	
   872  0245                     l214:	
   873                           ;incstack = 0
   874                           ; Regs used in _wait_ok: [wreg+status,2+status,0+pclath+cstack]
   875                           ;main.c: 299: while (1) {
   876                           
   877                           ;main.c: 306: continue;
   878                           
   879                           ;main.c: 302: continue;
   880                           
   881                           
   882                           ;main.c: 300: rx_serial();
   883  0245  118A  228C  118A   	fcall	_rx_serial
   884                           
   885                           ;main.c: 301: if (RCREG != 'O') {
   886  0248  304F               	movlw	79
   887  0249  1283               	bcf	3,5	;RP0=0, select bank0
   888  024A  1303               	bcf	3,6	;RP1=0, select bank0
   889  024B  061A               	xorwf	26,w	;volatile
   890  024C  1D03               	btfss	3,2
   891  024D  2A45               	goto	l214
   892                           
   893                           ;main.c: 303: }
   894                           ;main.c: 304: rx_serial();
   895  024E  118A  228C  118A   	fcall	_rx_serial
   896                           
   897                           ;main.c: 305: if (RCREG != 'K') {
   898  0251  304B               	movlw	75
   899  0252  1283               	bcf	3,5	;RP0=0, select bank0
   900  0253  1303               	bcf	3,6	;RP1=0, select bank0
   901  0254  061A               	xorwf	26,w	;volatile
   902  0255  1D03               	btfss	3,2
   903  0256  2A45               	goto	l214
   904                           
   905                           ;main.c: 307: }
   906                           ;main.c: 308: rx_serial();
   907  0257  118A  228C  118A   	fcall	_rx_serial
   908                           
   909                           ;main.c: 309: if (RCREG == 0xD) {
   910  025A  300D               	movlw	13
   911  025B  1283               	bcf	3,5	;RP0=0, select bank0
   912  025C  1303               	bcf	3,6	;RP1=0, select bank0
   913  025D  061A               	xorwf	26,w	;volatile
   914  025E  1903               	btfsc	3,2
   915  025F  0008               	return
   916  0260  2A45               	goto	l214
   917  0261                     __end_of_wait_ok:	
   918                           ;main.c: 310: break;
   919                           
   920                           
   921                           	psect	text4
   922  028C                     __ptext4:	
   923 ;; *************** function _rx_serial *****************
   924 ;; Defined at:
   925 ;;		line 283 in file "main.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		status,2, status,0, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   939 ;;      Params:         0       0       0       0
   940 ;;      Locals:         0       0       0       0
   941 ;;      Temps:          0       0       0       0
   942 ;;      Totals:         0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    5
   946 ;; This function calls:
   947 ;;		_overflow
   948 ;; This function is called by:
   949 ;;		_wait_ok
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _rx_serial
   955  028C                     _rx_serial:	
   956  028C                     l205:	
   957                           ;incstack = 0
   958                           ; Regs used in _rx_serial: [status,2+status,0+pclath+cstack]
   959                           ;main.c: 285: do {
   960                           
   961                           
   962                           ;main.c: 286: if(RCSTAbits.OERR){
   963  028C  1283               	bcf	3,5	;RP0=0, select bank0
   964  028D  1303               	bcf	3,6	;RP1=0, select bank0
   965  028E  1C98               	btfss	24,1	;volatile
   966  028F  2A93               	goto	l970
   967                           
   968                           ;main.c: 287: overflow();
   969  0290  118A  22B4  118A   	fcall	_overflow
   970  0293                     l970:	
   971                           
   972                           ;main.c: 288: }
   973                           ;main.c: 289: } while (!PIR1bits.RCIF);
   974  0293  1283               	bcf	3,5	;RP0=0, select bank0
   975  0294  1303               	bcf	3,6	;RP1=0, select bank0
   976  0295  1A8C               	btfsc	12,5	;volatile
   977  0296  0008               	return
   978  0297  2A8C               	goto	l205
   979  0298                     __end_of_rx_serial:	
   980                           
   981                           	psect	text5
   982  02B4                     __ptext5:	
   983 ;; *************** function _overflow *****************
   984 ;; Defined at:
   985 ;;		line 273 in file "main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		None
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   999 ;;      Params:         0       0       0       0
  1000 ;;      Locals:         0       0       0       0
  1001 ;;      Temps:          0       0       0       0
  1002 ;;      Totals:         0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    4
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_rx_serial
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _overflow
  1015  02B4                     _overflow:	
  1016                           
  1017                           ;main.c: 274: RCSTAbits.CREN = 0x00;
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _overflow: []
  1021  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1022  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1023  02B6  1218               	bcf	24,4	;volatile
  1024                           
  1025                           ;main.c: 275: RCSTAbits.CREN = 0x01;
  1026  02B7  1618               	bsf	24,4	;volatile
  1027  02B8  0008               	return
  1028  02B9                     __end_of_overflow:	
  1029                           
  1030                           	psect	text6
  1031  0298                     __ptext6:	
  1032 ;; *************** function _new_at_com *****************
  1033 ;; Defined at:
  1034 ;;		line 292 in file "main.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, status,2, status,0, pclath, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1048 ;;      Params:         0       0       0       0
  1049 ;;      Locals:         0       0       0       0
  1050 ;;      Temps:          0       0       0       0
  1051 ;;      Totals:         0       0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    5
  1055 ;; This function calls:
  1056 ;;		_tx_serial
  1057 ;; This function is called by:
  1058 ;;		_connect_wifi
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _new_at_com
  1064  0298                     _new_at_com:	
  1065                           
  1066                           ;main.c: 293: tx_serial('A');
  1067                           
  1068                           ;incstack = 0
  1069                           ; Regs used in _new_at_com: [wreg+status,2+status,0+pclath+cstack]
  1070  0298  3041               	movlw	65
  1071  0299  118A  22AC  118A   	fcall	_tx_serial
  1072                           
  1073                           ;main.c: 294: tx_serial('T');
  1074  029C  3054               	movlw	84
  1075  029D  118A  22AC  118A   	fcall	_tx_serial
  1076                           
  1077                           ;main.c: 295: tx_serial('+');
  1078  02A0  302B               	movlw	43
  1079  02A1  118A  22AC         	fcall	_tx_serial
  1080  02A3  0008               	return
  1081  02A4                     __end_of_new_at_com:	
  1082                           
  1083                           	psect	text7
  1084  02AC                     __ptext7:	
  1085 ;; *************** function _tx_serial *****************
  1086 ;; Defined at:
  1087 ;;		line 278 in file "main.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  aChar           1    wreg     unsigned char 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  aChar           1    7[BANK0 ] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1101 ;;      Params:         0       0       0       0
  1102 ;;      Locals:         0       1       0       0
  1103 ;;      Temps:          0       0       0       0
  1104 ;;      Totals:         0       1       0       0
  1105 ;;Total ram usage:        1 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    4
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_new_at_com
  1112 ;;		_connect_wifi
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _tx_serial
  1118  02AC                     _tx_serial:	
  1119                           
  1120                           ;incstack = 0
  1121                           ; Regs used in _tx_serial: [wreg]
  1122                           ;tx_serial@aChar stored from wreg
  1123  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1124  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1125  02AE  00DD               	movwf	tx_serial@aChar
  1126  02AF                     l199:	
  1127                           ;main.c: 279: while(!PIR1bits.TXIF) { }
  1128                           
  1129  02AF  1E0C               	btfss	12,4	;volatile
  1130  02B0  2AAF               	goto	l199
  1131                           
  1132                           ;main.c: 280: TXREG = aChar;
  1133  02B1  085D               	movf	tx_serial@aChar,w
  1134  02B2  0099               	movwf	25	;volatile
  1135  02B3  0008               	return
  1136  02B4                     __end_of_tx_serial:	
  1137                           
  1138                           	psect	text8
  1139  00F2                     __ptext8:	
  1140 ;; *************** function _buttonINT *****************
  1141 ;; Defined at:
  1142 ;;		line 233 in file "main.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1156 ;;      Params:         0       0       0       0
  1157 ;;      Locals:         0       0       0       0
  1158 ;;      Temps:          0       7       0       0
  1159 ;;      Totals:         0       7       0       0
  1160 ;;Total ram usage:        7 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; Hardware stack levels required when called:    3
  1163 ;; This function calls:
  1164 ;;		_CashierNormalButton
  1165 ;;		_ManagerNormalButton
  1166 ;;		_getNextManager
  1167 ;; This function is called by:
  1168 ;;		Interrupt level 1
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _buttonINT
  1174  00F2                     _buttonINT:	
  1175                           
  1176                           ;main.c: 235: if(INTCONbits.RBIF){
  1177  00F2  1C0B               	btfss	11,0	;volatile
  1178  00F3  2958               	goto	L1
  1179                           
  1180                           ;main.c: 238: if(!PORTBbits.RB4){
  1181  00F4  1A06               	btfsc	6,4	;volatile
  1182  00F5  2937               	goto	i1l184
  1183                           
  1184                           ;main.c: 239: ManagerNormalButton();
  1185  00F6  118A  21A9  118A   	fcall	_ManagerNormalButton
  1186                           
  1187                           ;main.c: 240: PORTAbits.RA0 = 0x01;
  1188  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1189  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1190  00FB  1405               	bsf	5,0	;volatile
  1191                           
  1192                           ;main.c: 241: _delay((unsigned long)((500)*(8000000/4000.0)));
  1193  00FC  3006               	movlw	6
  1194  00FD  00D8               	movwf	??_buttonINT+2
  1195  00FE  3013               	movlw	19
  1196  00FF  00D7               	movwf	??_buttonINT+1
  1197  0100  30B1               	movlw	177
  1198  0101  00D6               	movwf	??_buttonINT
  1199  0102                     u56_27:	
  1200  0102  0BD6               	decfsz	??_buttonINT,f
  1201  0103  2902               	goto	u56_27
  1202  0104  0BD7               	decfsz	??_buttonINT+1,f
  1203  0105  2902               	goto	u56_27
  1204  0106  0BD8               	decfsz	??_buttonINT+2,f
  1205  0107  2902               	goto	u56_27
  1206  0108  2909               	nop2
  1207                           
  1208                           ;main.c: 242: PORTAbits.RA0 = 0x00;
  1209  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1210  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1211  010B  1005               	bcf	5,0	;volatile
  1212                           
  1213                           ;main.c: 244: if(msize == 0x0A){
  1214  010C  300A               	movlw	10
  1215  010D  067B               	xorwf	_msize,w
  1216  010E  1D03               	btfss	3,2
  1217  010F  2921               	goto	i1l1134
  1218                           
  1219                           ;main.c: 245: PORTAbits.RA1 = 0x01;
  1220  0110  1485               	bsf	5,1	;volatile
  1221                           
  1222                           ;main.c: 246: _delay((unsigned long)((500)*(8000000/4000.0)));
  1223  0111  3006               	movlw	6
  1224  0112  00D8               	movwf	??_buttonINT+2
  1225  0113  3013               	movlw	19
  1226  0114  00D7               	movwf	??_buttonINT+1
  1227  0115  30B1               	movlw	177
  1228  0116  00D6               	movwf	??_buttonINT
  1229  0117                     u57_27:	
  1230  0117  0BD6               	decfsz	??_buttonINT,f
  1231  0118  2917               	goto	u57_27
  1232  0119  0BD7               	decfsz	??_buttonINT+1,f
  1233  011A  2917               	goto	u57_27
  1234  011B  0BD8               	decfsz	??_buttonINT+2,f
  1235  011C  2917               	goto	u57_27
  1236  011D  291E               	nop2
  1237                           
  1238                           ;main.c: 247: PORTAbits.RA1 = 0x00;
  1239  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1240  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0120  1085               	bcf	5,1	;volatile
  1242  0121                     i1l1134:	
  1243                           
  1244                           ;main.c: 248: }
  1245                           ;main.c: 249: if(msize == 0x13){
  1246  0121  3013               	movlw	19
  1247  0122  067B               	xorwf	_msize,w
  1248  0123  1D03               	btfss	3,2
  1249  0124  2957               	goto	i1l183
  1250                           
  1251                           ;main.c: 250: PORTAbits.RA2 = 0x01;
  1252  0125  1505               	bsf	5,2	;volatile
  1253                           
  1254                           ;main.c: 251: _delay((unsigned long)((500)*(8000000/4000.0)));
  1255  0126  3006               	movlw	6
  1256  0127  00D8               	movwf	??_buttonINT+2
  1257  0128  3013               	movlw	19
  1258  0129  00D7               	movwf	??_buttonINT+1
  1259  012A  30B1               	movlw	177
  1260  012B  00D6               	movwf	??_buttonINT
  1261  012C                     u58_27:	
  1262  012C  0BD6               	decfsz	??_buttonINT,f
  1263  012D  292C               	goto	u58_27
  1264  012E  0BD7               	decfsz	??_buttonINT+1,f
  1265  012F  292C               	goto	u58_27
  1266  0130  0BD8               	decfsz	??_buttonINT+2,f
  1267  0131  292C               	goto	u58_27
  1268  0132  2933               	nop2
  1269                           
  1270                           ;main.c: 252: PORTAbits.RA2 = 0x00;
  1271  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0135  1105               	bcf	5,2	;volatile
  1274                           
  1275                           ;main.c: 253: }
  1276                           ;main.c: 255: } else if(!PORTBbits.RB3){
  1277  0136  2957               	goto	i1l183
  1278  0137                     i1l184:	
  1279  0137  1986               	btfsc	6,3	;volatile
  1280  0138  2950               	goto	i1l188
  1281                           
  1282                           ;main.c: 256: getNextManager();
  1283  0139  118A  227F  118A   	fcall	_getNextManager
  1284                           
  1285                           ;main.c: 258: PORTAbits.RA4 = 0x01;
  1286  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1287  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1288  013E  1605               	bsf	5,4	;volatile
  1289                           
  1290                           ;main.c: 259: _delay((unsigned long)((500)*(8000000/4000.0)));
  1291  013F  3006               	movlw	6
  1292  0140  00D8               	movwf	??_buttonINT+2
  1293  0141  3013               	movlw	19
  1294  0142  00D7               	movwf	??_buttonINT+1
  1295  0143  30B1               	movlw	177
  1296  0144  00D6               	movwf	??_buttonINT
  1297  0145                     u59_27:	
  1298  0145  0BD6               	decfsz	??_buttonINT,f
  1299  0146  2945               	goto	u59_27
  1300  0147  0BD7               	decfsz	??_buttonINT+1,f
  1301  0148  2945               	goto	u59_27
  1302  0149  0BD8               	decfsz	??_buttonINT+2,f
  1303  014A  2945               	goto	u59_27
  1304  014B  294C               	nop2
  1305                           
  1306                           ;main.c: 260: PORTAbits.RA4 = 0x00;
  1307  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1308  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1309  014E  1205               	bcf	5,4	;volatile
  1310                           
  1311                           ;main.c: 261: }
  1312  014F  2957               	goto	i1l183
  1313  0150                     i1l188:	
  1314                           
  1315                           ;main.c: 262: else if(!PORTBbits.RB2){
  1316  0150  1906               	btfsc	6,2	;volatile
  1317  0151  2956               	goto	i1l190
  1318                           
  1319                           ;main.c: 263: CashierNormalButton();
  1320  0152  118A  21EB  118A   	fcall	_CashierNormalButton
  1321                           
  1322                           ;main.c: 264: }
  1323  0155  2957               	goto	i1l183
  1324  0156                     i1l190:	
  1325                           
  1326                           ;main.c: 265: else if(!PORTBbits.RB1){
  1327  0156  0806               	movf	6,w	;volatile
  1328  0157                     i1l183:	
  1329                           
  1330                           ;main.c: 267: }
  1331                           ;main.c: 268: }
  1332                           ;main.c: 270: INTCONbits.RBIF = 0x00;
  1333  0157  100B               	bcf	11,0	;volatile
  1334  0158                     L1:	
  1335  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1337  015A  085C               	movf	??_buttonINT+6,w
  1338  015B  00FF               	movwf	127
  1339  015C  085B               	movf	??_buttonINT+5,w
  1340  015D  008A               	movwf	10
  1341  015E  085A               	movf	??_buttonINT+4,w
  1342  015F  0084               	movwf	4
  1343  0160  0E59               	swapf	(??_buttonINT+3)^0,w
  1344  0161  0083               	movwf	3
  1345  0162  0EFE               	swapf	126,f
  1346  0163  0E7E               	swapf	126,w
  1347  0164  0009               	retfie
  1348  0165                     __end_of_buttonINT:	
  1349                           
  1350                           	psect	intentry
  1351  0004                     __pintentry:	
  1352                           ;incstack = 0
  1353                           ; Regs used in _buttonINT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1354                           
  1355  0004                     interrupt_function:	
  1356  007E                     saved_w	set	btemp
  1357  0004  00FE               	movwf	btemp
  1358  0005  0E03               	swapf	3,w
  1359  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0008  00D9               	movwf	??_buttonINT+3
  1362  0009  0804               	movf	4,w
  1363  000A  00DA               	movwf	??_buttonINT+4
  1364  000B  080A               	movf	10,w
  1365  000C  00DB               	movwf	??_buttonINT+5
  1366  000D  087F               	movf	btemp+1,w
  1367  000E  00DC               	movwf	??_buttonINT+6
  1368  000F  118A  28F2         	ljmp	_buttonINT
  1369                           
  1370                           	psect	text9
  1371  027F                     __ptext9:	
  1372 ;; *************** function _getNextManager *****************
  1373 ;; Defined at:
  1374 ;;		line 124 in file "main.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1388 ;;      Params:         0       0       0       0
  1389 ;;      Locals:         0       0       0       0
  1390 ;;      Temps:          1       0       0       0
  1391 ;;      Totals:         1       0       0       0
  1392 ;;Total ram usage:        1 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_buttonINT
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _getNextManager
  1403  027F                     _getNextManager:	
  1404                           
  1405                           ;main.c: 126: msize = msize - 1;
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _getNextManager: [wreg+status,2+status,0]
  1409  027F  087B               	movf	_msize,w
  1410  0280  3EFF               	addlw	255
  1411  0281  00F0               	movwf	??_getNextManager
  1412  0282  0870               	movf	??_getNextManager,w
  1413  0283  00FB               	movwf	_msize
  1414                           
  1415                           ;main.c: 127: mnext = mnext -1;
  1416  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0286  0851               	movf	_mnext,w
  1419  0287  3EFF               	addlw	255
  1420  0288  00F0               	movwf	??_getNextManager
  1421  0289  0870               	movf	??_getNextManager,w
  1422  028A  00D1               	movwf	_mnext
  1423  028B  0008               	return
  1424  028C                     __end_of_getNextManager:	
  1425                           
  1426                           	psect	text10
  1427  01A9                     __ptext10:	
  1428 ;; *************** function _ManagerNormalButton *****************
  1429 ;; Defined at:
  1430 ;;		line 188 in file "main.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1444 ;;      Params:         0       0       0       0
  1445 ;;      Locals:         0       0       0       0
  1446 ;;      Temps:          3       0       0       0
  1447 ;;      Totals:         3       0       0       0
  1448 ;;Total ram usage:        3 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    1
  1451 ;; This function calls:
  1452 ;;		_SPI_send
  1453 ;; This function is called by:
  1454 ;;		_buttonINT
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _ManagerNormalButton
  1460  01A9                     _ManagerNormalButton:	
  1461                           
  1462                           ;main.c: 190: if(msize == 0x14){
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in _ManagerNormalButton: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1466  01A9  3014               	movlw	20
  1467  01AA  067B               	xorwf	_msize,w
  1468  01AB  1903               	btfsc	3,2
  1469  01AC  0008               	return
  1470                           
  1471                           ;main.c: 192: }
  1472                           ;main.c: 194: if(mlast == 0x13){
  1473                           
  1474                           ;main.c: 191: return;
  1475  01AD  3013               	movlw	19
  1476  01AE  067A               	xorwf	_mlast,w
  1477  01AF  1903               	btfsc	3,2
  1478                           
  1479                           ;main.c: 195: mlast = 0x00;
  1480  01B0  01FA               	clrf	_mlast
  1481                           
  1482                           ;main.c: 196: }
  1483                           ;main.c: 198: if(mCount == 0x3E7){
  1484  01B1  30E7               	movlw	231
  1485  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1486  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1487  01B4  064A               	xorwf	_mCount,w
  1488  01B5  3003               	movlw	3
  1489  01B6  1903               	skipnz
  1490  01B7  064B               	xorwf	_mCount+1,w
  1491  01B8  1D03               	btfss	3,2
  1492  01B9  29BC               	goto	i1l1042
  1493                           
  1494                           ;main.c: 199: mCount = 0x00;
  1495  01BA  01CA               	clrf	_mCount
  1496  01BB  01CB               	clrf	_mCount+1
  1497  01BC                     i1l1042:	
  1498                           
  1499                           ;main.c: 200: }
  1500                           ;main.c: 203: msize = msize + 1;
  1501  01BC  087B               	movf	_msize,w
  1502  01BD  3E01               	addlw	1
  1503  01BE  00F1               	movwf	??_ManagerNormalButton
  1504  01BF  0871               	movf	??_ManagerNormalButton,w
  1505  01C0  00FB               	movwf	_msize
  1506                           
  1507                           ;main.c: 204: mCount = mCount + 1;
  1508  01C1  084A               	movf	_mCount,w
  1509  01C2  3E01               	addlw	1
  1510  01C3  00CA               	movwf	_mCount
  1511  01C4  084B               	movf	_mCount+1,w
  1512  01C5  1803               	skipnc
  1513  01C6  3E01               	addlw	1
  1514  01C7  3E00               	addlw	0
  1515  01C8  00CB               	movwf	_mCount+1
  1516                           
  1517                           ;main.c: 206: mqueue[mlast] = mCount;
  1518  01C9  087A               	movf	_mlast,w
  1519  01CA  00F1               	movwf	??_ManagerNormalButton
  1520  01CB  0771               	addwf	??_ManagerNormalButton,w
  1521  01CC  3E20               	addlw	(low (_mqueue| 0))& (0+255)
  1522  01CD  0084               	movwf	4
  1523  01CE  084A               	movf	_mCount,w
  1524  01CF  1383               	bcf	3,7	;select IRP bank0
  1525  01D0  0080               	movwf	0
  1526  01D1  0A84               	incf	4,f
  1527  01D2  084B               	movf	_mCount+1,w
  1528  01D3  0080               	movwf	0
  1529                           
  1530                           ;main.c: 207: mlast = mlast + 1;
  1531  01D4  087A               	movf	_mlast,w
  1532  01D5  3E01               	addlw	1
  1533  01D6  00F1               	movwf	??_ManagerNormalButton
  1534  01D7  0871               	movf	??_ManagerNormalButton,w
  1535  01D8  00FA               	movwf	_mlast
  1536                           
  1537                           ;main.c: 208: SPI_send('A');
  1538  01D9  3041               	movlw	65
  1539  01DA  118A  2261  118A   	fcall	_SPI_send
  1540                           
  1541                           ;main.c: 209: _delay((unsigned long)((500)*(8000000/4000.0)));
  1542  01DD  3006               	movlw	6
  1543  01DE  00F3               	movwf	??_ManagerNormalButton+2
  1544  01DF  3013               	movlw	19
  1545  01E0  00F2               	movwf	??_ManagerNormalButton+1
  1546  01E1  30B1               	movlw	177
  1547  01E2  00F1               	movwf	??_ManagerNormalButton
  1548  01E3                     u60_27:	
  1549  01E3  0BF1               	decfsz	??_ManagerNormalButton,f
  1550  01E4  29E3               	goto	u60_27
  1551  01E5  0BF2               	decfsz	??_ManagerNormalButton+1,f
  1552  01E6  29E3               	goto	u60_27
  1553  01E7  0BF3               	decfsz	??_ManagerNormalButton+2,f
  1554  01E8  29E3               	goto	u60_27
  1555  01E9  29EA               	nop2
  1556  01EA  0008               	return
  1557  01EB                     __end_of_ManagerNormalButton:	
  1558                           
  1559                           	psect	text11
  1560  01EB                     __ptext11:	
  1561 ;; *************** function _CashierNormalButton *****************
  1562 ;; Defined at:
  1563 ;;		line 165 in file "main.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1577 ;;      Params:         0       0       0       0
  1578 ;;      Locals:         0       0       0       0
  1579 ;;      Temps:          1       0       0       0
  1580 ;;      Totals:         1       0       0       0
  1581 ;;Total ram usage:        1 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    2
  1584 ;; This function calls:
  1585 ;;		_SPI_sendString
  1586 ;; This function is called by:
  1587 ;;		_buttonINT
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function _CashierNormalButton
  1593  01EB                     _CashierNormalButton:	
  1594                           
  1595                           ;main.c: 167: if(csize == 0x14){
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _CashierNormalButton: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1599  01EB  3014               	movlw	20
  1600  01EC  0679               	xorwf	_csize,w
  1601  01ED  1903               	btfsc	3,2
  1602  01EE  0008               	return
  1603                           
  1604                           ;main.c: 169: }
  1605                           ;main.c: 171: if(clast == 0x13){
  1606                           
  1607                           ;main.c: 168: return;
  1608  01EF  3013               	movlw	19
  1609  01F0  0678               	xorwf	_clast,w
  1610  01F1  1903               	btfsc	3,2
  1611                           
  1612                           ;main.c: 172: clast = 0x00;
  1613  01F2  01F8               	clrf	_clast
  1614                           
  1615                           ;main.c: 173: }
  1616                           ;main.c: 175: if(cCount == 0xBB7){
  1617  01F3  30B7               	movlw	183
  1618  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1619  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1620  01F6  0648               	xorwf	_cCount,w
  1621  01F7  300B               	movlw	11
  1622  01F8  1903               	skipnz
  1623  01F9  0649               	xorwf	_cCount+1,w
  1624  01FA  1D03               	btfss	3,2
  1625  01FB  2A00               	goto	i1l1020
  1626                           
  1627                           ;main.c: 176: cCount = 0x7CF;
  1628  01FC  30CF               	movlw	207
  1629  01FD  00C8               	movwf	_cCount
  1630  01FE  3007               	movlw	7
  1631  01FF  00C9               	movwf	_cCount+1
  1632  0200                     i1l1020:	
  1633                           
  1634                           ;main.c: 177: }
  1635                           ;main.c: 180: csize = csize + 1;
  1636  0200  0879               	movf	_csize,w
  1637  0201  3E01               	addlw	1
  1638  0202  00F7               	movwf	??_CashierNormalButton
  1639  0203  0877               	movf	??_CashierNormalButton,w
  1640  0204  00F9               	movwf	_csize
  1641                           
  1642                           ;main.c: 181: cCount = cCount + 1;
  1643  0205  0848               	movf	_cCount,w
  1644  0206  3E01               	addlw	1
  1645  0207  00C8               	movwf	_cCount
  1646  0208  0849               	movf	_cCount+1,w
  1647  0209  1803               	skipnc
  1648  020A  3E01               	addlw	1
  1649  020B  3E00               	addlw	0
  1650  020C  00C9               	movwf	_cCount+1
  1651                           
  1652                           ;main.c: 183: cqueue[clast] = mCount;
  1653  020D  0878               	movf	_clast,w
  1654  020E  00F7               	movwf	??_CashierNormalButton
  1655  020F  0777               	addwf	??_CashierNormalButton,w
  1656  0210  3EA0               	addlw	(low (_cqueue| 0))& (0+255)
  1657  0211  0084               	movwf	4
  1658  0212  084A               	movf	_mCount,w
  1659  0213  1383               	bcf	3,7	;select IRP bank1
  1660  0214  0080               	movwf	0
  1661  0215  0A84               	incf	4,f
  1662  0216  084B               	movf	_mCount+1,w
  1663  0217  0080               	movwf	0
  1664                           
  1665                           ;main.c: 184: clast = clast + 1;
  1666  0218  0878               	movf	_clast,w
  1667  0219  3E01               	addlw	1
  1668  021A  00F7               	movwf	??_CashierNormalButton
  1669  021B  0877               	movf	??_CashierNormalButton,w
  1670  021C  00F8               	movwf	_clast
  1671                           
  1672                           ;main.c: 185: SPI_sendString();
  1673  021D  118A  2220         	fcall	_SPI_sendString
  1674  021F  0008               	return
  1675  0220                     __end_of_CashierNormalButton:	
  1676                           
  1677                           	psect	text12
  1678  0220                     __ptext12:	
  1679 ;; *************** function _SPI_sendString *****************
  1680 ;; Defined at:
  1681 ;;		line 110 in file "main.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  i               2    5[COMMON] int 
  1686 ;;  data            4    1[COMMON] unsigned char [4]
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1696 ;;      Params:         0       0       0       0
  1697 ;;      Locals:         6       0       0       0
  1698 ;;      Temps:          0       0       0       0
  1699 ;;      Totals:         6       0       0       0
  1700 ;;Total ram usage:        6 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    1
  1703 ;; This function calls:
  1704 ;;		_SPI_send
  1705 ;; This function is called by:
  1706 ;;		_CashierNormalButton
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function _SPI_sendString
  1712  0220                     _SPI_sendString:	
  1713                           
  1714                           ;main.c: 111: char data[4] = {1, 0, 0 ,1};
  1715                           
  1716                           ;incstack = 0
  1717                           ; Regs used in _SPI_sendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1718  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0222  0861               	movf	SPI_sendString@F1588+3,w
  1721  0223  00F4               	movwf	SPI_sendString@data+3
  1722  0224  0860               	movf	SPI_sendString@F1588+2,w
  1723  0225  00F3               	movwf	SPI_sendString@data+2
  1724  0226  085F               	movf	SPI_sendString@F1588+1,w
  1725  0227  00F2               	movwf	SPI_sendString@data+1
  1726  0228  085E               	movf	SPI_sendString@F1588,w
  1727  0229  00F1               	movwf	SPI_sendString@data
  1728                           
  1729                           ;main.c: 112: for(int i = 0; i < 4; i++){
  1730  022A  01F5               	clrf	SPI_sendString@i
  1731  022B  01F6               	clrf	SPI_sendString@i+1
  1732  022C                     L2:	
  1733  022C  0876               	movf	SPI_sendString@i+1,w
  1734  022D  3A80               	xorlw	128
  1735  022E  00FF               	movwf	127
  1736  022F  3080               	movlw	128
  1737  0230  027F               	subwf	127,w
  1738  0231  1D03               	skipz
  1739  0232  2A35               	goto	u33_25
  1740  0233  3004               	movlw	4
  1741  0234  0275               	subwf	SPI_sendString@i,w
  1742  0235                     u33_25:	
  1743  0235  1803               	btfsc	3,0
  1744  0236  0008               	return
  1745                           
  1746                           ;main.c: 113: SPI_send(data[i]);
  1747  0237  0875               	movf	SPI_sendString@i,w
  1748  0238  3E71               	addlw	(low (SPI_sendString@data| 0))& (0+255)
  1749  0239  0084               	movwf	4
  1750  023A  0800               	movf	0,w
  1751  023B  118A  2261  118A   	fcall	_SPI_send
  1752  023E  3001               	movlw	1
  1753  023F  07F5               	addwf	SPI_sendString@i,f
  1754  0240  1803               	skipnc
  1755  0241  0AF6               	incf	SPI_sendString@i+1,f
  1756  0242  3000               	movlw	0
  1757  0243  07F6               	addwf	SPI_sendString@i+1,f
  1758  0244  2A2C               	goto	L2
  1759  0245                     __end_of_SPI_sendString:	
  1760                           
  1761                           	psect	text13
  1762  0261                     __ptext13:	
  1763 ;; *************** function _SPI_send *****************
  1764 ;; Defined at:
  1765 ;;		line 92 in file "main.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  data            1    wreg     unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  data            1    0[COMMON] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1779 ;;      Params:         0       0       0       0
  1780 ;;      Locals:         1       0       0       0
  1781 ;;      Temps:          0       0       0       0
  1782 ;;      Totals:         1       0       0       0
  1783 ;;Total ram usage:        1 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_SPI_sendString
  1789 ;;		_ManagerNormalButton
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function _SPI_send
  1795  0261                     _SPI_send:	
  1796                           
  1797                           ;incstack = 0
  1798                           ; Regs used in _SPI_send: [wreg]
  1799                           ;SPI_send@data stored from wreg
  1800  0261  00F0               	movwf	SPI_send@data
  1801                           
  1802                           ;main.c: 93: SSPCONbits.CKP = 0;
  1803  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0264  1214               	bcf	20,4	;volatile
  1806                           
  1807                           ;main.c: 94: SSPSTATbits.BF = 0;
  1808  0265  1683               	bsf	3,5	;RP0=1, select bank1
  1809  0266  1303               	bcf	3,6	;RP1=0, select bank1
  1810  0267  1014               	bcf	20,0	;volatile
  1811                           
  1812                           ;main.c: 95: SSPBUF = data;
  1813  0268  0870               	movf	SPI_send@data,w
  1814  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1815  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1816  026B  0093               	movwf	19	;volatile
  1817  026C                     i1l122:	
  1818                           ;main.c: 96: while(SSPSTATbits.BF);
  1819                           
  1820  026C  1683               	bsf	3,5	;RP0=1, select bank1
  1821  026D  1303               	bcf	3,6	;RP1=0, select bank1
  1822  026E  1C14               	btfss	20,0	;volatile
  1823  026F  0008               	return
  1824  0270  2A6C               	goto	i1l122
  1825  0271                     __end_of_SPI_send:	
  1826  007E                     btemp	set	126	;btemp
  1827  007E                     wtemp	set	126
  1828  007E                     wtemp0	set	126
  1829  0080                     wtemp1	set	128
  1830  0082                     wtemp2	set	130
  1831  0084                     wtemp3	set	132
  1832  0086                     wtemp4	set	134
  1833  0088                     wtemp5	set	136
  1834  007F                     wtemp6	set	127
  1835  007E                     ttemp	set	126
  1836  007E                     ttemp0	set	126
  1837  0081                     ttemp1	set	129
  1838  0084                     ttemp2	set	132
  1839  0087                     ttemp3	set	135
  1840  007F                     ttemp4	set	127
  1841  007E                     ltemp	set	126
  1842  007E                     ltemp0	set	126
  1843  0082                     ltemp1	set	130
  1844  0086                     ltemp2	set	134
  1845  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         180
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      8      66
    BANK1            80      0      80
    BANK2            80      0      40

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _buttonINT in COMMON

    _buttonINT->_CashierNormalButton
    _ManagerNormalButton->_SPI_send
    _CashierNormalButton->_SPI_sendString
    _SPI_sendString->_SPI_send

Critical Paths under _main in BANK0

    _connect_wifi->_tx_serial
    _new_at_com->_tx_serial

Critical Paths under _buttonINT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _buttonINT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _buttonINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      44
                       _connect_wifi
                          _usartInit
 ---------------------------------------------------------------------------------
 (1) _usartInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _connect_wifi                                         0     0      0      44
                         _new_at_com
                          _tx_serial
                            _wait_ok
 ---------------------------------------------------------------------------------
 (2) _wait_ok                                              0     0      0       0
                          _rx_serial
 ---------------------------------------------------------------------------------
 (3) _rx_serial                                            0     0      0       0
                           _overflow
 ---------------------------------------------------------------------------------
 (4) _overflow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _new_at_com                                           0     0      0      22
                          _tx_serial
 ---------------------------------------------------------------------------------
 (2) _tx_serial                                            1     1      0      22
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _buttonINT                                            7     7      0     136
                                              0 BANK0      7     7      0
                _CashierNormalButton
                _ManagerNormalButton
                     _getNextManager
 ---------------------------------------------------------------------------------
 (6) _getNextManager                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ManagerNormalButton                                  3     3      0      22
                                              1 COMMON     3     3      0
                           _SPI_send
 ---------------------------------------------------------------------------------
 (6) _CashierNormalButton                                  1     1      0     114
                                              7 COMMON     1     1      0
                     _SPI_sendString
 ---------------------------------------------------------------------------------
 (7) _SPI_sendString                                       6     6      0     114
                                              1 COMMON     6     6      0
                           _SPI_send
 ---------------------------------------------------------------------------------
 (7) _SPI_send                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _connect_wifi
     _new_at_com
       _tx_serial
     _tx_serial
     _wait_ok
       _rx_serial
         _overflow
   _usartInit

 _buttonINT (ROOT)
   _CashierNormalButton
     _SPI_sendString
       _SPI_send
   _ManagerNormalButton
     _SPI_send
   _getNextManager

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0      28       7       50.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       5      100.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      42       3       82.5%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C8      10        0.0%
ABS                  0      0      C8       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Nov 18 15:10:00 2016

                 __CFG_CP$OFF 0000                   _SSPSTATbits 0094                            fsr 0004  
                         l205 028C                           l214 0245                           l229 01A8  
                         l199 02AF          ?_CashierNormalButton 0070                           l970 0293  
                __CFG_CPD$OFF 0000                 ?_connect_wifi 0070                           fsr0 0004  
                         indf 0000           SPI_sendString@F1588 005E                  __CFG_LVP$OFF 0000  
                        _IOCB 0096                          _PIE1 008C                  __CFG_WRT$OFF 0000  
                        _main 0165                          btemp 007E                          ltemp 007E  
                        start 0011                          ttemp 007E                          wtemp 007E  
               __CFG_IESO$OFF 0000         ??_CashierNormalButton 0077                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _ANSEL 0188                ??_connect_wifi 005E  
                       i1l122 026C                         i1l190 0156                         i1l183 0157  
                       i1l184 0137                         i1l188 0150                         _RCREG 001A  
                       _RCSTA 0018                         u33_25 0235                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       u60_27 01E3                         u56_27 0102                         _TRISA 0085  
                       _TRISB 0086                         u57_27 0117                         u58_27 012C  
                       u59_27 0145                         _TXREG 0019                __CFG_FCMEN$OFF 0000  
                       _nRBPU 040F                         _clast 0078                         _cnext 0050  
                       _csize 0079                         _mlast 007A                         _mnext 0051  
                       _msize 007B       __size_of_SPI_sendString 0025                __CFG_BOREN$OFF 0000  
                       pclath 000A                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080               __end_of_wait_ok 0261  
            __end_of_SPI_send 0271                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F                __CFG_MCLRE$OFF 0000  
             __initialization 0013                  __end_of_main 01A9                        ??_main 005E  
                      _ANSELH 0189                        i1l1020 0200                        i1l1042 01BC  
                      i1l1134 0121                        _INTCON 000B                        _OSCCON 008F  
                      _TRISA5 042D                        _TRISC3 043B                        _TRISC4 043C  
                      _TRISC5 043D                        _TRISC6 043E                        _TRISC7 043F  
                      _SSPCON 0014                        _SSPBUF 0013                __CFG_PWRTE$OFF 0000  
                      _cCount 0048                        _mCount 004A                        _cqueue 00A0  
                      _pclast 0052                        _pcnext 0053                        _pcsize 0054  
                      _pmlast 007C                        _pmnext 0055                        _mqueue 0020  
                      _pmsize 007D                        saved_w 007E              __end_of_overflow 02B9  
                   ??_wait_ok 005D       __end_of__initialization 003C          __end_of_connect_wifi 00F2  
              __pcstackCOMMON 0070                  __pidataBANK0 02B9                  SPI_send@data 0070  
                   ?_SPI_send 0070                _SPI_sendString 0220                    __pbssBANK0 0020  
                  __pbssBANK1 00A0                    __pbssBANK2 0120               SPI_sendString@i 0075  
          __size_of_buttonINT 0073                    __pmaintext 0165  __size_of_ManagerNormalButton 0042  
                  __pintentry 0004                    ??_SPI_send 0070       __size_of_getNextManager 000D  
      __end_of_SPI_sendString 0245                       _SSPSTAT 0094            __size_of_rx_serial 000C  
          __size_of_usartInit 000E            __size_of_tx_serial 0008   __end_of_CashierNormalButton 0220  
                   ?_overflow 0070                       __ptext1 0271                       __ptext2 003F  
                     __ptext3 0245                       __ptext4 028C                       __ptext5 02B4  
                     __ptext6 0298                       __ptext7 02AC                       __ptext8 00F2  
                     __ptext9 027F                       _pcCount 004C                       _pmCount 004E  
           __end_of_buttonINT 0165                    _new_at_com 0298                       _pcqueue 0120  
                     _wait_ok 0245               ?_SPI_sendString 0070                       _pmqueue 00C8  
                     clrloop0 02A5          end_of_initialization 003C         __size_of_connect_wifi 00B3  
                   _RCSTAbits 0018                    ??_overflow 005D             __end_of_rx_serial 0298  
           __end_of_usartInit 027F                     _PORTAbits 0005                     _PORTBbits 0006  
           __end_of_tx_serial 02B4                  _connect_wifi 003F                tx_serial@aChar 005D  
                   _TXSTAbits 0098            SPI_sendString@data 0071                   ?_new_at_com 0070  
              _getNextManager 027F           start_initialization 0013             __size_of_SPI_send 0010  
         _ManagerNormalButton 01A9      __CFG_FOSC$INTRC_NOCLKOUT 0000          ?_ManagerNormalButton 0070  
                 __pdataBANK0 005E        __end_of_getNextManager 028C                   __pbssCOMMON 0078  
                   ___latbits 0001                 __pcstackBANK0 0056           __size_of_new_at_com 000C  
       ??_ManagerNormalButton 0071             __size_of_overflow 0005               ?_getNextManager 0070  
            ??_SPI_sendString 0071                      ?_wait_ok 0070                     _buttonINT 00F2  
           interrupt_function 0004                     clear_ram0 02A4                      _PIE1bits 008C  
                    _PIR1bits 000C                      _SPI_send 0261  __size_of_CashierNormalButton 0035  
                   _rx_serial 028C                     _usartInit 0271                     _tx_serial 02AC  
                  ?_buttonINT 0070                    ?_rx_serial 0070                  ??_new_at_com 005E  
                  ?_usartInit 0070                    ?_tx_serial 0070                      __ptext10 01A9  
                    __ptext11 01EB                      __ptext12 0220                      __ptext13 0261  
           __CFG_BOR4V$BOR40V 0000              __size_of_wait_ok 001C                 __size_of_main 0044  
          __end_of_new_at_com 02A4                      _overflow 02B4                    _INTCONbits 000B  
                 ??_buttonINT 0056                      intlevel1 0000              ??_getNextManager 0070  
                 ??_rx_serial 005D                   ??_usartInit 005D                   ??_tx_serial 005D  
 __end_of_ManagerNormalButton 01EB           _CashierNormalButton 01EB                    _SSPCONbits 0014  
