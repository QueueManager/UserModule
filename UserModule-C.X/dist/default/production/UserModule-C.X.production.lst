

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Nov 18 18:05:32 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  000E                     	;# 
    46  000E                     	;# 
    47  000F                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0015                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001B                     	;# 
    62  001C                     	;# 
    63  001D                     	;# 
    64  001E                     	;# 
    65  001F                     	;# 
    66  0081                     	;# 
    67  0085                     	;# 
    68  0086                     	;# 
    69  0087                     	;# 
    70  0089                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  008F                     	;# 
    75  0090                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0093                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  0105                     	;# 
    94  0107                     	;# 
    95  0108                     	;# 
    96  0109                     	;# 
    97  010C                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  0185                     	;# 
   103  0187                     	;# 
   104  0188                     	;# 
   105  0189                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108                           
   109                           	psect	idataBANK0
   110  040F                     __pidataBANK0:	
   111                           
   112                           ;initializer for SPI_sendString@F1589
   113  040F  3401               	retlw	1
   114  0410  3400               	retlw	0
   115  0411  3400               	retlw	0
   116  0412  3401               	retlw	1
   117  000B                     _INTCON	set	11
   118  000B                     _INTCONbits	set	11
   119  000C                     _PIR1bits	set	12
   120  0005                     _PORTA	set	5
   121  0005                     _PORTAbits	set	5
   122  0006                     _PORTB	set	6
   123  0006                     _PORTBbits	set	6
   124  0007                     _PORTC	set	7
   125  001A                     _RCREG	set	26
   126  0018                     _RCSTA	set	24
   127  0018                     _RCSTAbits	set	24
   128  0013                     _SSPBUF	set	19
   129  0014                     _SSPCON	set	20
   130  0014                     _SSPCONbits	set	20
   131  0019                     _TXREG	set	25
   132  0096                     _IOCB	set	150
   133  008F                     _OSCCON	set	143
   134  008C                     _PIE1	set	140
   135  008C                     _PIE1bits	set	140
   136  0099                     _SPBRG	set	153
   137  0094                     _SSPSTAT	set	148
   138  0094                     _SSPSTATbits	set	148
   139  0085                     _TRISA	set	133
   140  0086                     _TRISB	set	134
   141  0098                     _TXSTAbits	set	152
   142  042D                     _TRISA5	set	1069
   143  043B                     _TRISC3	set	1083
   144  043C                     _TRISC4	set	1084
   145  043D                     _TRISC5	set	1085
   146  043E                     _TRISC6	set	1086
   147  043F                     _TRISC7	set	1087
   148  040F                     _nRBPU	set	1039
   149  0188                     _ANSEL	set	392
   150  0189                     _ANSELH	set	393
   151                           
   152                           ; #config settings
   153  0000                     
   154                           	psect	cinit
   155  0013                     start_initialization:	
   156  0013                     __initialization:	
   157                           
   158                           ; Initialize objects allocated to BANK0
   159  0013  118A  240F  118A   	fcall	__pidataBANK0	;fetch initializer
   160  0016  00DC               	movwf	__pdataBANK0& (0+127)
   161  0017  118A  2410  118A   	fcall	__pidataBANK0+1	;fetch initializer
   162  001A  00DD               	movwf	(__pdataBANK0+1)& (0+127)
   163  001B  118A  2411  118A   	fcall	__pidataBANK0+2	;fetch initializer
   164  001E  00DE               	movwf	(__pdataBANK0+2)& (0+127)
   165  001F  118A  2412  118A   	fcall	__pidataBANK0+3	;fetch initializer
   166  0022  00DF               	movwf	(__pdataBANK0+3)& (0+127)
   167                           
   168                           ; Clear objects allocated to BANK1
   169  0023  1383               	bcf	3,7	;select IRP bank0
   170  0024  30A0               	movlw	low __pbssBANK1
   171  0025  0084               	movwf	4
   172  0026  30C8               	movlw	low (__pbssBANK1+40)
   173  0027  118A  23FA  118A   	fcall	clear_ram0
   174                           
   175                           ; Clear objects allocated to BANK0
   176  002A  3020               	movlw	low __pbssBANK0
   177  002B  0084               	movwf	4
   178  002C  3053               	movlw	low (__pbssBANK0+51)
   179  002D  118A  23FA  118A   	fcall	clear_ram0
   180                           
   181                           ; Clear objects allocated to COMMON
   182  0030  3078               	movlw	low __pbssCOMMON
   183  0031  0084               	movwf	4
   184  0032  307E               	movlw	low (__pbssCOMMON+6)
   185  0033  118A  23FA         	fcall	clear_ram0
   186  0035                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  0035                     __end_of__initialization:	
   190  0035  0183               	clrf	3
   191  0036  118A  2A7D         	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194  0078                     __pbssCOMMON:	
   195  0078                     _guiche:	
   196  0078                     	ds	1
   197  0079                     _mCount:	
   198  0079                     	ds	1
   199  007A                     _mlast:	
   200  007A                     	ds	1
   201  007B                     _msize:	
   202  007B                     	ds	1
   203  007C                     _pcCount:	
   204  007C                     	ds	1
   205  007D                     _pmCount:	
   206  007D                     	ds	1
   207                           
   208                           	psect	bssBANK0
   209  0020                     __pbssBANK0:	
   210  0020                     _mqueue:	
   211  0020                     	ds	20
   212  0034                     _pmqueue:	
   213  0034                     	ds	20
   214  0048                     _cCount:	
   215  0048                     	ds	1
   216  0049                     _clast:	
   217  0049                     	ds	1
   218  004A                     _cnext:	
   219  004A                     	ds	1
   220  004B                     _csize:	
   221  004B                     	ds	1
   222  004C                     _mnext:	
   223  004C                     	ds	1
   224  004D                     _pclast:	
   225  004D                     	ds	1
   226  004E                     _pcnext:	
   227  004E                     	ds	1
   228  004F                     _pcsize:	
   229  004F                     	ds	1
   230  0050                     _pmlast:	
   231  0050                     	ds	1
   232  0051                     _pmnext:	
   233  0051                     	ds	1
   234  0052                     _pmsize:	
   235  0052                     	ds	1
   236                           
   237                           	psect	dataBANK0
   238  005C                     __pdataBANK0:	
   239  005C                     SPI_sendString@F1589:	
   240  005C                     	ds	4
   241                           
   242                           	psect	bssBANK1
   243  00A0                     __pbssBANK1:	
   244  00A0                     _cqueue:	
   245  00A0                     	ds	20
   246  00B4                     _pcqueue:	
   247  00B4                     	ds	20
   248                           
   249                           	psect	clrtext
   250  03FA                     clear_ram0:	
   251                           ;	Called with FSR containing the base address, and
   252                           ;	W with the last address+1
   253                           
   254  03FA  0064               	clrwdt	;clear the watchdog before getting into this loop
   255  03FB                     clrloop0:	
   256  03FB  0180               	clrf	0	;clear RAM location pointed to by FSR
   257  03FC  0A84               	incf	4,f	;increment pointer
   258  03FD  0604               	xorwf	4,w	;XOR with final address
   259  03FE  1903               	btfsc	3,2	;have we reached the end yet?
   260  03FF  3400               	retlw	0	;all done for this memory range, return
   261  0400  0604               	xorwf	4,w	;XOR again to restore value
   262  0401  2BFB               	goto	clrloop0	;do the next byte
   263                           
   264                           	psect	cstackCOMMON
   265  0070                     __pcstackCOMMON:	
   266  0070                     ?_SPI_send:	
   267  0070                     ??_SPI_send:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_SPI_sendString:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_getNextManager:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ??_getNextManager:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_CashierPriorityButton:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ??_CashierPriorityButton:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_CashierNormalButton:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_ManagerNormalButton:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_ManagerPriorityButton:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ??_ManagerPriorityButton:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_buttonINT:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_overflow:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_tx_serial:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_rx_serial:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_new_at_com:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_wait_ok:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_wait_Connect:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_connect_wifi:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_usartInit:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_main:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     SPI_send@data:	
   328                           ; 1 bytes @ 0x0
   329                           
   330                           
   331                           ; 1 bytes @ 0x0
   332  0070                     	ds	1
   333  0071                     ??_SPI_sendString:	
   334  0071                     ??_ManagerNormalButton:	
   335                           ; 1 bytes @ 0x1
   336                           
   337  0071                     SPI_sendString@data:	
   338                           ; 1 bytes @ 0x1
   339                           
   340                           
   341                           ; 4 bytes @ 0x1
   342  0071                     	ds	4
   343  0075                     SPI_sendString@i:	
   344                           
   345                           ; 2 bytes @ 0x5
   346  0075                     	ds	2
   347  0077                     ??_CashierNormalButton:	
   348                           
   349                           ; 1 bytes @ 0x7
   350  0077                     	ds	1
   351                           
   352                           	psect	cstackBANK0
   353  0053                     __pcstackBANK0:	
   354  0053                     ??_buttonINT:	
   355                           
   356                           ; 1 bytes @ 0x0
   357  0053                     	ds	7
   358  005A                     ??_overflow:	
   359  005A                     ??_tx_serial:	
   360                           ; 1 bytes @ 0x7
   361                           
   362  005A                     ??_rx_serial:	
   363                           ; 1 bytes @ 0x7
   364                           
   365  005A                     ??_wait_ok:	
   366                           ; 1 bytes @ 0x7
   367                           
   368  005A                     ??_wait_Connect:	
   369                           ; 1 bytes @ 0x7
   370                           
   371  005A                     ??_usartInit:	
   372                           ; 1 bytes @ 0x7
   373                           
   374  005A                     tx_serial@aChar:	
   375                           ; 1 bytes @ 0x7
   376                           
   377                           
   378                           ; 1 bytes @ 0x7
   379  005A                     	ds	1
   380  005B                     ??_new_at_com:	
   381  005B                     ??_connect_wifi:	
   382                           ; 1 bytes @ 0x8
   383                           
   384  005B                     ??_main:	
   385                           ; 1 bytes @ 0x8
   386                           
   387                           
   388                           ; 1 bytes @ 0x8
   389  005B                     	ds	1
   390                           
   391                           	psect	maintext
   392  027D                     __pmaintext:	
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 561 in file "main.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : B00/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   412 ;;      Params:         0       0       0       0
   413 ;;      Locals:         0       0       0       0
   414 ;;      Temps:          0       1       0       0
   415 ;;      Totals:         0       1       0       0
   416 ;;Total ram usage:        1 bytes
   417 ;; Hardware stack levels required when called:    8
   418 ;; This function calls:
   419 ;;		_connect_wifi
   420 ;;		_rx_serial
   421 ;;		_usartInit
   422 ;;		_wait_Connect
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _main
   430  027D                     _main:	
   431                           
   432                           ;main.c: 562: nRBPU = 0;
   433                           
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   436  027D  1683               	bsf	3,5	;RP0=1, select bank1
   437  027E  1303               	bcf	3,6	;RP1=0, select bank1
   438  027F  1381               	bcf	1,7	;volatile
   439                           
   440                           ;main.c: 564: ANSEL = 0x00;
   441  0280  1683               	bsf	3,5	;RP0=1, select bank3
   442  0281  1703               	bsf	3,6	;RP1=1, select bank3
   443  0282  0188               	clrf	8	;volatile
   444                           
   445                           ;main.c: 565: PORTA = 0x00;
   446  0283  1283               	bcf	3,5	;RP0=0, select bank0
   447  0284  1303               	bcf	3,6	;RP1=0, select bank0
   448  0285  0185               	clrf	5	;volatile
   449                           
   450                           ;main.c: 566: TRISA = 0x00;
   451  0286  1683               	bsf	3,5	;RP0=1, select bank1
   452  0287  1303               	bcf	3,6	;RP1=0, select bank1
   453  0288  0185               	clrf	5	;volatile
   454                           
   455                           ;main.c: 568: PORTC = 0x00;
   456  0289  1283               	bcf	3,5	;RP0=0, select bank0
   457  028A  1303               	bcf	3,6	;RP1=0, select bank0
   458  028B  0187               	clrf	7	;volatile
   459                           
   460                           ;main.c: 569: TRISC7 = 1;
   461  028C  1683               	bsf	3,5	;RP0=1, select bank1
   462  028D  1303               	bcf	3,6	;RP1=0, select bank1
   463  028E  1787               	bsf	7,7	;volatile
   464                           
   465                           ;main.c: 570: TRISC6 = 0;
   466  028F  1307               	bcf	7,6	;volatile
   467                           
   468                           ;main.c: 572: TRISB = 0x1E;
   469  0290  301E               	movlw	30
   470  0291  0086               	movwf	6	;volatile
   471                           
   472                           ;main.c: 573: PORTB = 0xFF;
   473  0292  30FF               	movlw	255
   474  0293  1283               	bcf	3,5	;RP0=0, select bank0
   475  0294  1303               	bcf	3,6	;RP1=0, select bank0
   476  0295  0086               	movwf	6	;volatile
   477                           
   478                           ;main.c: 575: ANSELH = 0x00;
   479  0296  1683               	bsf	3,5	;RP0=1, select bank3
   480  0297  1703               	bsf	3,6	;RP1=1, select bank3
   481  0298  0189               	clrf	9	;volatile
   482                           
   483                           ;main.c: 577: INTCON = 0xC8;
   484  0299  30C8               	movlw	200
   485  029A  008B               	movwf	11	;volatile
   486                           
   487                           ;main.c: 579: IOCB = 0xFF;
   488  029B  30FF               	movlw	255
   489  029C  1683               	bsf	3,5	;RP0=1, select bank1
   490  029D  1303               	bcf	3,6	;RP1=0, select bank1
   491  029E  0096               	movwf	22	;volatile
   492                           
   493                           ;main.c: 580: PIE1 = 0x60;
   494  029F  3060               	movlw	96
   495  02A0  008C               	movwf	12	;volatile
   496                           
   497                           ;main.c: 582: RCSTA = 0x90;
   498  02A1  3090               	movlw	144
   499  02A2  1283               	bcf	3,5	;RP0=0, select bank0
   500  02A3  1303               	bcf	3,6	;RP1=0, select bank0
   501  02A4  0098               	movwf	24	;volatile
   502                           
   503                           ;main.c: 583: TXSTAbits.SYNC = 0x00;
   504  02A5  1683               	bsf	3,5	;RP0=1, select bank1
   505  02A6  1303               	bcf	3,6	;RP1=0, select bank1
   506  02A7  1218               	bcf	24,4	;volatile
   507                           
   508                           ;main.c: 589: mlast = 0x00;
   509  02A8  01FA               	clrf	_mlast
   510                           
   511                           ;main.c: 590: mnext = 0x00;
   512  02A9  1283               	bcf	3,5	;RP0=0, select bank0
   513  02AA  1303               	bcf	3,6	;RP1=0, select bank0
   514  02AB  01CC               	clrf	_mnext
   515                           
   516                           ;main.c: 591: msize = 0x00;
   517  02AC  01FB               	clrf	_msize
   518                           
   519                           ;main.c: 592: pmlast = 0x00;
   520  02AD  01D0               	clrf	_pmlast
   521                           
   522                           ;main.c: 593: pmnext = 0x00;
   523  02AE  01D1               	clrf	_pmnext
   524                           
   525                           ;main.c: 594: pmsize = 0x00;
   526  02AF  01D2               	clrf	_pmsize
   527                           
   528                           ;main.c: 595: clast = 0x00;
   529  02B0  01C9               	clrf	_clast
   530                           
   531                           ;main.c: 596: cnext = 0x00;
   532  02B1  01CA               	clrf	_cnext
   533                           
   534                           ;main.c: 597: csize = 0x00;
   535  02B2  01CB               	clrf	_csize
   536                           
   537                           ;main.c: 598: pclast = 0x00;
   538  02B3  01CD               	clrf	_pclast
   539                           
   540                           ;main.c: 599: pcnext = 0x00;
   541  02B4  01CE               	clrf	_pcnext
   542                           
   543                           ;main.c: 600: pcsize = 0x00;
   544  02B5  01CF               	clrf	_pcsize
   545                           
   546                           ;main.c: 603: OSCCON = 0x70;
   547  02B6  3070               	movlw	112
   548  02B7  1683               	bsf	3,5	;RP0=1, select bank1
   549  02B8  1303               	bcf	3,6	;RP1=0, select bank1
   550  02B9  008F               	movwf	15	;volatile
   551                           
   552                           ;main.c: 604: usartInit();
   553  02BA  118A  23C7  118A   	fcall	_usartInit
   554                           
   555                           ;main.c: 605: connect_wifi();
   556  02BD  118A  2038  118A   	fcall	_connect_wifi
   557  02C0                     l1638:	
   558                           ;main.c: 608: while(1)
   559                           
   560                           
   561                           ;main.c: 609: {
   562                           ;main.c: 610: wait_Connect();
   563  02C0  118A  213C  118A   	fcall	_wait_Connect
   564                           
   565                           ;main.c: 611: rx_serial();
   566  02C3  118A  23E2  118A   	fcall	_rx_serial
   567                           
   568                           ;main.c: 612: guiche = RCREG;
   569  02C6  1283               	bcf	3,5	;RP0=0, select bank0
   570  02C7  1303               	bcf	3,6	;RP1=0, select bank0
   571  02C8  081A               	movf	26,w	;volatile
   572  02C9  00DB               	movwf	??_main
   573  02CA  085B               	movf	??_main,w
   574  02CB  00F8               	movwf	_guiche
   575  02CC  2AC0               	goto	l1638
   576  02CD                     __end_of_main:	
   577                           
   578                           	psect	text1
   579  013C                     __ptext1:	
   580 ;; *************** function _wait_Connect *****************
   581 ;; Defined at:
   582 ;;		line 314 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   596 ;;      Params:         0       0       0       0
   597 ;;      Locals:         0       0       0       0
   598 ;;      Temps:          0       0       0       0
   599 ;;      Totals:         0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    6
   603 ;; This function calls:
   604 ;;		_rx_serial
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _wait_Connect
   612  013C                     _wait_Connect:	
   613  013C                     l222:	
   614                           ;incstack = 0
   615                           ; Regs used in _wait_Connect: [wreg+status,2+status,0+pclath+cstack]
   616                           ;main.c: 315: while (1) {
   617                           
   618                           ;main.c: 398: continue;
   619                           
   620                           ;main.c: 394: continue;
   621                           
   622                           ;main.c: 390: continue;
   623                           
   624                           ;main.c: 386: continue;
   625                           
   626                           ;main.c: 382: continue;
   627                           
   628                           ;main.c: 378: continue;
   629                           
   630                           ;main.c: 374: continue;
   631                           
   632                           ;main.c: 370: continue;
   633                           
   634                           ;main.c: 366: continue;
   635                           
   636                           ;main.c: 362: continue;
   637                           
   638                           ;main.c: 358: continue;
   639                           
   640                           ;main.c: 354: continue;
   641                           
   642                           ;main.c: 350: continue;
   643                           
   644                           ;main.c: 346: continue;
   645                           
   646                           ;main.c: 342: continue;
   647                           
   648                           ;main.c: 338: continue;
   649                           
   650                           ;main.c: 334: continue;
   651                           
   652                           ;main.c: 330: continue;
   653                           
   654                           ;main.c: 326: continue;
   655                           
   656                           ;main.c: 322: continue;
   657                           
   658                           ;main.c: 318: continue;
   659                           
   660                           
   661                           ;main.c: 316: rx_serial();
   662  013C  118A  23E2  118A   	fcall	_rx_serial
   663                           
   664                           ;main.c: 317: if (RCREG != '0') {
   665  013F  3030               	movlw	48
   666  0140  1283               	bcf	3,5	;RP0=0, select bank0
   667  0141  1303               	bcf	3,6	;RP1=0, select bank0
   668  0142  061A               	xorwf	26,w	;volatile
   669  0143  1D03               	btfss	3,2
   670  0144  293C               	goto	l222
   671                           
   672                           ;main.c: 319: }
   673                           ;main.c: 320: rx_serial();
   674  0145  118A  23E2  118A   	fcall	_rx_serial
   675                           
   676                           ;main.c: 321: if (RCREG != ',') {
   677  0148  302C               	movlw	44
   678  0149  1283               	bcf	3,5	;RP0=0, select bank0
   679  014A  1303               	bcf	3,6	;RP1=0, select bank0
   680  014B  061A               	xorwf	26,w	;volatile
   681  014C  1D03               	btfss	3,2
   682  014D  293C               	goto	l222
   683                           
   684                           ;main.c: 323: }
   685                           ;main.c: 324: rx_serial();
   686  014E  118A  23E2  118A   	fcall	_rx_serial
   687                           
   688                           ;main.c: 325: if (RCREG != 'C') {
   689  0151  3043               	movlw	67
   690  0152  1283               	bcf	3,5	;RP0=0, select bank0
   691  0153  1303               	bcf	3,6	;RP1=0, select bank0
   692  0154  061A               	xorwf	26,w	;volatile
   693  0155  1D03               	btfss	3,2
   694  0156  293C               	goto	l222
   695                           
   696                           ;main.c: 327: }
   697                           ;main.c: 328: rx_serial();
   698  0157  118A  23E2  118A   	fcall	_rx_serial
   699                           
   700                           ;main.c: 329: if (RCREG != 'O') {
   701  015A  304F               	movlw	79
   702  015B  1283               	bcf	3,5	;RP0=0, select bank0
   703  015C  1303               	bcf	3,6	;RP1=0, select bank0
   704  015D  061A               	xorwf	26,w	;volatile
   705  015E  1D03               	btfss	3,2
   706  015F  293C               	goto	l222
   707                           
   708                           ;main.c: 331: }
   709                           ;main.c: 332: rx_serial();
   710  0160  118A  23E2  118A   	fcall	_rx_serial
   711                           
   712                           ;main.c: 333: if (RCREG != 'N') {
   713  0163  304E               	movlw	78
   714  0164  1283               	bcf	3,5	;RP0=0, select bank0
   715  0165  1303               	bcf	3,6	;RP1=0, select bank0
   716  0166  061A               	xorwf	26,w	;volatile
   717  0167  1D03               	btfss	3,2
   718  0168  293C               	goto	l222
   719                           
   720                           ;main.c: 335: }
   721                           ;main.c: 336: rx_serial();
   722  0169  118A  23E2  118A   	fcall	_rx_serial
   723                           
   724                           ;main.c: 337: if (RCREG != 'N') {
   725  016C  304E               	movlw	78
   726  016D  1283               	bcf	3,5	;RP0=0, select bank0
   727  016E  1303               	bcf	3,6	;RP1=0, select bank0
   728  016F  061A               	xorwf	26,w	;volatile
   729  0170  1D03               	btfss	3,2
   730  0171  293C               	goto	l222
   731                           
   732                           ;main.c: 339: }
   733                           ;main.c: 340: rx_serial();
   734  0172  118A  23E2  118A   	fcall	_rx_serial
   735                           
   736                           ;main.c: 341: if (RCREG != 'E') {
   737  0175  3045               	movlw	69
   738  0176  1283               	bcf	3,5	;RP0=0, select bank0
   739  0177  1303               	bcf	3,6	;RP1=0, select bank0
   740  0178  061A               	xorwf	26,w	;volatile
   741  0179  1D03               	btfss	3,2
   742  017A  293C               	goto	l222
   743                           
   744                           ;main.c: 343: }
   745                           ;main.c: 344: rx_serial();
   746  017B  118A  23E2  118A   	fcall	_rx_serial
   747                           
   748                           ;main.c: 345: if (RCREG != 'C') {
   749  017E  3043               	movlw	67
   750  017F  1283               	bcf	3,5	;RP0=0, select bank0
   751  0180  1303               	bcf	3,6	;RP1=0, select bank0
   752  0181  061A               	xorwf	26,w	;volatile
   753  0182  1D03               	btfss	3,2
   754  0183  293C               	goto	l222
   755                           
   756                           ;main.c: 347: }
   757                           ;main.c: 348: rx_serial();
   758  0184  118A  23E2  118A   	fcall	_rx_serial
   759                           
   760                           ;main.c: 349: if (RCREG != 'T') {
   761  0187  3054               	movlw	84
   762  0188  1283               	bcf	3,5	;RP0=0, select bank0
   763  0189  1303               	bcf	3,6	;RP1=0, select bank0
   764  018A  061A               	xorwf	26,w	;volatile
   765  018B  1D03               	btfss	3,2
   766  018C  293C               	goto	l222
   767                           
   768                           ;main.c: 351: }
   769                           ;main.c: 352: rx_serial();
   770  018D  118A  23E2  118A   	fcall	_rx_serial
   771                           
   772                           ;main.c: 353: if (RCREG == 0xD) {
   773  0190  300D               	movlw	13
   774  0191  1283               	bcf	3,5	;RP0=0, select bank0
   775  0192  1303               	bcf	3,6	;RP1=0, select bank0
   776  0193  061A               	xorwf	26,w	;volatile
   777  0194  1903               	btfsc	3,2
   778  0195  293C               	goto	l222
   779                           
   780                           ;main.c: 355: }
   781                           ;main.c: 356: rx_serial();
   782  0196  118A  23E2  118A   	fcall	_rx_serial
   783                           
   784                           ;main.c: 357: if (RCREG == 0xA) {
   785  0199  300A               	movlw	10
   786  019A  1283               	bcf	3,5	;RP0=0, select bank0
   787  019B  1303               	bcf	3,6	;RP1=0, select bank0
   788  019C  061A               	xorwf	26,w	;volatile
   789  019D  1903               	btfsc	3,2
   790  019E  293C               	goto	l222
   791                           
   792                           ;main.c: 359: }
   793                           ;main.c: 360: rx_serial();
   794  019F  118A  23E2  118A   	fcall	_rx_serial
   795                           
   796                           ;main.c: 361: if (RCREG == 0xD) {
   797  01A2  300D               	movlw	13
   798  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   799  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   800  01A5  061A               	xorwf	26,w	;volatile
   801  01A6  1903               	btfsc	3,2
   802  01A7  293C               	goto	l222
   803                           
   804                           ;main.c: 363: }
   805                           ;main.c: 364: rx_serial();
   806  01A8  118A  23E2  118A   	fcall	_rx_serial
   807                           
   808                           ;main.c: 365: if (RCREG == 0xA) {
   809  01AB  300A               	movlw	10
   810  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   811  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   812  01AE  061A               	xorwf	26,w	;volatile
   813  01AF  1903               	btfsc	3,2
   814  01B0  293C               	goto	l222
   815                           
   816                           ;main.c: 367: }
   817                           ;main.c: 368: rx_serial();
   818  01B1  118A  23E2  118A   	fcall	_rx_serial
   819                           
   820                           ;main.c: 369: if (RCREG == '+') {
   821  01B4  302B               	movlw	43
   822  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   823  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   824  01B7  061A               	xorwf	26,w	;volatile
   825  01B8  1903               	btfsc	3,2
   826  01B9  293C               	goto	l222
   827                           
   828                           ;main.c: 371: }
   829                           ;main.c: 372: rx_serial();
   830  01BA  118A  23E2  118A   	fcall	_rx_serial
   831                           
   832                           ;main.c: 373: if (RCREG == 'I') {
   833  01BD  3049               	movlw	73
   834  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   835  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   836  01C0  061A               	xorwf	26,w	;volatile
   837  01C1  1903               	btfsc	3,2
   838  01C2  293C               	goto	l222
   839                           
   840                           ;main.c: 375: }
   841                           ;main.c: 376: rx_serial();
   842  01C3  118A  23E2  118A   	fcall	_rx_serial
   843                           
   844                           ;main.c: 377: if (RCREG == 'P') {
   845  01C6  3050               	movlw	80
   846  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   847  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   848  01C9  061A               	xorwf	26,w	;volatile
   849  01CA  1903               	btfsc	3,2
   850  01CB  293C               	goto	l222
   851                           
   852                           ;main.c: 379: }
   853                           ;main.c: 380: rx_serial();
   854  01CC  118A  23E2  118A   	fcall	_rx_serial
   855                           
   856                           ;main.c: 381: if (RCREG == 'D') {
   857  01CF  3044               	movlw	68
   858  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   859  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   860  01D2  061A               	xorwf	26,w	;volatile
   861  01D3  1903               	btfsc	3,2
   862  01D4  293C               	goto	l222
   863                           
   864                           ;main.c: 383: }
   865                           ;main.c: 384: rx_serial();
   866  01D5  118A  23E2  118A   	fcall	_rx_serial
   867                           
   868                           ;main.c: 385: if (RCREG == ',') {
   869  01D8  302C               	movlw	44
   870  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   871  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   872  01DB  061A               	xorwf	26,w	;volatile
   873  01DC  1903               	btfsc	3,2
   874  01DD  293C               	goto	l222
   875                           
   876                           ;main.c: 387: }
   877                           ;main.c: 388: rx_serial();
   878  01DE  118A  23E2  118A   	fcall	_rx_serial
   879                           
   880                           ;main.c: 389: if (RCREG == '0') {
   881  01E1  3030               	movlw	48
   882  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   883  01E3  1303               	bcf	3,6	;RP1=0, select bank0
   884  01E4  061A               	xorwf	26,w	;volatile
   885  01E5  1903               	btfsc	3,2
   886  01E6  293C               	goto	l222
   887                           
   888                           ;main.c: 391: }
   889                           ;main.c: 392: rx_serial();
   890  01E7  118A  23E2  118A   	fcall	_rx_serial
   891                           
   892                           ;main.c: 393: if (RCREG == ',') {
   893  01EA  302C               	movlw	44
   894  01EB  1283               	bcf	3,5	;RP0=0, select bank0
   895  01EC  1303               	bcf	3,6	;RP1=0, select bank0
   896  01ED  061A               	xorwf	26,w	;volatile
   897  01EE  1903               	btfsc	3,2
   898  01EF  293C               	goto	l222
   899                           
   900                           ;main.c: 395: }
   901                           ;main.c: 396: rx_serial();
   902  01F0  118A  23E2  118A   	fcall	_rx_serial
   903                           
   904                           ;main.c: 397: if (RCREG == '1') {
   905  01F3  3031               	movlw	49
   906  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   907  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   908  01F6  061A               	xorwf	26,w	;volatile
   909  01F7  1903               	btfsc	3,2
   910  01F8  293C               	goto	l222
   911                           
   912                           ;main.c: 399: }
   913                           ;main.c: 400: rx_serial();
   914  01F9  118A  23E2  118A   	fcall	_rx_serial
   915                           
   916                           ;main.c: 401: if (RCREG == ':') {
   917  01FC  303A               	movlw	58
   918  01FD  1283               	bcf	3,5	;RP0=0, select bank0
   919  01FE  1303               	bcf	3,6	;RP1=0, select bank0
   920  01FF  061A               	xorwf	26,w	;volatile
   921  0200  1903               	btfsc	3,2
   922  0201  0008               	return
   923  0202  293C               	goto	l222
   924  0203                     __end_of_wait_Connect:	
   925                           ;main.c: 402: break;
   926                           
   927                           
   928                           	psect	text2
   929  03C7                     __ptext2:	
   930 ;; *************** function _usartInit *****************
   931 ;; Defined at:
   932 ;;		line 553 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   946 ;;      Params:         0       0       0       0
   947 ;;      Locals:         0       0       0       0
   948 ;;      Temps:          0       0       0       0
   949 ;;      Totals:         0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    4
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _usartInit
   962  03C7                     _usartInit:	
   963                           
   964                           ;main.c: 554: SPBRG = 0xC;
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in _usartInit: [wreg]
   968  03C7  300C               	movlw	12
   969  03C8  1683               	bsf	3,5	;RP0=1, select bank1
   970  03C9  1303               	bcf	3,6	;RP1=0, select bank1
   971  03CA  0099               	movwf	25	;volatile
   972                           
   973                           ;main.c: 555: PIR1bits.RCIF = 0x00;
   974  03CB  1283               	bcf	3,5	;RP0=0, select bank0
   975  03CC  1303               	bcf	3,6	;RP1=0, select bank0
   976  03CD  128C               	bcf	12,5	;volatile
   977                           
   978                           ;main.c: 556: RCSTAbits.SPEN = 0x01;
   979  03CE  1798               	bsf	24,7	;volatile
   980                           
   981                           ;main.c: 557: RCSTAbits.CREN = 0x01;
   982  03CF  1618               	bsf	24,4	;volatile
   983                           
   984                           ;main.c: 558: TXSTAbits.SYNC = 0x00;
   985  03D0  1683               	bsf	3,5	;RP0=1, select bank1
   986  03D1  1303               	bcf	3,6	;RP1=0, select bank1
   987  03D2  1218               	bcf	24,4	;volatile
   988                           
   989                           ;main.c: 559: TXSTAbits.TXEN = 0x01;
   990  03D3  1698               	bsf	24,5	;volatile
   991  03D4  0008               	return
   992  03D5                     __end_of_usartInit:	
   993                           
   994                           	psect	text3
   995  0038                     __ptext3:	
   996 ;; *************** function _connect_wifi *****************
   997 ;; Defined at:
   998 ;;		line 479 in file "main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1012 ;;      Params:         0       0       0       0
  1013 ;;      Locals:         0       0       0       0
  1014 ;;      Temps:          0       0       0       0
  1015 ;;      Totals:         0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    7
  1019 ;; This function calls:
  1020 ;;		_new_at_com
  1021 ;;		_tx_serial
  1022 ;;		_wait_ok
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _connect_wifi
  1030  0038                     _connect_wifi:	
  1031                           
  1032                           ;main.c: 481: new_at_com();
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in _connect_wifi: [wreg+status,2+status,0+pclath+cstack]
  1036  0038  118A  23EE  118A   	fcall	_new_at_com
  1037                           
  1038                           ;main.c: 482: tx_serial('C');
  1039  003B  3043               	movlw	67
  1040  003C  118A  2402  118A   	fcall	_tx_serial
  1041                           
  1042                           ;main.c: 483: tx_serial('W');
  1043  003F  3057               	movlw	87
  1044  0040  118A  2402  118A   	fcall	_tx_serial
  1045                           
  1046                           ;main.c: 484: tx_serial('M');
  1047  0043  304D               	movlw	77
  1048  0044  118A  2402  118A   	fcall	_tx_serial
  1049                           
  1050                           ;main.c: 485: tx_serial('O');
  1051  0047  304F               	movlw	79
  1052  0048  118A  2402  118A   	fcall	_tx_serial
  1053                           
  1054                           ;main.c: 486: tx_serial('D');
  1055  004B  3044               	movlw	68
  1056  004C  118A  2402  118A   	fcall	_tx_serial
  1057                           
  1058                           ;main.c: 487: tx_serial('E');
  1059  004F  3045               	movlw	69
  1060  0050  118A  2402  118A   	fcall	_tx_serial
  1061                           
  1062                           ;main.c: 488: tx_serial('=');
  1063  0053  303D               	movlw	61
  1064  0054  118A  2402  118A   	fcall	_tx_serial
  1065                           
  1066                           ;main.c: 489: tx_serial('1');
  1067  0057  3031               	movlw	49
  1068  0058  118A  2402  118A   	fcall	_tx_serial
  1069                           
  1070                           ;main.c: 490: tx_serial(0xD);
  1071  005B  300D               	movlw	13
  1072  005C  118A  2402  118A   	fcall	_tx_serial
  1073                           
  1074                           ;main.c: 491: tx_serial(0xA);
  1075  005F  300A               	movlw	10
  1076  0060  118A  2402  118A   	fcall	_tx_serial
  1077                           
  1078                           ;main.c: 492: wait_ok();
  1079  0063  118A  239B  118A   	fcall	_wait_ok
  1080                           
  1081                           ;main.c: 494: new_at_com();
  1082  0066  118A  23EE  118A   	fcall	_new_at_com
  1083                           
  1084                           ;main.c: 495: tx_serial('C');
  1085  0069  3043               	movlw	67
  1086  006A  118A  2402  118A   	fcall	_tx_serial
  1087                           
  1088                           ;main.c: 496: tx_serial('W');
  1089  006D  3057               	movlw	87
  1090  006E  118A  2402  118A   	fcall	_tx_serial
  1091                           
  1092                           ;main.c: 497: tx_serial('J');
  1093  0071  304A               	movlw	74
  1094  0072  118A  2402  118A   	fcall	_tx_serial
  1095                           
  1096                           ;main.c: 498: tx_serial('A');
  1097  0075  3041               	movlw	65
  1098  0076  118A  2402  118A   	fcall	_tx_serial
  1099                           
  1100                           ;main.c: 499: tx_serial('P');
  1101  0079  3050               	movlw	80
  1102  007A  118A  2402  118A   	fcall	_tx_serial
  1103                           
  1104                           ;main.c: 500: tx_serial('_');
  1105  007D  305F               	movlw	95
  1106  007E  118A  2402  118A   	fcall	_tx_serial
  1107                           
  1108                           ;main.c: 501: tx_serial('C');
  1109  0081  3043               	movlw	67
  1110  0082  118A  2402  118A   	fcall	_tx_serial
  1111                           
  1112                           ;main.c: 502: tx_serial('U');
  1113  0085  3055               	movlw	85
  1114  0086  118A  2402  118A   	fcall	_tx_serial
  1115                           
  1116                           ;main.c: 503: tx_serial('R');
  1117  0089  3052               	movlw	82
  1118  008A  118A  2402  118A   	fcall	_tx_serial
  1119                           
  1120                           ;main.c: 504: tx_serial('=');
  1121  008D  303D               	movlw	61
  1122  008E  118A  2402  118A   	fcall	_tx_serial
  1123                           
  1124                           ;main.c: 505: tx_serial('"');
  1125  0091  3022               	movlw	34
  1126  0092  118A  2402  118A   	fcall	_tx_serial
  1127                           
  1128                           ;main.c: 506: tx_serial('d');
  1129  0095  3064               	movlw	100
  1130  0096  118A  2402  118A   	fcall	_tx_serial
  1131                           
  1132                           ;main.c: 507: tx_serial('l');
  1133  0099  306C               	movlw	108
  1134  009A  118A  2402  118A   	fcall	_tx_serial
  1135                           
  1136                           ;main.c: 508: tx_serial('i');
  1137  009D  3069               	movlw	105
  1138  009E  118A  2402  118A   	fcall	_tx_serial
  1139                           
  1140                           ;main.c: 509: tx_serial('n');
  1141  00A1  306E               	movlw	110
  1142  00A2  118A  2402  118A   	fcall	_tx_serial
  1143                           
  1144                           ;main.c: 510: tx_serial('k');
  1145  00A5  306B               	movlw	107
  1146  00A6  118A  2402  118A   	fcall	_tx_serial
  1147                           
  1148                           ;main.c: 511: tx_serial('"');
  1149  00A9  3022               	movlw	34
  1150  00AA  118A  2402  118A   	fcall	_tx_serial
  1151                           
  1152                           ;main.c: 512: tx_serial(',');
  1153  00AD  302C               	movlw	44
  1154  00AE  118A  2402  118A   	fcall	_tx_serial
  1155                           
  1156                           ;main.c: 513: tx_serial('"');
  1157  00B1  3022               	movlw	34
  1158  00B2  118A  2402  118A   	fcall	_tx_serial
  1159                           
  1160                           ;main.c: 514: tx_serial('"');
  1161  00B5  3022               	movlw	34
  1162  00B6  118A  2402  118A   	fcall	_tx_serial
  1163                           
  1164                           ;main.c: 515: tx_serial(0xD);
  1165  00B9  300D               	movlw	13
  1166  00BA  118A  2402  118A   	fcall	_tx_serial
  1167                           
  1168                           ;main.c: 516: tx_serial(0xA);
  1169  00BD  300A               	movlw	10
  1170  00BE  118A  2402  118A   	fcall	_tx_serial
  1171                           
  1172                           ;main.c: 517: wait_ok();
  1173  00C1  118A  239B  118A   	fcall	_wait_ok
  1174                           
  1175                           ;main.c: 519: new_at_com();
  1176  00C4  118A  23EE  118A   	fcall	_new_at_com
  1177                           
  1178                           ;main.c: 520: tx_serial('C');
  1179  00C7  3043               	movlw	67
  1180  00C8  118A  2402  118A   	fcall	_tx_serial
  1181                           
  1182                           ;main.c: 521: tx_serial('P');
  1183  00CB  3050               	movlw	80
  1184  00CC  118A  2402  118A   	fcall	_tx_serial
  1185                           
  1186                           ;main.c: 522: tx_serial('M');
  1187  00CF  304D               	movlw	77
  1188  00D0  118A  2402  118A   	fcall	_tx_serial
  1189                           
  1190                           ;main.c: 523: tx_serial('U');
  1191  00D3  3055               	movlw	85
  1192  00D4  118A  2402  118A   	fcall	_tx_serial
  1193                           
  1194                           ;main.c: 524: tx_serial('X');
  1195  00D7  3058               	movlw	88
  1196  00D8  118A  2402  118A   	fcall	_tx_serial
  1197                           
  1198                           ;main.c: 525: tx_serial('=');
  1199  00DB  303D               	movlw	61
  1200  00DC  118A  2402  118A   	fcall	_tx_serial
  1201                           
  1202                           ;main.c: 526: tx_serial('1');
  1203  00DF  3031               	movlw	49
  1204  00E0  118A  2402  118A   	fcall	_tx_serial
  1205                           
  1206                           ;main.c: 527: tx_serial(0xD);
  1207  00E3  300D               	movlw	13
  1208  00E4  118A  2402  118A   	fcall	_tx_serial
  1209                           
  1210                           ;main.c: 528: tx_serial(0xA);
  1211  00E7  300A               	movlw	10
  1212  00E8  118A  2402  118A   	fcall	_tx_serial
  1213                           
  1214                           ;main.c: 529: wait_ok();
  1215  00EB  118A  239B  118A   	fcall	_wait_ok
  1216                           
  1217                           ;main.c: 531: new_at_com();
  1218  00EE  118A  23EE  118A   	fcall	_new_at_com
  1219                           
  1220                           ;main.c: 532: tx_serial('C');
  1221  00F1  3043               	movlw	67
  1222  00F2  118A  2402  118A   	fcall	_tx_serial
  1223                           
  1224                           ;main.c: 533: tx_serial('I');
  1225  00F5  3049               	movlw	73
  1226  00F6  118A  2402  118A   	fcall	_tx_serial
  1227                           
  1228                           ;main.c: 534: tx_serial('P');
  1229  00F9  3050               	movlw	80
  1230  00FA  118A  2402  118A   	fcall	_tx_serial
  1231                           
  1232                           ;main.c: 535: tx_serial('S');
  1233  00FD  3053               	movlw	83
  1234  00FE  118A  2402  118A   	fcall	_tx_serial
  1235                           
  1236                           ;main.c: 536: tx_serial('E');
  1237  0101  3045               	movlw	69
  1238  0102  118A  2402  118A   	fcall	_tx_serial
  1239                           
  1240                           ;main.c: 537: tx_serial('R');
  1241  0105  3052               	movlw	82
  1242  0106  118A  2402  118A   	fcall	_tx_serial
  1243                           
  1244                           ;main.c: 538: tx_serial('V');
  1245  0109  3056               	movlw	86
  1246  010A  118A  2402  118A   	fcall	_tx_serial
  1247                           
  1248                           ;main.c: 539: tx_serial('E');
  1249  010D  3045               	movlw	69
  1250  010E  118A  2402  118A   	fcall	_tx_serial
  1251                           
  1252                           ;main.c: 540: tx_serial('R');
  1253  0111  3052               	movlw	82
  1254  0112  118A  2402  118A   	fcall	_tx_serial
  1255                           
  1256                           ;main.c: 541: tx_serial('=');
  1257  0115  303D               	movlw	61
  1258  0116  118A  2402  118A   	fcall	_tx_serial
  1259                           
  1260                           ;main.c: 542: tx_serial('1');
  1261  0119  3031               	movlw	49
  1262  011A  118A  2402  118A   	fcall	_tx_serial
  1263                           
  1264                           ;main.c: 543: tx_serial(',');
  1265  011D  302C               	movlw	44
  1266  011E  118A  2402  118A   	fcall	_tx_serial
  1267                           
  1268                           ;main.c: 544: tx_serial('1');
  1269  0121  3031               	movlw	49
  1270  0122  118A  2402  118A   	fcall	_tx_serial
  1271                           
  1272                           ;main.c: 545: tx_serial('0');
  1273  0125  3030               	movlw	48
  1274  0126  118A  2402  118A   	fcall	_tx_serial
  1275                           
  1276                           ;main.c: 546: tx_serial('0');
  1277  0129  3030               	movlw	48
  1278  012A  118A  2402  118A   	fcall	_tx_serial
  1279                           
  1280                           ;main.c: 547: tx_serial('0');
  1281  012D  3030               	movlw	48
  1282  012E  118A  2402  118A   	fcall	_tx_serial
  1283                           
  1284                           ;main.c: 548: tx_serial(0xD);
  1285  0131  300D               	movlw	13
  1286  0132  118A  2402  118A   	fcall	_tx_serial
  1287                           
  1288                           ;main.c: 549: tx_serial(0xA);
  1289  0135  300A               	movlw	10
  1290  0136  118A  2402  118A   	fcall	_tx_serial
  1291                           
  1292                           ;main.c: 550: wait_ok();
  1293  0139  118A  239B         	fcall	_wait_ok
  1294  013B  0008               	return
  1295  013C                     __end_of_connect_wifi:	
  1296                           
  1297                           	psect	text4
  1298  039B                     __ptext4:	
  1299 ;; *************** function _wait_ok *****************
  1300 ;; Defined at:
  1301 ;;		line 297 in file "main.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1315 ;;      Params:         0       0       0       0
  1316 ;;      Locals:         0       0       0       0
  1317 ;;      Temps:          0       0       0       0
  1318 ;;      Totals:         0       0       0       0
  1319 ;;Total ram usage:        0 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    6
  1322 ;; This function calls:
  1323 ;;		_rx_serial
  1324 ;; This function is called by:
  1325 ;;		_connect_wifi
  1326 ;;		_send_To_Attendant
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _wait_ok
  1332  039B                     _wait_ok:	
  1333  039B                     l213:	
  1334                           ;incstack = 0
  1335                           ; Regs used in _wait_ok: [wreg+status,2+status,0+pclath+cstack]
  1336                           ;main.c: 298: while (1) {
  1337                           
  1338                           ;main.c: 305: continue;
  1339                           
  1340                           ;main.c: 301: continue;
  1341                           
  1342                           
  1343                           ;main.c: 299: rx_serial();
  1344  039B  118A  23E2  118A   	fcall	_rx_serial
  1345                           
  1346                           ;main.c: 300: if (RCREG != 'O') {
  1347  039E  304F               	movlw	79
  1348  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1349  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1350  03A1  061A               	xorwf	26,w	;volatile
  1351  03A2  1D03               	btfss	3,2
  1352  03A3  2B9B               	goto	l213
  1353                           
  1354                           ;main.c: 302: }
  1355                           ;main.c: 303: rx_serial();
  1356  03A4  118A  23E2  118A   	fcall	_rx_serial
  1357                           
  1358                           ;main.c: 304: if (RCREG != 'K') {
  1359  03A7  304B               	movlw	75
  1360  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1361  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1362  03AA  061A               	xorwf	26,w	;volatile
  1363  03AB  1D03               	btfss	3,2
  1364  03AC  2B9B               	goto	l213
  1365                           
  1366                           ;main.c: 306: }
  1367                           ;main.c: 307: rx_serial();
  1368  03AD  118A  23E2  118A   	fcall	_rx_serial
  1369                           
  1370                           ;main.c: 308: if (RCREG == 0xD) {
  1371  03B0  300D               	movlw	13
  1372  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1373  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1374  03B3  061A               	xorwf	26,w	;volatile
  1375  03B4  1903               	btfsc	3,2
  1376  03B5  0008               	return
  1377  03B6  2B9B               	goto	l213
  1378  03B7                     __end_of_wait_ok:	
  1379                           ;main.c: 309: break;
  1380                           
  1381                           
  1382                           	psect	text5
  1383  03E2                     __ptext5:	
  1384 ;; *************** function _rx_serial *****************
  1385 ;; Defined at:
  1386 ;;		line 282 in file "main.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		status,2, status,0, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1400 ;;      Params:         0       0       0       0
  1401 ;;      Locals:         0       0       0       0
  1402 ;;      Temps:          0       0       0       0
  1403 ;;      Totals:         0       0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    5
  1407 ;; This function calls:
  1408 ;;		_overflow
  1409 ;; This function is called by:
  1410 ;;		_wait_ok
  1411 ;;		_wait_Connect
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _rx_serial
  1418  03E2                     _rx_serial:	
  1419  03E2                     l204:	
  1420                           ;incstack = 0
  1421                           ; Regs used in _rx_serial: [status,2+status,0+pclath+cstack]
  1422                           ;main.c: 284: do {
  1423                           
  1424                           
  1425                           ;main.c: 285: if(RCSTAbits.OERR){
  1426  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1427  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1428  03E4  1C98               	btfss	24,1	;volatile
  1429  03E5  2BE9               	goto	l1208
  1430                           
  1431                           ;main.c: 286: overflow();
  1432  03E6  118A  240A  118A   	fcall	_overflow
  1433  03E9                     l1208:	
  1434                           
  1435                           ;main.c: 287: }
  1436                           ;main.c: 288: } while (!PIR1bits.RCIF);
  1437  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1438  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1439  03EB  1A8C               	btfsc	12,5	;volatile
  1440  03EC  0008               	return
  1441  03ED  2BE2               	goto	l204
  1442  03EE                     __end_of_rx_serial:	
  1443                           
  1444                           	psect	text6
  1445  040A                     __ptext6:	
  1446 ;; *************** function _overflow *****************
  1447 ;; Defined at:
  1448 ;;		line 272 in file "main.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		None
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1462 ;;      Params:         0       0       0       0
  1463 ;;      Locals:         0       0       0       0
  1464 ;;      Temps:          0       0       0       0
  1465 ;;      Totals:         0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    4
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_rx_serial
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           
  1477                           ;psect for function _overflow
  1478  040A                     _overflow:	
  1479                           
  1480                           ;main.c: 273: RCSTAbits.CREN = 0x00;
  1481                           
  1482                           ;incstack = 0
  1483                           ; Regs used in _overflow: []
  1484  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1485  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1486  040C  1218               	bcf	24,4	;volatile
  1487                           
  1488                           ;main.c: 274: RCSTAbits.CREN = 0x01;
  1489  040D  1618               	bsf	24,4	;volatile
  1490  040E  0008               	return
  1491  040F                     __end_of_overflow:	
  1492                           
  1493                           	psect	text7
  1494  03EE                     __ptext7:	
  1495 ;; *************** function _new_at_com *****************
  1496 ;; Defined at:
  1497 ;;		line 291 in file "main.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0, pclath, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1511 ;;      Params:         0       0       0       0
  1512 ;;      Locals:         0       0       0       0
  1513 ;;      Temps:          0       0       0       0
  1514 ;;      Totals:         0       0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    5
  1518 ;; This function calls:
  1519 ;;		_tx_serial
  1520 ;; This function is called by:
  1521 ;;		_connect_wifi
  1522 ;;		_send_To_Attendant
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _new_at_com
  1528  03EE                     _new_at_com:	
  1529                           
  1530                           ;main.c: 292: tx_serial('A');
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in _new_at_com: [wreg+status,2+status,0+pclath+cstack]
  1534  03EE  3041               	movlw	65
  1535  03EF  118A  2402  118A   	fcall	_tx_serial
  1536                           
  1537                           ;main.c: 293: tx_serial('T');
  1538  03F2  3054               	movlw	84
  1539  03F3  118A  2402  118A   	fcall	_tx_serial
  1540                           
  1541                           ;main.c: 294: tx_serial('+');
  1542  03F6  302B               	movlw	43
  1543  03F7  118A  2402         	fcall	_tx_serial
  1544  03F9  0008               	return
  1545  03FA                     __end_of_new_at_com:	
  1546                           
  1547                           	psect	text8
  1548  0402                     __ptext8:	
  1549 ;; *************** function _tx_serial *****************
  1550 ;; Defined at:
  1551 ;;		line 277 in file "main.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  aChar           1    wreg     unsigned char 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  aChar           1    7[BANK0 ] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1565 ;;      Params:         0       0       0       0
  1566 ;;      Locals:         0       1       0       0
  1567 ;;      Temps:          0       0       0       0
  1568 ;;      Totals:         0       1       0       0
  1569 ;;Total ram usage:        1 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    4
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_new_at_com
  1576 ;;		_connect_wifi
  1577 ;;		_send_To_Attendant
  1578 ;;		_send_IPD
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _tx_serial
  1584  0402                     _tx_serial:	
  1585                           
  1586                           ;incstack = 0
  1587                           ; Regs used in _tx_serial: [wreg]
  1588                           ;tx_serial@aChar stored from wreg
  1589  0402  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0403  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0404  00DA               	movwf	tx_serial@aChar
  1592  0405                     l198:	
  1593                           ;main.c: 278: while(!PIR1bits.TXIF) { }
  1594                           
  1595  0405  1E0C               	btfss	12,4	;volatile
  1596  0406  2C05               	goto	l198
  1597                           
  1598                           ;main.c: 279: TXREG = aChar;
  1599  0407  085A               	movf	tx_serial@aChar,w
  1600  0408  0099               	movwf	25	;volatile
  1601  0409  0008               	return
  1602  040A                     __end_of_tx_serial:	
  1603                           
  1604                           	psect	text9
  1605  0203                     __ptext9:	
  1606 ;; *************** function _buttonINT *****************
  1607 ;; Defined at:
  1608 ;;		line 230 in file "main.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1622 ;;      Params:         0       0       0       0
  1623 ;;      Locals:         0       0       0       0
  1624 ;;      Temps:          0       7       0       0
  1625 ;;      Totals:         0       7       0       0
  1626 ;;Total ram usage:        7 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    3
  1629 ;; This function calls:
  1630 ;;		_CashierNormalButton
  1631 ;;		_CashierPriorityButton
  1632 ;;		_ManagerNormalButton
  1633 ;;		_ManagerPriorityButton
  1634 ;;		_getNextManager
  1635 ;; This function is called by:
  1636 ;;		Interrupt level 1
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _buttonINT
  1642  0203                     _buttonINT:	
  1643                           
  1644                           ;main.c: 232: if(INTCONbits.RBIF){
  1645  0203  1C0B               	btfss	11,0	;volatile
  1646  0204  2A70               	goto	L1
  1647                           
  1648                           ;main.c: 235: if(!PORTBbits.RB4){
  1649  0205  1A06               	btfsc	6,4	;volatile
  1650  0206  2A48               	goto	i1l183
  1651                           
  1652                           ;main.c: 236: ManagerNormalButton();
  1653  0207  118A  22CD  118A   	fcall	_ManagerNormalButton
  1654                           
  1655                           ;main.c: 237: PORTAbits.RA0 = 0x01;
  1656  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1657  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1658  020C  1405               	bsf	5,0	;volatile
  1659                           
  1660                           ;main.c: 238: _delay((unsigned long)((500)*(8000000/4000.0)));
  1661  020D  3006               	movlw	6
  1662  020E  00D5               	movwf	??_buttonINT+2
  1663  020F  3013               	movlw	19
  1664  0210  00D4               	movwf	??_buttonINT+1
  1665  0211  30B1               	movlw	177
  1666  0212  00D3               	movwf	??_buttonINT
  1667  0213                     u106_27:	
  1668  0213  0BD3               	decfsz	??_buttonINT,f
  1669  0214  2A13               	goto	u106_27
  1670  0215  0BD4               	decfsz	??_buttonINT+1,f
  1671  0216  2A13               	goto	u106_27
  1672  0217  0BD5               	decfsz	??_buttonINT+2,f
  1673  0218  2A13               	goto	u106_27
  1674  0219  2A1A               	nop2
  1675                           
  1676                           ;main.c: 239: PORTAbits.RA0 = 0x00;
  1677  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1678  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1679  021C  1005               	bcf	5,0	;volatile
  1680                           
  1681                           ;main.c: 241: if(msize == 0x0A){
  1682  021D  300A               	movlw	10
  1683  021E  067B               	xorwf	_msize,w
  1684  021F  1D03               	btfss	3,2
  1685  0220  2A32               	goto	i1l1504
  1686                           
  1687                           ;main.c: 242: PORTAbits.RA1 = 0x01;
  1688  0221  1485               	bsf	5,1	;volatile
  1689                           
  1690                           ;main.c: 243: _delay((unsigned long)((500)*(8000000/4000.0)));
  1691  0222  3006               	movlw	6
  1692  0223  00D5               	movwf	??_buttonINT+2
  1693  0224  3013               	movlw	19
  1694  0225  00D4               	movwf	??_buttonINT+1
  1695  0226  30B1               	movlw	177
  1696  0227  00D3               	movwf	??_buttonINT
  1697  0228                     u107_27:	
  1698  0228  0BD3               	decfsz	??_buttonINT,f
  1699  0229  2A28               	goto	u107_27
  1700  022A  0BD4               	decfsz	??_buttonINT+1,f
  1701  022B  2A28               	goto	u107_27
  1702  022C  0BD5               	decfsz	??_buttonINT+2,f
  1703  022D  2A28               	goto	u107_27
  1704  022E  2A2F               	nop2
  1705                           
  1706                           ;main.c: 244: PORTAbits.RA1 = 0x00;
  1707  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0231  1085               	bcf	5,1	;volatile
  1710  0232                     i1l1504:	
  1711                           
  1712                           ;main.c: 245: }
  1713                           ;main.c: 246: if(msize == 0x13){
  1714  0232  3013               	movlw	19
  1715  0233  067B               	xorwf	_msize,w
  1716  0234  1D03               	btfss	3,2
  1717  0235  2A6F               	goto	i1l1526
  1718                           
  1719                           ;main.c: 247: PORTAbits.RA2 = 0x01;
  1720  0236  1505               	bsf	5,2	;volatile
  1721                           
  1722                           ;main.c: 248: _delay((unsigned long)((500)*(8000000/4000.0)));
  1723  0237  3006               	movlw	6
  1724  0238  00D5               	movwf	??_buttonINT+2
  1725  0239  3013               	movlw	19
  1726  023A  00D4               	movwf	??_buttonINT+1
  1727  023B  30B1               	movlw	177
  1728  023C  00D3               	movwf	??_buttonINT
  1729  023D                     u108_27:	
  1730  023D  0BD3               	decfsz	??_buttonINT,f
  1731  023E  2A3D               	goto	u108_27
  1732  023F  0BD4               	decfsz	??_buttonINT+1,f
  1733  0240  2A3D               	goto	u108_27
  1734  0241  0BD5               	decfsz	??_buttonINT+2,f
  1735  0242  2A3D               	goto	u108_27
  1736  0243  2A44               	nop2
  1737                           
  1738                           ;main.c: 249: PORTAbits.RA2 = 0x00;
  1739  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1741  0246  1105               	bcf	5,2	;volatile
  1742                           
  1743                           ;main.c: 250: }
  1744                           ;main.c: 252: }
  1745  0247  2A6F               	goto	i1l1526
  1746  0248                     i1l183:	
  1747                           
  1748                           ;main.c: 253: else if(!PORTBbits.RB3){
  1749  0248  1986               	btfsc	6,3	;volatile
  1750  0249  2A64               	goto	i1l187
  1751                           
  1752                           ;main.c: 254: getNextManager();
  1753  024A  118A  23D5  118A   	fcall	_getNextManager
  1754                           
  1755                           ;main.c: 255: ManagerPriorityButton();
  1756  024D  118A  232A  118A   	fcall	_ManagerPriorityButton
  1757                           
  1758                           ;main.c: 257: PORTAbits.RA4 = 0x01;
  1759  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1760  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1761  0252  1605               	bsf	5,4	;volatile
  1762                           
  1763                           ;main.c: 258: _delay((unsigned long)((500)*(8000000/4000.0)));
  1764  0253  3006               	movlw	6
  1765  0254  00D5               	movwf	??_buttonINT+2
  1766  0255  3013               	movlw	19
  1767  0256  00D4               	movwf	??_buttonINT+1
  1768  0257  30B1               	movlw	177
  1769  0258  00D3               	movwf	??_buttonINT
  1770  0259                     u109_27:	
  1771  0259  0BD3               	decfsz	??_buttonINT,f
  1772  025A  2A59               	goto	u109_27
  1773  025B  0BD4               	decfsz	??_buttonINT+1,f
  1774  025C  2A59               	goto	u109_27
  1775  025D  0BD5               	decfsz	??_buttonINT+2,f
  1776  025E  2A59               	goto	u109_27
  1777  025F  2A60               	nop2
  1778                           
  1779                           ;main.c: 259: PORTAbits.RA4 = 0x00;
  1780  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0262  1205               	bcf	5,4	;volatile
  1783                           
  1784                           ;main.c: 260: }
  1785  0263  2A6F               	goto	i1l1526
  1786  0264                     i1l187:	
  1787                           
  1788                           ;main.c: 261: else if(!PORTBbits.RB2){
  1789  0264  1906               	btfsc	6,2	;volatile
  1790  0265  2A6A               	goto	i1l189
  1791                           
  1792                           ;main.c: 262: CashierNormalButton();
  1793  0266  118A  2302  118A   	fcall	_CashierNormalButton
  1794                           
  1795                           ;main.c: 263: }
  1796  0269  2A6F               	goto	i1l1526
  1797  026A                     i1l189:	
  1798                           
  1799                           ;main.c: 264: else if(!PORTBbits.RB1){
  1800  026A  1886               	btfsc	6,1	;volatile
  1801  026B  2A6F               	goto	i1l1526
  1802                           
  1803                           ;main.c: 265: CashierPriorityButton();
  1804  026C  118A  2350  118A   	fcall	_CashierPriorityButton
  1805  026F                     i1l1526:	
  1806                           
  1807                           ;main.c: 266: }
  1808                           ;main.c: 267: }
  1809                           ;main.c: 269: INTCONbits.RBIF = 0x00;
  1810  026F  100B               	bcf	11,0	;volatile
  1811  0270                     L1:	
  1812  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0272  0859               	movf	??_buttonINT+6,w
  1815  0273  00FF               	movwf	127
  1816  0274  0858               	movf	??_buttonINT+5,w
  1817  0275  008A               	movwf	10
  1818  0276  0857               	movf	??_buttonINT+4,w
  1819  0277  0084               	movwf	4
  1820  0278  0E56               	swapf	(??_buttonINT+3)^0,w
  1821  0279  0083               	movwf	3
  1822  027A  0EFE               	swapf	126,f
  1823  027B  0E7E               	swapf	126,w
  1824  027C  0009               	retfie
  1825  027D                     __end_of_buttonINT:	
  1826                           
  1827                           	psect	intentry
  1828  0004                     __pintentry:	
  1829                           ;incstack = 0
  1830                           ; Regs used in _buttonINT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1831                           
  1832  0004                     interrupt_function:	
  1833  007E                     saved_w	set	btemp
  1834  0004  00FE               	movwf	btemp
  1835  0005  0E03               	swapf	3,w
  1836  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0008  00D6               	movwf	??_buttonINT+3
  1839  0009  0804               	movf	4,w
  1840  000A  00D7               	movwf	??_buttonINT+4
  1841  000B  080A               	movf	10,w
  1842  000C  00D8               	movwf	??_buttonINT+5
  1843  000D  087F               	movf	btemp+1,w
  1844  000E  00D9               	movwf	??_buttonINT+6
  1845  000F  118A  2A03         	ljmp	_buttonINT
  1846                           
  1847                           	psect	text10
  1848  03D5                     __ptext10:	
  1849 ;; *************** function _getNextManager *****************
  1850 ;; Defined at:
  1851 ;;		line 121 in file "main.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, status,2, status,0
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1865 ;;      Params:         0       0       0       0
  1866 ;;      Locals:         0       0       0       0
  1867 ;;      Temps:          1       0       0       0
  1868 ;;      Totals:         1       0       0       0
  1869 ;;Total ram usage:        1 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_buttonINT
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _getNextManager
  1880  03D5                     _getNextManager:	
  1881                           
  1882                           ;main.c: 123: msize = msize - 1;
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in _getNextManager: [wreg+status,2+status,0]
  1886  03D5  087B               	movf	_msize,w
  1887  03D6  3EFF               	addlw	255
  1888  03D7  00F0               	movwf	??_getNextManager
  1889  03D8  0870               	movf	??_getNextManager,w
  1890  03D9  00FB               	movwf	_msize
  1891                           
  1892                           ;main.c: 124: mnext = mnext -1;
  1893  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1894  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1895  03DC  084C               	movf	_mnext,w
  1896  03DD  3EFF               	addlw	255
  1897  03DE  00F0               	movwf	??_getNextManager
  1898  03DF  0870               	movf	??_getNextManager,w
  1899  03E0  00CC               	movwf	_mnext
  1900  03E1  0008               	return
  1901  03E2                     __end_of_getNextManager:	
  1902                           
  1903                           	psect	text11
  1904  032A                     __ptext11:	
  1905 ;; *************** function _ManagerPriorityButton *****************
  1906 ;; Defined at:
  1907 ;;		line 208 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1921 ;;      Params:         0       0       0       0
  1922 ;;      Locals:         0       0       0       0
  1923 ;;      Temps:          1       0       0       0
  1924 ;;      Totals:         1       0       0       0
  1925 ;;Total ram usage:        1 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_buttonINT
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _ManagerPriorityButton
  1936  032A                     _ManagerPriorityButton:	
  1937                           
  1938                           ;main.c: 210: if(pmsize == 0x14){
  1939                           
  1940                           ;incstack = 0
  1941                           ; Regs used in _ManagerPriorityButton: [wreg-fsr0h+status,2+status,0]
  1942  032A  3014               	movlw	20
  1943  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1944  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1945  032D  0652               	xorwf	_pmsize,w
  1946  032E  1903               	btfsc	3,2
  1947  032F  0008               	return
  1948                           
  1949                           ;main.c: 212: }
  1950                           ;main.c: 214: if(pmlast == 0x13){
  1951                           
  1952                           ;main.c: 211: return;
  1953  0330  3013               	movlw	19
  1954  0331  0650               	xorwf	_pmlast,w
  1955  0332  1903               	btfsc	3,2
  1956                           
  1957                           ;main.c: 215: pmlast = 0x00;
  1958  0333  01D0               	clrf	_pmlast
  1959                           
  1960                           ;main.c: 216: }
  1961                           ;main.c: 218: if(pmCount == 0xFE){
  1962  0334  30FE               	movlw	254
  1963  0335  067D               	xorwf	_pmCount,w
  1964  0336  1903               	btfsc	3,2
  1965                           
  1966                           ;main.c: 219: pmCount = 0x00;
  1967  0337  01FD               	clrf	_pmCount
  1968                           
  1969                           ;main.c: 220: }
  1970                           ;main.c: 223: pmsize = pmsize + 1;
  1971  0338  0852               	movf	_pmsize,w
  1972  0339  3E01               	addlw	1
  1973  033A  00F0               	movwf	??_ManagerPriorityButton
  1974  033B  0870               	movf	??_ManagerPriorityButton,w
  1975  033C  00D2               	movwf	_pmsize
  1976                           
  1977                           ;main.c: 224: pmCount = pmCount + 1;
  1978  033D  087D               	movf	_pmCount,w
  1979  033E  3E01               	addlw	1
  1980  033F  00F0               	movwf	??_ManagerPriorityButton
  1981  0340  0870               	movf	??_ManagerPriorityButton,w
  1982  0341  00FD               	movwf	_pmCount
  1983                           
  1984                           ;main.c: 226: pmqueue[pmlast] = pmCount;
  1985  0342  087D               	movf	_pmCount,w
  1986  0343  00F0               	movwf	??_ManagerPriorityButton
  1987  0344  0850               	movf	_pmlast,w
  1988  0345  3E34               	addlw	(low (_pmqueue| 0))& (0+255)
  1989  0346  0084               	movwf	4
  1990  0347  0870               	movf	??_ManagerPriorityButton,w
  1991  0348  1383               	bcf	3,7	;select IRP bank0
  1992  0349  0080               	movwf	0
  1993                           
  1994                           ;main.c: 227: pmlast = pmlast + 1;
  1995  034A  0850               	movf	_pmlast,w
  1996  034B  3E01               	addlw	1
  1997  034C  00F0               	movwf	??_ManagerPriorityButton
  1998  034D  0870               	movf	??_ManagerPriorityButton,w
  1999  034E  00D0               	movwf	_pmlast
  2000  034F  0008               	return
  2001  0350                     __end_of_ManagerPriorityButton:	
  2002                           
  2003                           	psect	text12
  2004  02CD                     __ptext12:	
  2005 ;; *************** function _ManagerNormalButton *****************
  2006 ;; Defined at:
  2007 ;;		line 185 in file "main.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2021 ;;      Params:         0       0       0       0
  2022 ;;      Locals:         0       0       0       0
  2023 ;;      Temps:          3       0       0       0
  2024 ;;      Totals:         3       0       0       0
  2025 ;;Total ram usage:        3 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    1
  2028 ;; This function calls:
  2029 ;;		_SPI_send
  2030 ;; This function is called by:
  2031 ;;		_buttonINT
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _ManagerNormalButton
  2037  02CD                     _ManagerNormalButton:	
  2038                           
  2039                           ;main.c: 187: if(msize == 0x14){
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in _ManagerNormalButton: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2043  02CD  3014               	movlw	20
  2044  02CE  067B               	xorwf	_msize,w
  2045  02CF  1903               	btfsc	3,2
  2046  02D0  0008               	return
  2047                           
  2048                           ;main.c: 189: }
  2049                           ;main.c: 191: if(mlast == 0x13){
  2050                           
  2051                           ;main.c: 188: return;
  2052  02D1  3013               	movlw	19
  2053  02D2  067A               	xorwf	_mlast,w
  2054  02D3  1903               	btfsc	3,2
  2055                           
  2056                           ;main.c: 192: mlast = 0x00;
  2057  02D4  01FA               	clrf	_mlast
  2058                           
  2059                           ;main.c: 193: }
  2060                           ;main.c: 195: if(mCount == 0xFE){
  2061  02D5  30FE               	movlw	254
  2062  02D6  0679               	xorwf	_mCount,w
  2063  02D7  1903               	btfsc	3,2
  2064                           
  2065                           ;main.c: 196: mCount = 0x00;
  2066  02D8  01F9               	clrf	_mCount
  2067                           
  2068                           ;main.c: 197: }
  2069                           ;main.c: 200: msize = msize + 1;
  2070  02D9  087B               	movf	_msize,w
  2071  02DA  3E01               	addlw	1
  2072  02DB  00F1               	movwf	??_ManagerNormalButton
  2073  02DC  0871               	movf	??_ManagerNormalButton,w
  2074  02DD  00FB               	movwf	_msize
  2075                           
  2076                           ;main.c: 201: mCount = mCount + 1;
  2077  02DE  0879               	movf	_mCount,w
  2078  02DF  3E01               	addlw	1
  2079  02E0  00F1               	movwf	??_ManagerNormalButton
  2080  02E1  0871               	movf	??_ManagerNormalButton,w
  2081  02E2  00F9               	movwf	_mCount
  2082                           
  2083                           ;main.c: 203: mqueue[mlast] = mCount;
  2084  02E3  0879               	movf	_mCount,w
  2085  02E4  00F1               	movwf	??_ManagerNormalButton
  2086  02E5  087A               	movf	_mlast,w
  2087  02E6  3E20               	addlw	(low (_mqueue| 0))& (0+255)
  2088  02E7  0084               	movwf	4
  2089  02E8  0871               	movf	??_ManagerNormalButton,w
  2090  02E9  1383               	bcf	3,7	;select IRP bank0
  2091  02EA  0080               	movwf	0
  2092                           
  2093                           ;main.c: 204: mlast = mlast + 1;
  2094  02EB  087A               	movf	_mlast,w
  2095  02EC  3E01               	addlw	1
  2096  02ED  00F1               	movwf	??_ManagerNormalButton
  2097  02EE  0871               	movf	??_ManagerNormalButton,w
  2098  02EF  00FA               	movwf	_mlast
  2099                           
  2100                           ;main.c: 205: SPI_send('A');
  2101  02F0  3041               	movlw	65
  2102  02F1  118A  23B7  118A   	fcall	_SPI_send
  2103                           
  2104                           ;main.c: 206: _delay((unsigned long)((500)*(8000000/4000.0)));
  2105  02F4  3006               	movlw	6
  2106  02F5  00F3               	movwf	??_ManagerNormalButton+2
  2107  02F6  3013               	movlw	19
  2108  02F7  00F2               	movwf	??_ManagerNormalButton+1
  2109  02F8  30B1               	movlw	177
  2110  02F9  00F1               	movwf	??_ManagerNormalButton
  2111  02FA                     u110_27:	
  2112  02FA  0BF1               	decfsz	??_ManagerNormalButton,f
  2113  02FB  2AFA               	goto	u110_27
  2114  02FC  0BF2               	decfsz	??_ManagerNormalButton+1,f
  2115  02FD  2AFA               	goto	u110_27
  2116  02FE  0BF3               	decfsz	??_ManagerNormalButton+2,f
  2117  02FF  2AFA               	goto	u110_27
  2118  0300  2B01               	nop2
  2119  0301  0008               	return
  2120  0302                     __end_of_ManagerNormalButton:	
  2121                           
  2122                           	psect	text13
  2123  0350                     __ptext13:	
  2124 ;; *************** function _CashierPriorityButton *****************
  2125 ;; Defined at:
  2126 ;;		line 141 in file "main.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2140 ;;      Params:         0       0       0       0
  2141 ;;      Locals:         0       0       0       0
  2142 ;;      Temps:          1       0       0       0
  2143 ;;      Totals:         1       0       0       0
  2144 ;;Total ram usage:        1 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_buttonINT
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _CashierPriorityButton
  2155  0350                     _CashierPriorityButton:	
  2156                           
  2157                           ;main.c: 143: if(pcsize == 0x14){
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _CashierPriorityButton: [wreg-fsr0h+status,2+status,0]
  2161  0350  3014               	movlw	20
  2162  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0353  064F               	xorwf	_pcsize,w
  2165  0354  1903               	btfsc	3,2
  2166  0355  0008               	return
  2167                           
  2168                           ;main.c: 145: }
  2169                           ;main.c: 147: if(pclast == 0x13){
  2170                           
  2171                           ;main.c: 144: return;
  2172  0356  3013               	movlw	19
  2173  0357  064D               	xorwf	_pclast,w
  2174  0358  1903               	btfsc	3,2
  2175                           
  2176                           ;main.c: 148: pclast = 0x00;
  2177  0359  01CD               	clrf	_pclast
  2178                           
  2179                           ;main.c: 149: }
  2180                           ;main.c: 151: if(pcCount == 0xFE){
  2181  035A  30FE               	movlw	254
  2182  035B  067C               	xorwf	_pcCount,w
  2183  035C  1903               	btfsc	3,2
  2184                           
  2185                           ;main.c: 152: pcCount = 0x00;
  2186  035D  01FC               	clrf	_pcCount
  2187                           
  2188                           ;main.c: 153: }
  2189                           ;main.c: 156: pcsize = pcsize + 1;
  2190  035E  084F               	movf	_pcsize,w
  2191  035F  3E01               	addlw	1
  2192  0360  00F0               	movwf	??_CashierPriorityButton
  2193  0361  0870               	movf	??_CashierPriorityButton,w
  2194  0362  00CF               	movwf	_pcsize
  2195                           
  2196                           ;main.c: 157: pcCount = pcCount + 1;
  2197  0363  087C               	movf	_pcCount,w
  2198  0364  3E01               	addlw	1
  2199  0365  00F0               	movwf	??_CashierPriorityButton
  2200  0366  0870               	movf	??_CashierPriorityButton,w
  2201  0367  00FC               	movwf	_pcCount
  2202                           
  2203                           ;main.c: 159: pcqueue[pclast] = pcCount;
  2204  0368  087C               	movf	_pcCount,w
  2205  0369  00F0               	movwf	??_CashierPriorityButton
  2206  036A  084D               	movf	_pclast,w
  2207  036B  3EB4               	addlw	(low (_pcqueue| 0))& (0+255)
  2208  036C  0084               	movwf	4
  2209  036D  0870               	movf	??_CashierPriorityButton,w
  2210  036E  1383               	bcf	3,7	;select IRP bank1
  2211  036F  0080               	movwf	0
  2212                           
  2213                           ;main.c: 160: pclast = pclast + 1;
  2214  0370  084D               	movf	_pclast,w
  2215  0371  3E01               	addlw	1
  2216  0372  00F0               	movwf	??_CashierPriorityButton
  2217  0373  0870               	movf	??_CashierPriorityButton,w
  2218  0374  00CD               	movwf	_pclast
  2219  0375  0008               	return
  2220  0376                     __end_of_CashierPriorityButton:	
  2221                           
  2222                           	psect	text14
  2223  0302                     __ptext14:	
  2224 ;; *************** function _CashierNormalButton *****************
  2225 ;; Defined at:
  2226 ;;		line 162 in file "main.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2240 ;;      Params:         0       0       0       0
  2241 ;;      Locals:         0       0       0       0
  2242 ;;      Temps:          1       0       0       0
  2243 ;;      Totals:         1       0       0       0
  2244 ;;Total ram usage:        1 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    2
  2247 ;; This function calls:
  2248 ;;		_SPI_sendString
  2249 ;; This function is called by:
  2250 ;;		_buttonINT
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _CashierNormalButton
  2256  0302                     _CashierNormalButton:	
  2257                           
  2258                           ;main.c: 164: if(csize == 0x14){
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in _CashierNormalButton: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2262  0302  3014               	movlw	20
  2263  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0305  064B               	xorwf	_csize,w
  2266  0306  1903               	btfsc	3,2
  2267  0307  0008               	return
  2268                           
  2269                           ;main.c: 166: }
  2270                           ;main.c: 168: if(clast == 0x13){
  2271                           
  2272                           ;main.c: 165: return;
  2273  0308  3013               	movlw	19
  2274  0309  0649               	xorwf	_clast,w
  2275  030A  1903               	btfsc	3,2
  2276                           
  2277                           ;main.c: 169: clast = 0x00;
  2278  030B  01C9               	clrf	_clast
  2279                           
  2280                           ;main.c: 170: }
  2281                           ;main.c: 172: if(cCount == 0xFE){
  2282  030C  30FE               	movlw	254
  2283  030D  0648               	xorwf	_cCount,w
  2284  030E  1903               	btfsc	3,2
  2285                           
  2286                           ;main.c: 173: cCount = 0x00;
  2287  030F  01C8               	clrf	_cCount
  2288                           
  2289                           ;main.c: 174: }
  2290                           ;main.c: 177: csize = csize + 1;
  2291  0310  084B               	movf	_csize,w
  2292  0311  3E01               	addlw	1
  2293  0312  00F7               	movwf	??_CashierNormalButton
  2294  0313  0877               	movf	??_CashierNormalButton,w
  2295  0314  00CB               	movwf	_csize
  2296                           
  2297                           ;main.c: 178: cCount = cCount + 1;
  2298  0315  0848               	movf	_cCount,w
  2299  0316  3E01               	addlw	1
  2300  0317  00F7               	movwf	??_CashierNormalButton
  2301  0318  0877               	movf	??_CashierNormalButton,w
  2302  0319  00C8               	movwf	_cCount
  2303                           
  2304                           ;main.c: 180: cqueue[clast] = mCount;
  2305  031A  0879               	movf	_mCount,w
  2306  031B  00F7               	movwf	??_CashierNormalButton
  2307  031C  0849               	movf	_clast,w
  2308  031D  3EA0               	addlw	(low (_cqueue| 0))& (0+255)
  2309  031E  0084               	movwf	4
  2310  031F  0877               	movf	??_CashierNormalButton,w
  2311  0320  1383               	bcf	3,7	;select IRP bank1
  2312  0321  0080               	movwf	0
  2313                           
  2314                           ;main.c: 181: clast = clast + 1;
  2315  0322  0849               	movf	_clast,w
  2316  0323  3E01               	addlw	1
  2317  0324  00F7               	movwf	??_CashierNormalButton
  2318  0325  0877               	movf	??_CashierNormalButton,w
  2319  0326  00C9               	movwf	_clast
  2320                           
  2321                           ;main.c: 182: SPI_sendString();
  2322  0327  118A  2376         	fcall	_SPI_sendString
  2323  0329  0008               	return
  2324  032A                     __end_of_CashierNormalButton:	
  2325                           
  2326                           	psect	text15
  2327  0376                     __ptext15:	
  2328 ;; *************** function _SPI_sendString *****************
  2329 ;; Defined at:
  2330 ;;		line 113 in file "main.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  i               2    5[COMMON] int 
  2335 ;;  data            4    1[COMMON] unsigned char [4]
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2345 ;;      Params:         0       0       0       0
  2346 ;;      Locals:         6       0       0       0
  2347 ;;      Temps:          0       0       0       0
  2348 ;;      Totals:         6       0       0       0
  2349 ;;Total ram usage:        6 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    1
  2352 ;; This function calls:
  2353 ;;		_SPI_send
  2354 ;; This function is called by:
  2355 ;;		_CashierNormalButton
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _SPI_sendString
  2361  0376                     _SPI_sendString:	
  2362                           
  2363                           ;main.c: 114: char data[4] = {1, 0, 0 ,1};
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in _SPI_sendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2367  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0378  085F               	movf	SPI_sendString@F1589+3,w
  2370  0379  00F4               	movwf	SPI_sendString@data+3
  2371  037A  085E               	movf	SPI_sendString@F1589+2,w
  2372  037B  00F3               	movwf	SPI_sendString@data+2
  2373  037C  085D               	movf	SPI_sendString@F1589+1,w
  2374  037D  00F2               	movwf	SPI_sendString@data+1
  2375  037E  085C               	movf	SPI_sendString@F1589,w
  2376  037F  00F1               	movwf	SPI_sendString@data
  2377                           
  2378                           ;main.c: 115: for(int i = 0; i < 4; i++){
  2379  0380  01F5               	clrf	SPI_sendString@i
  2380  0381  01F6               	clrf	SPI_sendString@i+1
  2381  0382                     L2:	
  2382  0382  0876               	movf	SPI_sendString@i+1,w
  2383  0383  3A80               	xorlw	128
  2384  0384  00FF               	movwf	127
  2385  0385  3080               	movlw	128
  2386  0386  027F               	subwf	127,w
  2387  0387  1D03               	skipz
  2388  0388  2B8B               	goto	u58_25
  2389  0389  3004               	movlw	4
  2390  038A  0275               	subwf	SPI_sendString@i,w
  2391  038B                     u58_25:	
  2392  038B  1803               	btfsc	3,0
  2393  038C  0008               	return
  2394                           
  2395                           ;main.c: 116: SPI_send(data[i]);
  2396  038D  0875               	movf	SPI_sendString@i,w
  2397  038E  3E71               	addlw	(low (SPI_sendString@data| 0))& (0+255)
  2398  038F  0084               	movwf	4
  2399  0390  0800               	movf	0,w
  2400  0391  118A  23B7  118A   	fcall	_SPI_send
  2401  0394  3001               	movlw	1
  2402  0395  07F5               	addwf	SPI_sendString@i,f
  2403  0396  1803               	skipnc
  2404  0397  0AF6               	incf	SPI_sendString@i+1,f
  2405  0398  3000               	movlw	0
  2406  0399  07F6               	addwf	SPI_sendString@i+1,f
  2407  039A  2B82               	goto	L2
  2408  039B                     __end_of_SPI_sendString:	
  2409                           
  2410                           	psect	text16
  2411  03B7                     __ptext16:	
  2412 ;; *************** function _SPI_send *****************
  2413 ;; Defined at:
  2414 ;;		line 95 in file "main.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  data            1    wreg     unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  data            1    0[COMMON] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2428 ;;      Params:         0       0       0       0
  2429 ;;      Locals:         1       0       0       0
  2430 ;;      Temps:          0       0       0       0
  2431 ;;      Totals:         1       0       0       0
  2432 ;;Total ram usage:        1 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_SPI_sendString
  2438 ;;		_ManagerNormalButton
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           
  2443                           ;psect for function _SPI_send
  2444  03B7                     _SPI_send:	
  2445                           
  2446                           ;incstack = 0
  2447                           ; Regs used in _SPI_send: [wreg]
  2448                           ;SPI_send@data stored from wreg
  2449  03B7  00F0               	movwf	SPI_send@data
  2450                           
  2451                           ;main.c: 96: SSPCONbits.CKP = 0;
  2452  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2453  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2454  03BA  1214               	bcf	20,4	;volatile
  2455                           
  2456                           ;main.c: 97: SSPSTATbits.BF = 0;
  2457  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2458  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2459  03BD  1014               	bcf	20,0	;volatile
  2460                           
  2461                           ;main.c: 98: SSPBUF = data;
  2462  03BE  0870               	movf	SPI_send@data,w
  2463  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2464  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2465  03C1  0093               	movwf	19	;volatile
  2466  03C2                     i1l124:	
  2467                           ;main.c: 99: while(SSPSTATbits.BF);
  2468                           
  2469  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2470  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2471  03C4  1C14               	btfss	20,0	;volatile
  2472  03C5  0008               	return
  2473  03C6  2BC2               	goto	i1l124
  2474  03C7                     __end_of_SPI_send:	
  2475  007E                     btemp	set	126	;btemp
  2476  007E                     wtemp	set	126
  2477  007E                     wtemp0	set	126
  2478  0080                     wtemp1	set	128
  2479  0082                     wtemp2	set	130
  2480  0084                     wtemp3	set	132
  2481  0086                     wtemp4	set	134
  2482  0088                     wtemp5	set	136
  2483  007F                     wtemp6	set	127
  2484  007E                     ttemp	set	126
  2485  007E                     ttemp0	set	126
  2486  0081                     ttemp1	set	129
  2487  0084                     ttemp2	set	132
  2488  0087                     ttemp3	set	135
  2489  007F                     ttemp4	set	127
  2490  007E                     ltemp	set	126
  2491  007E                     ltemp0	set	126
  2492  0082                     ltemp1	set	130
  2493  0086                     ltemp2	set	134
  2494  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      9      64
    BANK1            80      0      40
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _buttonINT in COMMON

    _buttonINT->_CashierNormalButton
    _ManagerNormalButton->_SPI_send
    _CashierNormalButton->_SPI_sendString
    _SPI_sendString->_SPI_send

Critical Paths under _main in BANK0

    _connect_wifi->_tx_serial
    _new_at_com->_tx_serial

Critical Paths under _buttonINT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _buttonINT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _buttonINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      44
                                              8 BANK0      1     1      0
                       _connect_wifi
                          _rx_serial
                          _usartInit
                       _wait_Connect
 ---------------------------------------------------------------------------------
 (1) _wait_Connect                                         0     0      0       0
                          _rx_serial
 ---------------------------------------------------------------------------------
 (1) _usartInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _connect_wifi                                         0     0      0      44
                         _new_at_com
                          _tx_serial
                            _wait_ok
 ---------------------------------------------------------------------------------
 (2) _wait_ok                                              0     0      0       0
                          _rx_serial
 ---------------------------------------------------------------------------------
 (2) _rx_serial                                            0     0      0       0
                           _overflow
 ---------------------------------------------------------------------------------
 (3) _overflow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _new_at_com                                           0     0      0      22
                          _tx_serial
 ---------------------------------------------------------------------------------
 (2) _tx_serial                                            1     1      0      22
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _buttonINT                                            7     7      0     136
                                              0 BANK0      7     7      0
                _CashierNormalButton
              _CashierPriorityButton
                _ManagerNormalButton
              _ManagerPriorityButton
                     _getNextManager
 ---------------------------------------------------------------------------------
 (6) _getNextManager                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ManagerPriorityButton                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ManagerNormalButton                                  3     3      0      22
                                              1 COMMON     3     3      0
                           _SPI_send
 ---------------------------------------------------------------------------------
 (6) _CashierPriorityButton                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CashierNormalButton                                  1     1      0     114
                                              7 COMMON     1     1      0
                     _SPI_sendString
 ---------------------------------------------------------------------------------
 (7) _SPI_sendString                                       6     6      0     114
                                              1 COMMON     6     6      0
                           _SPI_send
 ---------------------------------------------------------------------------------
 (7) _SPI_send                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _connect_wifi
     _new_at_com
       _tx_serial
     _tx_serial
     _wait_ok
       _rx_serial
         _overflow
   _rx_serial
     _overflow
   _usartInit
   _wait_Connect
     _rx_serial
       _overflow

 _buttonINT (ROOT)
   _CashierNormalButton
     _SPI_sendString
       _SPI_send
   _CashierPriorityButton
   _ManagerNormalButton
     _SPI_send
   _ManagerPriorityButton
   _getNextManager

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      28       5       50.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      40       3       80.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      76      10        0.0%
ABS                  0      0      76       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Nov 18 18:05:32 2016

                   __CFG_CP$OFF 0000                     _SSPSTATbits 0094                              fsr 0004  
                           l204 03E2                             l213 039B                             l222 013C  
                           l198 0405            ?_CashierNormalButton 0070                    __CFG_CPD$OFF 0000  
                 ?_connect_wifi 0070                             fsr0 0004                             indf 0000  
           SPI_sendString@F1589 005C  __size_of_CashierPriorityButton 0026   __end_of_CashierPriorityButton 0376  
                  __CFG_LVP$OFF 0000                            l1208 03E9                            l1638 02C0  
                          _IOCB 0096                            _PIE1 008C                    __CFG_WRT$OFF 0000  
                          _main 027D                            btemp 007E                            ltemp 007E  
                          start 0011                            ttemp 007E                            wtemp 007E  
                 __CFG_IESO$OFF 0000           ??_CashierNormalButton 0077                           ?_main 0070  
                 __CFG_WDTE$OFF 0000                           _ANSEL 0188                  ??_connect_wifi 005B  
                         i1l124 03C2                           i1l183 0248                           i1l187 0264  
                         i1l189 026A                           _RCREG 001A                           _RCSTA 0018  
                         _SPBRG 0099                           _PORTA 0005                           _PORTB 0006  
                         _PORTC 0007                           _TRISA 0085                           _TRISB 0086  
                         u58_25 038B                           _TXREG 0019                  __CFG_FCMEN$OFF 0000  
                         _nRBPU 040F         ??_ManagerPriorityButton 0070                           _clast 0049  
                         _cnext 004A                           _csize 004B                           _mlast 007A  
                         _mnext 004C                           _msize 007B         __size_of_SPI_sendString 0025  
                __CFG_BOREN$OFF 0000                           pclath 000A                           ltemp0 007E  
                         ltemp1 0082                           ltemp2 0086                           ltemp3 0080  
               __end_of_wait_ok 03B7                __end_of_SPI_send 03C7                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
                __CFG_MCLRE$OFF 0000                 __initialization 0013                    __end_of_main 02CD  
                        ??_main 005B                          _ANSELH 0189                          u110_27 02FA  
                        i1l1504 0232                          i1l1526 026F                          u106_27 0213  
                        u107_27 0228                          u108_27 023D                          u109_27 0259  
                        _INTCON 000B                          _OSCCON 008F                          _TRISA5 042D  
                        _TRISC3 043B                          _TRISC4 043C                          _TRISC5 043D  
                        _TRISC6 043E                          _TRISC7 043F                          _SSPCON 0014  
                        _SSPBUF 0013                  __CFG_PWRTE$OFF 0000                          _cCount 0048  
                        _mCount 0079                          _cqueue 00A0                          _guiche 0078  
                        _pclast 004D                          _pcnext 004E                          _pcsize 004F  
                        _pmlast 0050                          _pmnext 0051                          _mqueue 0020  
                        _pmsize 0052                          saved_w 007E                __end_of_overflow 040F  
                     ??_wait_ok 005A         __end_of__initialization 0035            __end_of_connect_wifi 013C  
                __pcstackCOMMON 0070                    __pidataBANK0 040F                    SPI_send@data 0070  
                     ?_SPI_send 0070                  _SPI_sendString 0376                      __pbssBANK0 0020  
                    __pbssBANK1 00A0                 SPI_sendString@i 0075              __size_of_buttonINT 007A  
                    __pmaintext 027D    __size_of_ManagerNormalButton 0035                      __pintentry 0004  
                    ??_SPI_send 0070         __size_of_getNextManager 000D          __end_of_SPI_sendString 039B  
__size_of_ManagerPriorityButton 0026   __end_of_ManagerPriorityButton 0350                         _SSPSTAT 0094  
            __size_of_rx_serial 000C              __size_of_usartInit 000E           _CashierPriorityButton 0350  
            __size_of_tx_serial 0008                   ?_wait_Connect 0070     __end_of_CashierNormalButton 032A  
                     ?_overflow 0070                         __ptext1 013C                         __ptext2 03C7  
                       __ptext3 0038                         __ptext4 039B                         __ptext5 03E2  
                       __ptext6 040A                         __ptext7 03EE                         __ptext8 0402  
                       __ptext9 0203                         _pcCount 007C                         _pmCount 007D  
             __end_of_buttonINT 027D                      _new_at_com 03EE                         _pcqueue 00B4  
                       _wait_ok 039B                 ?_SPI_sendString 0070                         _pmqueue 0034  
                       clrloop0 03FB            end_of_initialization 0035           __size_of_connect_wifi 0104  
                ??_wait_Connect 005A                       _RCSTAbits 0018                      ??_overflow 005A  
             __end_of_rx_serial 03EE               __end_of_usartInit 03D5                       _PORTAbits 0005  
                     _PORTBbits 0006               __end_of_tx_serial 040A                    _connect_wifi 0038  
        ?_CashierPriorityButton 0070                  tx_serial@aChar 005A                       _TXSTAbits 0098  
            SPI_sendString@data 0071                     ?_new_at_com 0070                  _getNextManager 03D5  
           start_initialization 0013               __size_of_SPI_send 0010             _ManagerNormalButton 02CD  
      __CFG_FOSC$INTRC_NOCLKOUT 0000            ?_ManagerNormalButton 0070                     __pdataBANK0 005C  
        __end_of_getNextManager 03E2                     __pbssCOMMON 0078                       ___latbits 0001  
                 __pcstackBANK0 0053            __end_of_wait_Connect 0203             __size_of_new_at_com 000C  
         ??_ManagerNormalButton 0071               __size_of_overflow 0005                 ?_getNextManager 0070  
              ??_SPI_sendString 0071                        ?_wait_ok 0070                       _buttonINT 0203  
         _ManagerPriorityButton 032A               interrupt_function 0004                       clear_ram0 03FA  
                      _PIE1bits 008C                        _PIR1bits 000C                        _SPI_send 03B7  
  __size_of_CashierNormalButton 0028                       _rx_serial 03E2                       _usartInit 03C7  
       ??_CashierPriorityButton 0070                       _tx_serial 0402                      ?_buttonINT 0070  
         __size_of_wait_Connect 00C7                      ?_rx_serial 0070                    ??_new_at_com 005B  
                    ?_usartInit 0070                      ?_tx_serial 0070                        __ptext10 03D5  
                      __ptext11 032A                        __ptext12 02CD                        __ptext13 0350  
                      __ptext14 0302                        __ptext15 0376                        __ptext16 03B7  
             __CFG_BOR4V$BOR40V 0000                __size_of_wait_ok 001C          ?_ManagerPriorityButton 0070  
                 __size_of_main 0050              __end_of_new_at_com 03FA                    _wait_Connect 013C  
                      _overflow 040A                      _INTCONbits 000B                     ??_buttonINT 0053  
                      intlevel1 0000                ??_getNextManager 0070                     ??_rx_serial 005A  
                   ??_usartInit 005A                     ??_tx_serial 005A     __end_of_ManagerNormalButton 0302  
           _CashierNormalButton 0302                      _SSPCONbits 0014  
